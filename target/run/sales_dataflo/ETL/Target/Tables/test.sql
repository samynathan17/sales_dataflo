
        
        
    

    

    merge into DATAFLOTEST_DATABASE.dbt_salesdataflo.test as DBT_INTERNAL_DEST
        using DATAFLOTEST_DATABASE.dbt_salesdataflo.test__dbt_tmp as DBT_INTERNAL_SOURCE
        on 
            DBT_INTERNAL_SOURCE.Account_ID = DBT_INTERNAL_DEST.Account_ID
        

    
    when matched then update set
        "ACCOUNT_ID" = DBT_INTERNAL_SOURCE."ACCOUNT_ID","ACCOUNT_NAME" = DBT_INTERNAL_SOURCE."ACCOUNT_NAME","ACCOUNT_TYPE" = DBT_INTERNAL_SOURCE."ACCOUNT_TYPE","SOURCE_ID" = DBT_INTERNAL_SOURCE."SOURCE_ID","ACTIVE_FLAG" = DBT_INTERNAL_SOURCE."ACTIVE_FLAG","INDUSTRY" = DBT_INTERNAL_SOURCE."INDUSTRY","ANNUAL_REVENUE" = DBT_INTERNAL_SOURCE."ANNUAL_REVENUE","EMPLOYEE_ID" = DBT_INTERNAL_SOURCE."EMPLOYEE_ID","INITIAL_CREATE_DT" = DBT_INTERNAL_SOURCE."INITIAL_CREATE_DT","SOURCE_TYPE" = DBT_INTERNAL_SOURCE."SOURCE_TYPE","DW_SESSION_NM" = DBT_INTERNAL_SOURCE."DW_SESSION_NM","DW_INS_UPD_DTS" = DBT_INTERNAL_SOURCE."DW_INS_UPD_DTS"
    

    when not matched then insert
        ("ACCOUNT_ID", "ACCOUNT_NAME", "ACCOUNT_TYPE", "SOURCE_ID", "ACTIVE_FLAG", "INDUSTRY", "ANNUAL_REVENUE", "EMPLOYEE_ID", "INITIAL_CREATE_DT", "SOURCE_TYPE", "DW_SESSION_NM", "DW_INS_UPD_DTS")
    values
        ("ACCOUNT_ID", "ACCOUNT_NAME", "ACCOUNT_TYPE", "SOURCE_ID", "ACTIVE_FLAG", "INDUSTRY", "ANNUAL_REVENUE", "EMPLOYEE_ID", "INITIAL_CREATE_DT", "SOURCE_TYPE", "DW_SESSION_NM", "DW_INS_UPD_DTS")

