{"logs": [], "results": [{"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_SALES_ENTITY where ENTITY_TYPE = 'SF'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'Contact_ID'\r\n      )\r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n {% if  V_SF_Schema[0:2] == 'SF'  %}  \r\n       \r\n  select distinct\r\n        {{ dbt_utils.surrogate_key('id') }}  AS Contact_ID,\r\n        ID as Source_ID,\r\n        IS_DELETED,\r\n        MASTER_RECORD_ID,\r\n        ACCOUNT_ID,\r\n        LAST_NAME,\r\n        FIRST_NAME,\r\n        SALUTATION,\r\n        NAME,\r\n        OTHER_STREET,\r\n        OTHER_CITY,\r\n        OTHER_STATE,\r\n        OTHER_POSTAL_CODE,\r\n        OTHER_COUNTRY,\r\n        MAILING_STREET,\r\n        MAILING_CITY,\r\n        MAILING_STATE,\r\n        MAILING_POSTAL_CODE,\r\n        MAILING_COUNTRY,\r\n        PHONE,\r\n        FAX,\r\n        MOBILE_PHONE,\r\n        HOME_PHONE,\r\n        OTHER_PHONE,\r\n        ASSISTANT_PHONE,\r\n        REPORTS_TO_ID,\r\n        EMAIL,\r\n        TITLE,\r\n        DEPARTMENT,\r\n        ASSISTANT_NAME,\r\n        LEAD_SOURCE,\r\n        BIRTHDATE,\r\n        DESCRIPTION,\r\n        OWNER_ID,\r\n        CREATED_DATE,\r\n        CREATED_BY_ID,\r\n        LAST_MODIFIED_DATE,\r\n        LAST_MODIFIED_BY_ID,\r\n        EMAIL_BOUNCED_REASON,\r\n        EMAIL_BOUNCED_DATE,\r\n        IS_EMAIL_BOUNCED,\r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_CONTACT_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.Contact\r\n        {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}  \r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Contact"], "unique_id": "model.sales_dataflo.Stg_Contact", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Contact.sql", "original_file_path": "ETL/Stage/Stg_Contact.sql", "name": "Stg_Contact", "resource_type": "model", "alias": "Stg_Contact", "checksum": {"name": "sha256", "checksum": "b64259a7f18215fdcd94405e666173c3cfc38ffdb75a99c654fa5c0facc7e82b"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "Contact_ID"}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Contact.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n   \n       \n  select distinct\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Contact_ID,\n        ID as Source_ID,\n        IS_DELETED,\n        MASTER_RECORD_ID,\n        ACCOUNT_ID,\n        LAST_NAME,\n        FIRST_NAME,\n        SALUTATION,\n        NAME,\n        OTHER_STREET,\n        OTHER_CITY,\n        OTHER_STATE,\n        OTHER_POSTAL_CODE,\n        OTHER_COUNTRY,\n        MAILING_STREET,\n        MAILING_CITY,\n        MAILING_STATE,\n        MAILING_POSTAL_CODE,\n        MAILING_COUNTRY,\n        PHONE,\n        FAX,\n        MOBILE_PHONE,\n        HOME_PHONE,\n        OTHER_PHONE,\n        ASSISTANT_PHONE,\n        REPORTS_TO_ID,\n        EMAIL,\n        TITLE,\n        DEPARTMENT,\n        ASSISTANT_NAME,\n        LEAD_SOURCE,\n        BIRTHDATE,\n        DESCRIPTION,\n        OWNER_ID,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        EMAIL_BOUNCED_REASON,\n        EMAIL_BOUNCED_DATE,\n        IS_EMAIL_BOUNCED,\n        'SF_TESTUSER_31122020' as Source_type,\n        'D_CONTACT_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_TESTUSER_31122020.Contact\n        \n            UNION ALL\n          \n    \n\n   \n       \n  select distinct\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Contact_ID,\n        ID as Source_ID,\n        IS_DELETED,\n        MASTER_RECORD_ID,\n        ACCOUNT_ID,\n        LAST_NAME,\n        FIRST_NAME,\n        SALUTATION,\n        NAME,\n        OTHER_STREET,\n        OTHER_CITY,\n        OTHER_STATE,\n        OTHER_POSTAL_CODE,\n        OTHER_COUNTRY,\n        MAILING_STREET,\n        MAILING_CITY,\n        MAILING_STATE,\n        MAILING_POSTAL_CODE,\n        MAILING_COUNTRY,\n        PHONE,\n        FAX,\n        MOBILE_PHONE,\n        HOME_PHONE,\n        OTHER_PHONE,\n        ASSISTANT_PHONE,\n        REPORTS_TO_ID,\n        EMAIL,\n        TITLE,\n        DEPARTMENT,\n        ASSISTANT_NAME,\n        LEAD_SOURCE,\n        BIRTHDATE,\n        DESCRIPTION,\n        OWNER_ID,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        EMAIL_BOUNCED_REASON,\n        EMAIL_BOUNCED_DATE,\n        IS_EMAIL_BOUNCED,\n        'SF_RKLIVE_06012021' as Source_type,\n        'D_CONTACT_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_RKLIVE_06012021.Contact\n          \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n   \n       \n  select distinct\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Contact_ID,\n        ID as Source_ID,\n        IS_DELETED,\n        MASTER_RECORD_ID,\n        ACCOUNT_ID,\n        LAST_NAME,\n        FIRST_NAME,\n        SALUTATION,\n        NAME,\n        OTHER_STREET,\n        OTHER_CITY,\n        OTHER_STATE,\n        OTHER_POSTAL_CODE,\n        OTHER_COUNTRY,\n        MAILING_STREET,\n        MAILING_CITY,\n        MAILING_STATE,\n        MAILING_POSTAL_CODE,\n        MAILING_COUNTRY,\n        PHONE,\n        FAX,\n        MOBILE_PHONE,\n        HOME_PHONE,\n        OTHER_PHONE,\n        ASSISTANT_PHONE,\n        REPORTS_TO_ID,\n        EMAIL,\n        TITLE,\n        DEPARTMENT,\n        ASSISTANT_NAME,\n        LEAD_SOURCE,\n        BIRTHDATE,\n        DESCRIPTION,\n        OWNER_ID,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        EMAIL_BOUNCED_REASON,\n        EMAIL_BOUNCED_DATE,\n        IS_EMAIL_BOUNCED,\n        'SF_TESTUSER_31122020' as Source_type,\n        'D_CONTACT_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_TESTUSER_31122020.Contact\n        \n            UNION ALL\n          \n    \n\n   \n       \n  select distinct\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Contact_ID,\n        ID as Source_ID,\n        IS_DELETED,\n        MASTER_RECORD_ID,\n        ACCOUNT_ID,\n        LAST_NAME,\n        FIRST_NAME,\n        SALUTATION,\n        NAME,\n        OTHER_STREET,\n        OTHER_CITY,\n        OTHER_STATE,\n        OTHER_POSTAL_CODE,\n        OTHER_COUNTRY,\n        MAILING_STREET,\n        MAILING_CITY,\n        MAILING_STATE,\n        MAILING_POSTAL_CODE,\n        MAILING_COUNTRY,\n        PHONE,\n        FAX,\n        MOBILE_PHONE,\n        HOME_PHONE,\n        OTHER_PHONE,\n        ASSISTANT_PHONE,\n        REPORTS_TO_ID,\n        EMAIL,\n        TITLE,\n        DEPARTMENT,\n        ASSISTANT_NAME,\n        LEAD_SOURCE,\n        BIRTHDATE,\n        DESCRIPTION,\n        OWNER_ID,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        EMAIL_BOUNCED_REASON,\n        EMAIL_BOUNCED_DATE,\n        IS_EMAIL_BOUNCED,\n        'SF_RKLIVE_06012021' as Source_type,\n        'D_CONTACT_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_RKLIVE_06012021.Contact\n          \n    \n"}, "error": null, "status": "SUCCESS 237697", "execution_time": 9.88901972770691, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:02:42.021280Z", "completed_at": "2021-02-10T18:02:42.581301Z"}, {"name": "execute", "started_at": "2021-02-10T18:02:42.581905Z", "completed_at": "2021-02-10T18:02:51.804951Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_SALES_ENTITY where ENTITY_TYPE = 'SF'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'User_id'\r\n      )\r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n\r\n {% if  V_SF_Schema[0:2] == 'SF'  %} \r\n    \r\n  select\r\n        {{ dbt_utils.surrogate_key('id') }}  AS User_id,\r\n        ID as Source_ID,\r\n        USERNAME,\r\n        LAST_NAME,\r\n        FIRST_NAME,\r\n        NAME,\r\n        COMPANY_NAME,\r\n        DIVISION,\r\n        DEPARTMENT,\r\n        TITLE,\r\n        STREET,\r\n        CITY,\r\n        STATE,\r\n        POSTAL_CODE,\r\n        COUNTRY,\r\n        EMAIL,\r\n        EMAIL_PREFERENCES_AUTO_BCC,\r\n        EMAIL_PREFERENCES_AUTO_BCC_STAY_IN_TOUCH,\r\n        EMAIL_PREFERENCES_STAY_IN_TOUCH_REMINDER,\r\n        SENDER_EMAIL,\r\n        SENDER_NAME,\r\n        SIGNATURE,\r\n        STAY_IN_TOUCH_SUBJECT,\r\n        STAY_IN_TOUCH_SIGNATURE,\r\n        STAY_IN_TOUCH_NOTE,\r\n        PHONE,\r\n        FAX,\r\n        MOBILE_PHONE,\r\n        ALIAS,\r\n        COMMUNITY_NICKNAME,\r\n        BADGE_TEXT,\r\n        IS_ACTIVE,\r\n        TIME_ZONE_SID_KEY,\r\n        USER_ROLE_ID,\r\n        LOCALE_SID_KEY,\r\n        RECEIVES_INFO_EMAILS,\r\n        RECEIVES_ADMIN_INFO_EMAILS,\r\n        EMAIL_ENCODING_KEY,\r\n        USER_TYPE,\r\n        LANGUAGE_LOCALE_KEY,\r\n        EMPLOYEE_NUMBER,\r\n        DELEGATED_APPROVER_ID,\r\n        MANAGER_ID,\r\n        LAST_LOGIN_DATE,\r\n        CREATED_DATE,\r\n        CREATED_BY_ID,\r\n        LAST_MODIFIED_DATE,\r\n        LAST_MODIFIED_BY_ID,\r\n        contact_id,\r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_USER_ROLE_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.user\r\n       {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}    \r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_User"], "unique_id": "model.sales_dataflo.Stg_User", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_User.sql", "original_file_path": "ETL/Stage/Stg_User.sql", "name": "Stg_User", "resource_type": "model", "alias": "Stg_User", "checksum": {"name": "sha256", "checksum": "fe132b523609e492bb84917e5a91d67b79875bf00bb4d4f2b9609fef9ad6abc4"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "User_id"}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_User.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n\n  \n    \n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS User_id,\n        ID as Source_ID,\n        USERNAME,\n        LAST_NAME,\n        FIRST_NAME,\n        NAME,\n        COMPANY_NAME,\n        DIVISION,\n        DEPARTMENT,\n        TITLE,\n        STREET,\n        CITY,\n        STATE,\n        POSTAL_CODE,\n        COUNTRY,\n        EMAIL,\n        EMAIL_PREFERENCES_AUTO_BCC,\n        EMAIL_PREFERENCES_AUTO_BCC_STAY_IN_TOUCH,\n        EMAIL_PREFERENCES_STAY_IN_TOUCH_REMINDER,\n        SENDER_EMAIL,\n        SENDER_NAME,\n        SIGNATURE,\n        STAY_IN_TOUCH_SUBJECT,\n        STAY_IN_TOUCH_SIGNATURE,\n        STAY_IN_TOUCH_NOTE,\n        PHONE,\n        FAX,\n        MOBILE_PHONE,\n        ALIAS,\n        COMMUNITY_NICKNAME,\n        BADGE_TEXT,\n        IS_ACTIVE,\n        TIME_ZONE_SID_KEY,\n        USER_ROLE_ID,\n        LOCALE_SID_KEY,\n        RECEIVES_INFO_EMAILS,\n        RECEIVES_ADMIN_INFO_EMAILS,\n        EMAIL_ENCODING_KEY,\n        USER_TYPE,\n        LANGUAGE_LOCALE_KEY,\n        EMPLOYEE_NUMBER,\n        DELEGATED_APPROVER_ID,\n        MANAGER_ID,\n        LAST_LOGIN_DATE,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        contact_id,\n        'SF_TESTUSER_31122020' as Source_type,\n        'D_USER_ROLE_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_TESTUSER_31122020.user\n       \n            UNION ALL\n            \n    \n\n\n  \n    \n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS User_id,\n        ID as Source_ID,\n        USERNAME,\n        LAST_NAME,\n        FIRST_NAME,\n        NAME,\n        COMPANY_NAME,\n        DIVISION,\n        DEPARTMENT,\n        TITLE,\n        STREET,\n        CITY,\n        STATE,\n        POSTAL_CODE,\n        COUNTRY,\n        EMAIL,\n        EMAIL_PREFERENCES_AUTO_BCC,\n        EMAIL_PREFERENCES_AUTO_BCC_STAY_IN_TOUCH,\n        EMAIL_PREFERENCES_STAY_IN_TOUCH_REMINDER,\n        SENDER_EMAIL,\n        SENDER_NAME,\n        SIGNATURE,\n        STAY_IN_TOUCH_SUBJECT,\n        STAY_IN_TOUCH_SIGNATURE,\n        STAY_IN_TOUCH_NOTE,\n        PHONE,\n        FAX,\n        MOBILE_PHONE,\n        ALIAS,\n        COMMUNITY_NICKNAME,\n        BADGE_TEXT,\n        IS_ACTIVE,\n        TIME_ZONE_SID_KEY,\n        USER_ROLE_ID,\n        LOCALE_SID_KEY,\n        RECEIVES_INFO_EMAILS,\n        RECEIVES_ADMIN_INFO_EMAILS,\n        EMAIL_ENCODING_KEY,\n        USER_TYPE,\n        LANGUAGE_LOCALE_KEY,\n        EMPLOYEE_NUMBER,\n        DELEGATED_APPROVER_ID,\n        MANAGER_ID,\n        LAST_LOGIN_DATE,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        contact_id,\n        'SF_RKLIVE_06012021' as Source_type,\n        'D_USER_ROLE_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_RKLIVE_06012021.user\n           \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n\n  \n    \n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS User_id,\n        ID as Source_ID,\n        USERNAME,\n        LAST_NAME,\n        FIRST_NAME,\n        NAME,\n        COMPANY_NAME,\n        DIVISION,\n        DEPARTMENT,\n        TITLE,\n        STREET,\n        CITY,\n        STATE,\n        POSTAL_CODE,\n        COUNTRY,\n        EMAIL,\n        EMAIL_PREFERENCES_AUTO_BCC,\n        EMAIL_PREFERENCES_AUTO_BCC_STAY_IN_TOUCH,\n        EMAIL_PREFERENCES_STAY_IN_TOUCH_REMINDER,\n        SENDER_EMAIL,\n        SENDER_NAME,\n        SIGNATURE,\n        STAY_IN_TOUCH_SUBJECT,\n        STAY_IN_TOUCH_SIGNATURE,\n        STAY_IN_TOUCH_NOTE,\n        PHONE,\n        FAX,\n        MOBILE_PHONE,\n        ALIAS,\n        COMMUNITY_NICKNAME,\n        BADGE_TEXT,\n        IS_ACTIVE,\n        TIME_ZONE_SID_KEY,\n        USER_ROLE_ID,\n        LOCALE_SID_KEY,\n        RECEIVES_INFO_EMAILS,\n        RECEIVES_ADMIN_INFO_EMAILS,\n        EMAIL_ENCODING_KEY,\n        USER_TYPE,\n        LANGUAGE_LOCALE_KEY,\n        EMPLOYEE_NUMBER,\n        DELEGATED_APPROVER_ID,\n        MANAGER_ID,\n        LAST_LOGIN_DATE,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        contact_id,\n        'SF_TESTUSER_31122020' as Source_type,\n        'D_USER_ROLE_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_TESTUSER_31122020.user\n       \n            UNION ALL\n            \n    \n\n\n  \n    \n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS User_id,\n        ID as Source_ID,\n        USERNAME,\n        LAST_NAME,\n        FIRST_NAME,\n        NAME,\n        COMPANY_NAME,\n        DIVISION,\n        DEPARTMENT,\n        TITLE,\n        STREET,\n        CITY,\n        STATE,\n        POSTAL_CODE,\n        COUNTRY,\n        EMAIL,\n        EMAIL_PREFERENCES_AUTO_BCC,\n        EMAIL_PREFERENCES_AUTO_BCC_STAY_IN_TOUCH,\n        EMAIL_PREFERENCES_STAY_IN_TOUCH_REMINDER,\n        SENDER_EMAIL,\n        SENDER_NAME,\n        SIGNATURE,\n        STAY_IN_TOUCH_SUBJECT,\n        STAY_IN_TOUCH_SIGNATURE,\n        STAY_IN_TOUCH_NOTE,\n        PHONE,\n        FAX,\n        MOBILE_PHONE,\n        ALIAS,\n        COMMUNITY_NICKNAME,\n        BADGE_TEXT,\n        IS_ACTIVE,\n        TIME_ZONE_SID_KEY,\n        USER_ROLE_ID,\n        LOCALE_SID_KEY,\n        RECEIVES_INFO_EMAILS,\n        RECEIVES_ADMIN_INFO_EMAILS,\n        EMAIL_ENCODING_KEY,\n        USER_TYPE,\n        LANGUAGE_LOCALE_KEY,\n        EMPLOYEE_NUMBER,\n        DELEGATED_APPROVER_ID,\n        MANAGER_ID,\n        LAST_LOGIN_DATE,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        contact_id,\n        'SF_RKLIVE_06012021' as Source_type,\n        'D_USER_ROLE_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_RKLIVE_06012021.user\n           \n    \n"}, "error": null, "status": "SUCCESS 3490", "execution_time": 4.293036222457886, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:02:51.918229Z", "completed_at": "2021-02-10T18:02:52.618124Z"}, {"name": "execute", "started_at": "2021-02-10T18:02:52.618693Z", "completed_at": "2021-02-10T18:02:56.126197Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_SALES_ENTITY where ENTITY_TYPE = 'SF'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'opportunity_id'\r\n      )\r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n\r\n{% if  V_SF_Schema[0:2] == 'SF'  %}    \r\n  \r\n  select\r\n        {{ dbt_utils.surrogate_key('id') }}  AS opportunity_id,\r\n        ID as Source_ID,\r\n        IS_DELETED,\r\n        ACCOUNT_ID,\r\n        NAME,\r\n        DESCRIPTION,\r\n        STAGE_NAME,\r\n        AMOUNT,\r\n        CLOSE_DATE,\r\n        TYPE,\r\n        NEXT_STEP,\r\n        LEAD_SOURCE,\r\n        IS_CLOSED,\r\n        IS_WON,\r\n        FORECAST_CATEGORY,\r\n        FORECAST_CATEGORY_NAME,\r\n        HAS_OPPORTUNITY_LINE_ITEM,\r\n        OWNER_ID,\r\n        CREATED_DATE,\r\n        CREATED_BY_ID,\r\n        LAST_MODIFIED_DATE,\r\n        LAST_MODIFIED_BY_ID,\r\n        SYSTEM_MODSTAMP,\r\n        LAST_ACTIVITY_DATE,\r\n        FISCAL_QUARTER,\r\n        FISCAL_YEAR,\r\n        FISCAL,\r\n        LAST_VIEWED_DATE,\r\n        LAST_REFERENCED_DATE,\r\n        HAS_OPEN_ACTIVITY,\r\n        HAS_OVERDUE_TASK,\r\n        CONTACT_ID,\r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_OPPORTUNITY_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.opportunity\r\n        {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}  \r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Opportunity"], "unique_id": "model.sales_dataflo.Stg_Opportunity", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Opportunity.sql", "original_file_path": "ETL/Stage/Stg_Opportunity.sql", "name": "Stg_Opportunity", "resource_type": "model", "alias": "Stg_Opportunity", "checksum": {"name": "sha256", "checksum": "070635506368ddfaddf09e593e72dadc753cb906be9c7da84e206c995f7fa3b7"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "opportunity_id"}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Opportunity.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n\n    \n  \n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS opportunity_id,\n        ID as Source_ID,\n        IS_DELETED,\n        ACCOUNT_ID,\n        NAME,\n        DESCRIPTION,\n        STAGE_NAME,\n        AMOUNT,\n        CLOSE_DATE,\n        TYPE,\n        NEXT_STEP,\n        LEAD_SOURCE,\n        IS_CLOSED,\n        IS_WON,\n        FORECAST_CATEGORY,\n        FORECAST_CATEGORY_NAME,\n        HAS_OPPORTUNITY_LINE_ITEM,\n        OWNER_ID,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        SYSTEM_MODSTAMP,\n        LAST_ACTIVITY_DATE,\n        FISCAL_QUARTER,\n        FISCAL_YEAR,\n        FISCAL,\n        LAST_VIEWED_DATE,\n        LAST_REFERENCED_DATE,\n        HAS_OPEN_ACTIVITY,\n        HAS_OVERDUE_TASK,\n        CONTACT_ID,\n        'SF_TESTUSER_31122020' as Source_type,\n        'D_OPPORTUNITY_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_TESTUSER_31122020.opportunity\n        \n            UNION ALL\n          \n    \n\n\n    \n  \n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS opportunity_id,\n        ID as Source_ID,\n        IS_DELETED,\n        ACCOUNT_ID,\n        NAME,\n        DESCRIPTION,\n        STAGE_NAME,\n        AMOUNT,\n        CLOSE_DATE,\n        TYPE,\n        NEXT_STEP,\n        LEAD_SOURCE,\n        IS_CLOSED,\n        IS_WON,\n        FORECAST_CATEGORY,\n        FORECAST_CATEGORY_NAME,\n        HAS_OPPORTUNITY_LINE_ITEM,\n        OWNER_ID,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        SYSTEM_MODSTAMP,\n        LAST_ACTIVITY_DATE,\n        FISCAL_QUARTER,\n        FISCAL_YEAR,\n        FISCAL,\n        LAST_VIEWED_DATE,\n        LAST_REFERENCED_DATE,\n        HAS_OPEN_ACTIVITY,\n        HAS_OVERDUE_TASK,\n        CONTACT_ID,\n        'SF_RKLIVE_06012021' as Source_type,\n        'D_OPPORTUNITY_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_RKLIVE_06012021.opportunity\n          \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n\n    \n  \n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS opportunity_id,\n        ID as Source_ID,\n        IS_DELETED,\n        ACCOUNT_ID,\n        NAME,\n        DESCRIPTION,\n        STAGE_NAME,\n        AMOUNT,\n        CLOSE_DATE,\n        TYPE,\n        NEXT_STEP,\n        LEAD_SOURCE,\n        IS_CLOSED,\n        IS_WON,\n        FORECAST_CATEGORY,\n        FORECAST_CATEGORY_NAME,\n        HAS_OPPORTUNITY_LINE_ITEM,\n        OWNER_ID,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        SYSTEM_MODSTAMP,\n        LAST_ACTIVITY_DATE,\n        FISCAL_QUARTER,\n        FISCAL_YEAR,\n        FISCAL,\n        LAST_VIEWED_DATE,\n        LAST_REFERENCED_DATE,\n        HAS_OPEN_ACTIVITY,\n        HAS_OVERDUE_TASK,\n        CONTACT_ID,\n        'SF_TESTUSER_31122020' as Source_type,\n        'D_OPPORTUNITY_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_TESTUSER_31122020.opportunity\n        \n            UNION ALL\n          \n    \n\n\n    \n  \n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS opportunity_id,\n        ID as Source_ID,\n        IS_DELETED,\n        ACCOUNT_ID,\n        NAME,\n        DESCRIPTION,\n        STAGE_NAME,\n        AMOUNT,\n        CLOSE_DATE,\n        TYPE,\n        NEXT_STEP,\n        LEAD_SOURCE,\n        IS_CLOSED,\n        IS_WON,\n        FORECAST_CATEGORY,\n        FORECAST_CATEGORY_NAME,\n        HAS_OPPORTUNITY_LINE_ITEM,\n        OWNER_ID,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        SYSTEM_MODSTAMP,\n        LAST_ACTIVITY_DATE,\n        FISCAL_QUARTER,\n        FISCAL_YEAR,\n        FISCAL,\n        LAST_VIEWED_DATE,\n        LAST_REFERENCED_DATE,\n        HAS_OPEN_ACTIVITY,\n        HAS_OVERDUE_TASK,\n        CONTACT_ID,\n        'SF_RKLIVE_06012021' as Source_type,\n        'D_OPPORTUNITY_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_RKLIVE_06012021.opportunity\n          \n    \n"}, "error": null, "status": "SUCCESS 11500", "execution_time": 3.640516519546509, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:02:56.214998Z", "completed_at": "2021-02-10T18:02:56.748210Z"}, {"name": "execute", "started_at": "2021-02-10T18:02:56.748829Z", "completed_at": "2021-02-10T18:02:59.764654Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_SALES_ENTITY where ENTITY_TYPE = 'SF'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'Stage_id'\r\n      )\r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n{% if  V_SF_Schema[0:2] == 'SF'  %}   \r\n \r\n  select\r\n        {{ dbt_utils.surrogate_key('id') }}  AS Stage_id,\r\n        ID as Source_ID,\r\n        MASTER_LABEL,\r\n        API_NAME,\r\n        IS_ACTIVE,\r\n        SORT_ORDER,\r\n        IS_CLOSED,\r\n        IS_WON,\r\n        FORECAST_CATEGORY,\r\n        FORECAST_CATEGORY_NAME,\r\n        DEFAULT_PROBABILITY,\r\n        DESCRIPTION,\r\n        CREATED_BY_ID,\r\n        CREATED_DATE,\r\n        LAST_MODIFIED_BY_ID,\r\n        LAST_MODIFIED_DATE,\r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_OPPORTUNITYSTAGES_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.opportunity_stage \r\n           {% if not loop.last %}\r\n            UNION ALL\r\n           {% endif %}  \r\n       {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Opportunity_Stage"], "unique_id": "model.sales_dataflo.Stg_Opportunity_Stage", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Opportunity_Stage.sql", "original_file_path": "ETL/Stage/Stg_Opportunity_Stage.sql", "name": "Stg_Opportunity_Stage", "resource_type": "model", "alias": "Stg_Opportunity_Stage", "checksum": {"name": "sha256", "checksum": "edebeae50c9dccb1b3ae5ef13baf637c3ce80df225b5eb7fee005b7fc558c620"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "Stage_id"}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Opportunity_Stage.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n   \n \n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Stage_id,\n        ID as Source_ID,\n        MASTER_LABEL,\n        API_NAME,\n        IS_ACTIVE,\n        SORT_ORDER,\n        IS_CLOSED,\n        IS_WON,\n        FORECAST_CATEGORY,\n        FORECAST_CATEGORY_NAME,\n        DEFAULT_PROBABILITY,\n        DESCRIPTION,\n        CREATED_BY_ID,\n        CREATED_DATE,\n        LAST_MODIFIED_BY_ID,\n        LAST_MODIFIED_DATE,\n        'SF_TESTUSER_31122020' as Source_type,\n        'D_OPPORTUNITYSTAGES_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_TESTUSER_31122020.opportunity_stage \n           \n            UNION ALL\n             \n       \n\n   \n \n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Stage_id,\n        ID as Source_ID,\n        MASTER_LABEL,\n        API_NAME,\n        IS_ACTIVE,\n        SORT_ORDER,\n        IS_CLOSED,\n        IS_WON,\n        FORECAST_CATEGORY,\n        FORECAST_CATEGORY_NAME,\n        DEFAULT_PROBABILITY,\n        DESCRIPTION,\n        CREATED_BY_ID,\n        CREATED_DATE,\n        LAST_MODIFIED_BY_ID,\n        LAST_MODIFIED_DATE,\n        'SF_RKLIVE_06012021' as Source_type,\n        'D_OPPORTUNITYSTAGES_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_RKLIVE_06012021.opportunity_stage \n             \n       \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n   \n \n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Stage_id,\n        ID as Source_ID,\n        MASTER_LABEL,\n        API_NAME,\n        IS_ACTIVE,\n        SORT_ORDER,\n        IS_CLOSED,\n        IS_WON,\n        FORECAST_CATEGORY,\n        FORECAST_CATEGORY_NAME,\n        DEFAULT_PROBABILITY,\n        DESCRIPTION,\n        CREATED_BY_ID,\n        CREATED_DATE,\n        LAST_MODIFIED_BY_ID,\n        LAST_MODIFIED_DATE,\n        'SF_TESTUSER_31122020' as Source_type,\n        'D_OPPORTUNITYSTAGES_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_TESTUSER_31122020.opportunity_stage \n           \n            UNION ALL\n             \n       \n\n   \n \n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Stage_id,\n        ID as Source_ID,\n        MASTER_LABEL,\n        API_NAME,\n        IS_ACTIVE,\n        SORT_ORDER,\n        IS_CLOSED,\n        IS_WON,\n        FORECAST_CATEGORY,\n        FORECAST_CATEGORY_NAME,\n        DEFAULT_PROBABILITY,\n        DESCRIPTION,\n        CREATED_BY_ID,\n        CREATED_DATE,\n        LAST_MODIFIED_BY_ID,\n        LAST_MODIFIED_DATE,\n        'SF_RKLIVE_06012021' as Source_type,\n        'D_OPPORTUNITYSTAGES_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_RKLIVE_06012021.opportunity_stage \n             \n       \n"}, "error": null, "status": "SUCCESS 75", "execution_time": 3.084557294845581, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:02:59.858013Z", "completed_at": "2021-02-10T18:03:00.516070Z"}, {"name": "execute", "started_at": "2021-02-10T18:03:00.516396Z", "completed_at": "2021-02-10T18:03:02.840591Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_SALES_ENTITY where ENTITY_TYPE = 'SF'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'User_Role_id'\r\n      )\r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n         {% if  V_SF_Schema[0:2] == 'SF'  %}\r\n\r\nselect\r\n        {{ dbt_utils.surrogate_key('id') }}  AS User_Role_id,\r\n        ID as Source_ID,\r\n        NAME,\r\n        PARENT_ROLE_ID,\r\n        ROLLUP_DESCRIPTION,\r\n        OPPORTUNITY_ACCESS_FOR_ACCOUNT_OWNER,\r\n        CASE_ACCESS_FOR_ACCOUNT_OWNER,\r\n        CONTACT_ACCESS_FOR_ACCOUNT_OWNER,\r\n        FORECAST_USER_ID,\r\n        MAY_FORECAST_MANAGER_SHARE,\r\n        LAST_MODIFIED_DATE,\r\n        LAST_MODIFIED_BY_ID,\r\n        SYSTEM_MODSTAMP,\r\n        DEVELOPER_NAME,\r\n        PORTAL_ACCOUNT_ID,\r\n        PORTAL_TYPE,\r\n        PORTAL_ACCOUNT_OWNER_ID,\r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_USER_ROLE_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.user_role\r\n            {% if not loop.last %}\r\n               UNION ALL\r\n            {% endif %}  \r\n        {% endif %}\r\n\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_User_Role"], "unique_id": "model.sales_dataflo.Stg_User_Role", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_User_Role.sql", "original_file_path": "ETL/Stage/Stg_User_Role.sql", "name": "Stg_User_Role", "resource_type": "model", "alias": "Stg_User_Role", "checksum": {"name": "sha256", "checksum": "6d4b46a6dda7f203d3e5c850ed328e043bd9466e18e8bab37d0218b27e325394"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "User_Role_id"}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_User_Role.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n         \n\nselect\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS User_Role_id,\n        ID as Source_ID,\n        NAME,\n        PARENT_ROLE_ID,\n        ROLLUP_DESCRIPTION,\n        OPPORTUNITY_ACCESS_FOR_ACCOUNT_OWNER,\n        CASE_ACCESS_FOR_ACCOUNT_OWNER,\n        CONTACT_ACCESS_FOR_ACCOUNT_OWNER,\n        FORECAST_USER_ID,\n        MAY_FORECAST_MANAGER_SHARE,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        SYSTEM_MODSTAMP,\n        DEVELOPER_NAME,\n        PORTAL_ACCOUNT_ID,\n        PORTAL_TYPE,\n        PORTAL_ACCOUNT_OWNER_ID,\n        'SF_TESTUSER_31122020' as Source_type,\n        'D_USER_ROLE_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_TESTUSER_31122020.user_role\n            \n               UNION ALL\n              \n        \n\n\n         \n\nselect\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS User_Role_id,\n        ID as Source_ID,\n        NAME,\n        PARENT_ROLE_ID,\n        ROLLUP_DESCRIPTION,\n        OPPORTUNITY_ACCESS_FOR_ACCOUNT_OWNER,\n        CASE_ACCESS_FOR_ACCOUNT_OWNER,\n        CONTACT_ACCESS_FOR_ACCOUNT_OWNER,\n        FORECAST_USER_ID,\n        MAY_FORECAST_MANAGER_SHARE,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        SYSTEM_MODSTAMP,\n        DEVELOPER_NAME,\n        PORTAL_ACCOUNT_ID,\n        PORTAL_TYPE,\n        PORTAL_ACCOUNT_OWNER_ID,\n        'SF_RKLIVE_06012021' as Source_type,\n        'D_USER_ROLE_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_RKLIVE_06012021.user_role\n              \n        \n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n         \n\nselect\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS User_Role_id,\n        ID as Source_ID,\n        NAME,\n        PARENT_ROLE_ID,\n        ROLLUP_DESCRIPTION,\n        OPPORTUNITY_ACCESS_FOR_ACCOUNT_OWNER,\n        CASE_ACCESS_FOR_ACCOUNT_OWNER,\n        CONTACT_ACCESS_FOR_ACCOUNT_OWNER,\n        FORECAST_USER_ID,\n        MAY_FORECAST_MANAGER_SHARE,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        SYSTEM_MODSTAMP,\n        DEVELOPER_NAME,\n        PORTAL_ACCOUNT_ID,\n        PORTAL_TYPE,\n        PORTAL_ACCOUNT_OWNER_ID,\n        'SF_TESTUSER_31122020' as Source_type,\n        'D_USER_ROLE_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_TESTUSER_31122020.user_role\n            \n               UNION ALL\n              \n        \n\n\n         \n\nselect\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS User_Role_id,\n        ID as Source_ID,\n        NAME,\n        PARENT_ROLE_ID,\n        ROLLUP_DESCRIPTION,\n        OPPORTUNITY_ACCESS_FOR_ACCOUNT_OWNER,\n        CASE_ACCESS_FOR_ACCOUNT_OWNER,\n        CONTACT_ACCESS_FOR_ACCOUNT_OWNER,\n        FORECAST_USER_ID,\n        MAY_FORECAST_MANAGER_SHARE,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        SYSTEM_MODSTAMP,\n        DEVELOPER_NAME,\n        PORTAL_ACCOUNT_ID,\n        PORTAL_TYPE,\n        PORTAL_ACCOUNT_OWNER_ID,\n        'SF_RKLIVE_06012021' as Source_type,\n        'D_USER_ROLE_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_RKLIVE_06012021.user_role\n              \n        \n\n"}, "error": null, "status": "SUCCESS 447", "execution_time": 2.9923412799835205, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:03:02.946780Z", "completed_at": "2021-02-10T18:03:03.520761Z"}, {"name": "execute", "started_at": "2021-02-10T18:03:03.521195Z", "completed_at": "2021-02-10T18:03:05.858476Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_SALES_ENTITY where ENTITY_TYPE = 'HS'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'DEAL_ID'\r\n      )\r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n {% if  V_SF_Schema[0:2] == 'HS'  %}    \r\n  select\r\n        {{ dbt_utils.surrogate_key('DEAL_ID') }}  AS DEAL_ID,\r\n        DEAL_ID as Source_DEAL_ID,\r\n        PORTAL_ID,\r\n        IS_DELETED,\r\n        _FIVETRAN_SYNCED,\r\n        PROPERTY_HS_DEAL_STAGE_PROBABILITY,\r\n        PROPERTY_HS_CLOSED_AMOUNT_IN_HOME_CURRENCY,\r\n        PROPERTY_HS_LASTMODIFIEDDATE,\r\n        PROPERTY_HS_CLOSED_AMOUNT,\r\n        PROPERTY_HS_TIME_IN_APPOINTMENTSCHEDULED,\r\n        PROPERTY_HS_IS_CLOSED,\r\n        PROPERTY_HS_CREATED_BY_USER_ID,\r\n        PROPERTY_DAYS_TO_CLOSE,\r\n        PROPERTY_HS_DATE_ENTERED_APPOINTMENTSCHEDULED,\r\n        PROPERTY_HS_PROJECTED_AMOUNT,\r\n        PROPERTY_HS_PROJECTED_AMOUNT_IN_HOME_CURRENCY,\r\n        PROPERTY_AMOUNT_IN_HOME_CURRENCY,\r\n        PROPERTY_HS_DATE_EXITED_DECISIONMAKERBOUGHTIN,\r\n        PROPERTY_HS_DATE_ENTERED_DECISIONMAKERBOUGHTIN,\r\n        PROPERTY_HS_DATE_EXITED_CONTRACTSENT,\r\n        PROPERTY_HS_DATE_EXITED_APPOINTMENTSCHEDULED,\r\n        PROPERTY_HS_DATE_ENTERED_PRESENTATIONSCHEDULED,\r\n        PROPERTY_HS_TIME_IN_QUALIFIEDTOBUY,\r\n        PROPERTY_HS_TIME_IN_CLOSEDWON,\r\n        PROPERTY_HS_TIME_IN_DECISIONMAKERBOUGHTIN,\r\n        PROPERTY_HS_DATE_EXITED_PRESENTATIONSCHEDULED,\r\n        PROPERTY_HS_DATE_ENTERED_QUALIFIEDTOBUY,\r\n        PROPERTY_HS_DATE_EXITED_QUALIFIEDTOBUY,\r\n        PROPERTY_HS_DATE_ENTERED_CONTRACTSENT,\r\n        PROPERTY_HS_TIME_IN_PRESENTATIONSCHEDULED,\r\n        PROPERTY_HS_DATE_ENTERED_CLOSEDWON,\r\n        PROPERTY_HS_TIME_IN_CONTRACTSENT,\r\n        PROPERTY_HS_NEXT_STEP,\r\n        PROPERTY_HS_MANUAL_FORECAST_CATEGORY,\r\n        PROPERTY_DEALNAME,\r\n        PROPERTY_CLOSEDATE,\r\n        PROPERTY_CREATEDATE,\r\n        DEAL_PIPELINE_STAGE_ID,\r\n        OWNER_ID,\r\n        PROPERTY_HS_UPDATED_BY_USER_ID,\r\n        PROPERTY_HS_CREATEDATE,\r\n        PROPERTY_HS_USER_IDS_OF_ALL_OWNERS,\r\n        PROPERTY_HS_ALL_OWNER_IDS,\r\n        DEAL_PIPELINE_ID,\r\n        PROPERTY_HUBSPOT_OWNER_ASSIGNEDDATE,\r\n        PROPERTY_PRODUCT_OF_INTEREST,\r\n        PROPERTY_AMOUNT,\r\n        PROPERTY_POINT_OF_CONTACT,\r\n        PROPERTY_DEALTYPE,   \r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_DEAL_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS    \r\n    FROM {{ V_SF_Schema }}.Deal\r\n    {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}\r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Deal"], "unique_id": "model.sales_dataflo.Stg_Deal", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Deal.sql", "original_file_path": "ETL/Stage/Stg_Deal.sql", "name": "Stg_Deal", "resource_type": "model", "alias": "Stg_Deal", "checksum": {"name": "sha256", "checksum": "46d60a09eb7a1599e08ff6b3adcd22020438c7da5ec0ac5d903d87e71f496858"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "DEAL_ID"}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Deal.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n     \n  select\n        md5(cast(\n    \n    coalesce(cast(DEAL_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS DEAL_ID,\n        DEAL_ID as Source_DEAL_ID,\n        PORTAL_ID,\n        IS_DELETED,\n        _FIVETRAN_SYNCED,\n        PROPERTY_HS_DEAL_STAGE_PROBABILITY,\n        PROPERTY_HS_CLOSED_AMOUNT_IN_HOME_CURRENCY,\n        PROPERTY_HS_LASTMODIFIEDDATE,\n        PROPERTY_HS_CLOSED_AMOUNT,\n        PROPERTY_HS_TIME_IN_APPOINTMENTSCHEDULED,\n        PROPERTY_HS_IS_CLOSED,\n        PROPERTY_HS_CREATED_BY_USER_ID,\n        PROPERTY_DAYS_TO_CLOSE,\n        PROPERTY_HS_DATE_ENTERED_APPOINTMENTSCHEDULED,\n        PROPERTY_HS_PROJECTED_AMOUNT,\n        PROPERTY_HS_PROJECTED_AMOUNT_IN_HOME_CURRENCY,\n        PROPERTY_AMOUNT_IN_HOME_CURRENCY,\n        PROPERTY_HS_DATE_EXITED_DECISIONMAKERBOUGHTIN,\n        PROPERTY_HS_DATE_ENTERED_DECISIONMAKERBOUGHTIN,\n        PROPERTY_HS_DATE_EXITED_CONTRACTSENT,\n        PROPERTY_HS_DATE_EXITED_APPOINTMENTSCHEDULED,\n        PROPERTY_HS_DATE_ENTERED_PRESENTATIONSCHEDULED,\n        PROPERTY_HS_TIME_IN_QUALIFIEDTOBUY,\n        PROPERTY_HS_TIME_IN_CLOSEDWON,\n        PROPERTY_HS_TIME_IN_DECISIONMAKERBOUGHTIN,\n        PROPERTY_HS_DATE_EXITED_PRESENTATIONSCHEDULED,\n        PROPERTY_HS_DATE_ENTERED_QUALIFIEDTOBUY,\n        PROPERTY_HS_DATE_EXITED_QUALIFIEDTOBUY,\n        PROPERTY_HS_DATE_ENTERED_CONTRACTSENT,\n        PROPERTY_HS_TIME_IN_PRESENTATIONSCHEDULED,\n        PROPERTY_HS_DATE_ENTERED_CLOSEDWON,\n        PROPERTY_HS_TIME_IN_CONTRACTSENT,\n        PROPERTY_HS_NEXT_STEP,\n        PROPERTY_HS_MANUAL_FORECAST_CATEGORY,\n        PROPERTY_DEALNAME,\n        PROPERTY_CLOSEDATE,\n        PROPERTY_CREATEDATE,\n        DEAL_PIPELINE_STAGE_ID,\n        OWNER_ID,\n        PROPERTY_HS_UPDATED_BY_USER_ID,\n        PROPERTY_HS_CREATEDATE,\n        PROPERTY_HS_USER_IDS_OF_ALL_OWNERS,\n        PROPERTY_HS_ALL_OWNER_IDS,\n        DEAL_PIPELINE_ID,\n        PROPERTY_HUBSPOT_OWNER_ASSIGNEDDATE,\n        PROPERTY_PRODUCT_OF_INTEREST,\n        PROPERTY_AMOUNT,\n        PROPERTY_POINT_OF_CONTACT,\n        PROPERTY_DEALTYPE,   \n        'HS_TESTUSER_09012021' as Source_type,\n        'D_DEAL_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS    \n    FROM HS_TESTUSER_09012021.Deal\n    \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n     \n  select\n        md5(cast(\n    \n    coalesce(cast(DEAL_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS DEAL_ID,\n        DEAL_ID as Source_DEAL_ID,\n        PORTAL_ID,\n        IS_DELETED,\n        _FIVETRAN_SYNCED,\n        PROPERTY_HS_DEAL_STAGE_PROBABILITY,\n        PROPERTY_HS_CLOSED_AMOUNT_IN_HOME_CURRENCY,\n        PROPERTY_HS_LASTMODIFIEDDATE,\n        PROPERTY_HS_CLOSED_AMOUNT,\n        PROPERTY_HS_TIME_IN_APPOINTMENTSCHEDULED,\n        PROPERTY_HS_IS_CLOSED,\n        PROPERTY_HS_CREATED_BY_USER_ID,\n        PROPERTY_DAYS_TO_CLOSE,\n        PROPERTY_HS_DATE_ENTERED_APPOINTMENTSCHEDULED,\n        PROPERTY_HS_PROJECTED_AMOUNT,\n        PROPERTY_HS_PROJECTED_AMOUNT_IN_HOME_CURRENCY,\n        PROPERTY_AMOUNT_IN_HOME_CURRENCY,\n        PROPERTY_HS_DATE_EXITED_DECISIONMAKERBOUGHTIN,\n        PROPERTY_HS_DATE_ENTERED_DECISIONMAKERBOUGHTIN,\n        PROPERTY_HS_DATE_EXITED_CONTRACTSENT,\n        PROPERTY_HS_DATE_EXITED_APPOINTMENTSCHEDULED,\n        PROPERTY_HS_DATE_ENTERED_PRESENTATIONSCHEDULED,\n        PROPERTY_HS_TIME_IN_QUALIFIEDTOBUY,\n        PROPERTY_HS_TIME_IN_CLOSEDWON,\n        PROPERTY_HS_TIME_IN_DECISIONMAKERBOUGHTIN,\n        PROPERTY_HS_DATE_EXITED_PRESENTATIONSCHEDULED,\n        PROPERTY_HS_DATE_ENTERED_QUALIFIEDTOBUY,\n        PROPERTY_HS_DATE_EXITED_QUALIFIEDTOBUY,\n        PROPERTY_HS_DATE_ENTERED_CONTRACTSENT,\n        PROPERTY_HS_TIME_IN_PRESENTATIONSCHEDULED,\n        PROPERTY_HS_DATE_ENTERED_CLOSEDWON,\n        PROPERTY_HS_TIME_IN_CONTRACTSENT,\n        PROPERTY_HS_NEXT_STEP,\n        PROPERTY_HS_MANUAL_FORECAST_CATEGORY,\n        PROPERTY_DEALNAME,\n        PROPERTY_CLOSEDATE,\n        PROPERTY_CREATEDATE,\n        DEAL_PIPELINE_STAGE_ID,\n        OWNER_ID,\n        PROPERTY_HS_UPDATED_BY_USER_ID,\n        PROPERTY_HS_CREATEDATE,\n        PROPERTY_HS_USER_IDS_OF_ALL_OWNERS,\n        PROPERTY_HS_ALL_OWNER_IDS,\n        DEAL_PIPELINE_ID,\n        PROPERTY_HUBSPOT_OWNER_ASSIGNEDDATE,\n        PROPERTY_PRODUCT_OF_INTEREST,\n        PROPERTY_AMOUNT,\n        PROPERTY_POINT_OF_CONTACT,\n        PROPERTY_DEALTYPE,   \n        'HS_TESTUSER_09012021' as Source_type,\n        'D_DEAL_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS    \n    FROM HS_TESTUSER_09012021.Deal\n    \n    \n"}, "error": null, "status": "SUCCESS 9972", "execution_time": 3.9155592918395996, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:03:05.943642Z", "completed_at": "2021-02-10T18:03:06.463432Z"}, {"name": "execute", "started_at": "2021-02-10T18:03:06.464001Z", "completed_at": "2021-02-10T18:03:09.779072Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_SALES_ENTITY where ENTITY_TYPE = 'HS'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'PIPELINE_STAGE_ID'\r\n      )\r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n {% if  V_SF_Schema[0:2] == 'HS'  %}    \r\n  select\r\n        {{ dbt_utils.surrogate_key('STAGE_ID') }}  AS PIPELINE_STAGE_ID,\r\n        STAGE_ID as Source_STAGE_ID,\r\n        PIPELINE_ID,\r\n        LABEL,\r\n        PROBABILITY,\r\n        ACTIVE,\r\n        DISPLAY_ORDER,\r\n        CLOSED_WON, \r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_DEAL_PIPELINE_STAGE_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS    \r\n    FROM {{ V_SF_Schema }}.DEAL_PIPELINE_STAGE\r\n    {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}\r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Deal_Pipeline_Stage"], "unique_id": "model.sales_dataflo.Stg_Deal_Pipeline_Stage", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Deal_Pipeline_Stage.sql", "original_file_path": "ETL/Stage/Stg_Deal_Pipeline_Stage.sql", "name": "Stg_Deal_Pipeline_Stage", "resource_type": "model", "alias": "Stg_Deal_Pipeline_Stage", "checksum": {"name": "sha256", "checksum": "8004a9cbdb486de296639360a5d034216d957951810d706ae5a4a954fb0492e7"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "PIPELINE_STAGE_ID"}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Deal_Pipeline_Stage.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n     \n  select\n        md5(cast(\n    \n    coalesce(cast(STAGE_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS PIPELINE_STAGE_ID,\n        STAGE_ID as Source_STAGE_ID,\n        PIPELINE_ID,\n        LABEL,\n        PROBABILITY,\n        ACTIVE,\n        DISPLAY_ORDER,\n        CLOSED_WON, \n        'HS_TESTUSER_09012021' as Source_type,\n        'D_DEAL_PIPELINE_STAGE_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS    \n    FROM HS_TESTUSER_09012021.DEAL_PIPELINE_STAGE\n    \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n     \n  select\n        md5(cast(\n    \n    coalesce(cast(STAGE_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS PIPELINE_STAGE_ID,\n        STAGE_ID as Source_STAGE_ID,\n        PIPELINE_ID,\n        LABEL,\n        PROBABILITY,\n        ACTIVE,\n        DISPLAY_ORDER,\n        CLOSED_WON, \n        'HS_TESTUSER_09012021' as Source_type,\n        'D_DEAL_PIPELINE_STAGE_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS    \n    FROM HS_TESTUSER_09012021.DEAL_PIPELINE_STAGE\n    \n    \n"}, "error": null, "status": "SUCCESS 7", "execution_time": 2.853679656982422, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:03:09.863309Z", "completed_at": "2021-02-10T18:03:10.356980Z"}, {"name": "execute", "started_at": "2021-02-10T18:03:10.357554Z", "completed_at": "2021-02-10T18:03:12.630726Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_SALES_ENTITY where ENTITY_TYPE = 'HS'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'OWNER_ID'\r\n      )\r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n {% if  V_SF_Schema[0:2] == 'HS'  %}    \r\n  select\r\n        {{ dbt_utils.surrogate_key('OWNER_ID') }}  AS OWNER_ID,\r\n        OWNER_ID as Source_OWNER_ID,\r\n        PORTAL_ID,\r\n        TYPE,\r\n        FIRST_NAME,\r\n        LAST_NAME,\r\n        EMAIL,\r\n        CREATED_AT,\r\n        UPDATED_AT,\r\n        IS_ACTIVE,\r\n        ACTIVE_USER_ID,\r\n        USER_ID_INCLUDING_INACTIVE,   \r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_OWNER_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS    \r\n    FROM {{ V_SF_Schema }}.Owner\r\n    {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}\r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Owner"], "unique_id": "model.sales_dataflo.Stg_Owner", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Owner.sql", "original_file_path": "ETL/Stage/Stg_Owner.sql", "name": "Stg_Owner", "resource_type": "model", "alias": "Stg_Owner", "checksum": {"name": "sha256", "checksum": "fb9ffa3797b81c3b085ed0dac6dd8382a9d241bd8fd9a26278cc4616abf09e48"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "OWNER_ID"}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Owner.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n     \n  select\n        md5(cast(\n    \n    coalesce(cast(OWNER_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS OWNER_ID,\n        OWNER_ID as Source_OWNER_ID,\n        PORTAL_ID,\n        TYPE,\n        FIRST_NAME,\n        LAST_NAME,\n        EMAIL,\n        CREATED_AT,\n        UPDATED_AT,\n        IS_ACTIVE,\n        ACTIVE_USER_ID,\n        USER_ID_INCLUDING_INACTIVE,   \n        'HS_TESTUSER_09012021' as Source_type,\n        'D_OWNER_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS    \n    FROM HS_TESTUSER_09012021.Owner\n    \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n     \n  select\n        md5(cast(\n    \n    coalesce(cast(OWNER_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS OWNER_ID,\n        OWNER_ID as Source_OWNER_ID,\n        PORTAL_ID,\n        TYPE,\n        FIRST_NAME,\n        LAST_NAME,\n        EMAIL,\n        CREATED_AT,\n        UPDATED_AT,\n        IS_ACTIVE,\n        ACTIVE_USER_ID,\n        USER_ID_INCLUDING_INACTIVE,   \n        'HS_TESTUSER_09012021' as Source_type,\n        'D_OWNER_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS    \n    FROM HS_TESTUSER_09012021.Owner\n    \n    \n"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.719813823699951, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:03:12.721079Z", "completed_at": "2021-02-10T18:03:13.212642Z"}, {"name": "execute", "started_at": "2021-02-10T18:03:13.213471Z", "completed_at": "2021-02-10T18:03:15.338342Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{ config(\r\n    materialized=\"table\"\r\n) \r\n}}\r\n\r\nwith source as \r\n(\r\n\r\n    {{ dbt_utils.date_spine(\r\n        datepart=\"day\",\r\n        start_date=\"to_date('01/01/2015', 'dd/mm/yyyy')\",\r\n        end_date=\"dateadd(week, 53, current_date)\"\r\n       )\r\n    }}\r\n) ,Dim_Calendar as(\r\nselect\r\n      d.date_day AS Calendar_ID,\r\n      d.date_day as cldr_date,\r\n      cast({{ dbt_utils.date_trunc('month',  'd.date_day')}} as date) as cldr_mnth_strt_dt,    \r\n       cast({{ dbt_utils.last_day('d.date_day', 'month') }} as date) as cldr_mnth_end_dt,\r\n        cast({{ dbt_utils.date_trunc('quarter', 'd.date_day')}} as date) as cldr_qtr_strt_dt,\r\n        cast({{ dbt_utils.last_day('d.date_day', 'quarter') }} as date) as cldr_qtr_end_dt,\r\n        cast({{ dbt_utils.date_trunc('year', 'd.date_day')}} as date) as cldr_year_start_dt,\r\n        cast({{ dbt_utils.last_day('d.date_day', 'year') }} as date) as cldr_year_end_dt,\r\n        cast({{ dbt_utils.date_trunc('week', 'd.date_day')}} as date) as week_start_date,\r\n        cast({{ dbt_utils.last_day('d.date_day', 'week') }} as date) as week_end_date,\r\n        {{ dbt_date.day_name('d.date_day', short=true) }} as day_short_name,\r\n      {{ dbt_date.month_name('d.date_day', short=true) }} as month_short_name,\r\n        cast(to_char(d.date_day, 'MMMM') as varchar(20))as month_name,\r\n        cast({{ dbt_date.date_part('day', 'd.date_day') }} as {{ dbt_utils.type_int() }}) as cldr_day_num,\r\n        cast({{ dbt_date.date_part('week', 'd.date_day') }} as {{ dbt_utils.type_int() }}) as cldr_week_num,\r\n        'Q' || cast({{ dbt_date.date_part('quarter', 'd.date_day') }} as {{ dbt_utils.type_int() }}) as cldr_qtr,\r\n        cast({{ dbt_date.date_part('year', 'd.date_day') }} as {{ dbt_utils.type_int() }}) as year,\r\n        cast(\r\n            case\r\n                when {{ dbt_date.date_part('dayofweek', 'd.date_day') }} = 0 then 7\r\n                else {{ dbt_date.date_part('dayofweek',  'd.date_day')  }}\r\n            end as {{ dbt_utils.type_int() }}\r\n            ) as day_of_week,\r\n        case\r\n            when {{ dbt_date.date_part('dayofweek',  'd.date_day') }} = 0 then 'Y'\r\n            else 'N'\r\n        end as weekend_flag,   \r\n      {{ dbt_utils.current_timestamp() }} as DW_INS_UPD_DTS,\r\n      'D_CALENDAR_DIM_LOAD' as DW_SESSION_NM\r\nfrom\r\n    source  d\r\norder by 2)\r\n\r\nselect * from Dim_Calendar", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Calendar"], "unique_id": "model.sales_dataflo.Dim_Calendar", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Calendar.sql", "original_file_path": "ETL/Target/Tables/Dim_Calendar.sql", "name": "Dim_Calendar", "resource_type": "model", "alias": "Dim_Calendar", "checksum": {"name": "sha256", "checksum": "6c1a5e25cfe1b5820adf93549b6abe71b578439a125849f4b4b30f51610bfda7"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.date_spine", "macro.dbt_utils.date_trunc", "macro.dbt_utils.last_day", "macro.dbt_date.day_name", "macro.dbt_date.month_name", "macro.dbt_date.date_part", "macro.dbt_utils.type_int", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Calendar.sql", "deferred": false, "compiled_sql": "\n\n\n\nwith source as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n     + \n    \n    p11.generated_number * pow(2, 11)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n     cross join \n    \n    p as p11\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 2603\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2015', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= dateadd(week, 53, current_date)\n\n)\n\nselect * from filtered\n\n\n) ,Dim_Calendar as(\nselect\n      d.date_day AS Calendar_ID,\n      d.date_day as cldr_date,\n      cast(\n    date_trunc('month', d.date_day)\n as date) as cldr_mnth_strt_dt,    \n       cast(\n  cast(\n        \n  \n\n    dateadd(\n        day,\n        -1,\n        \n  \n\n    dateadd(\n        month,\n        1,\n        \n    date_trunc('month', d.date_day)\n\n        )\n\n\n\n        )\n\n\n\n        as date)\n as date) as cldr_mnth_end_dt,\n        cast(\n    date_trunc('quarter', d.date_day)\n as date) as cldr_qtr_strt_dt,\n        cast(\n  cast(\n        \n  \n\n    dateadd(\n        day,\n        -1,\n        \n  \n\n    dateadd(\n        quarter,\n        1,\n        \n    date_trunc('quarter', d.date_day)\n\n        )\n\n\n\n        )\n\n\n\n        as date)\n as date) as cldr_qtr_end_dt,\n        cast(\n    date_trunc('year', d.date_day)\n as date) as cldr_year_start_dt,\n        cast(\n  cast(\n        \n  \n\n    dateadd(\n        day,\n        -1,\n        \n  \n\n    dateadd(\n        year,\n        1,\n        \n    date_trunc('year', d.date_day)\n\n        )\n\n\n\n        )\n\n\n\n        as date)\n as date) as cldr_year_end_dt,\n        cast(\n    date_trunc('week', d.date_day)\n as date) as week_start_date,\n        cast(\n  cast(\n        \n  \n\n    dateadd(\n        day,\n        -1,\n        \n  \n\n    dateadd(\n        week,\n        1,\n        \n    date_trunc('week', d.date_day)\n\n        )\n\n\n\n        )\n\n\n\n        as date)\n as date) as week_end_date,\n        to_char(d.date_day, 'Dy') as day_short_name,\n      to_char(d.date_day, 'MON') as month_short_name,\n        cast(to_char(d.date_day, 'MMMM') as varchar(20))as month_name,\n        cast(date_part('day', d.date_day) as \n    int\n) as cldr_day_num,\n        cast(date_part('week', d.date_day) as \n    int\n) as cldr_week_num,\n        'Q' || cast(date_part('quarter', d.date_day) as \n    int\n) as cldr_qtr,\n        cast(date_part('year', d.date_day) as \n    int\n) as year,\n        cast(\n            case\n                when date_part('dayofweek', d.date_day) = 0 then 7\n                else date_part('dayofweek', d.date_day)\n            end as \n    int\n\n            ) as day_of_week,\n        case\n            when date_part('dayofweek', d.date_day) = 0 then 'Y'\n            else 'N'\n        end as weekend_flag,   \n      \n    current_timestamp::\n    timestamp_ntz\n\n as DW_INS_UPD_DTS,\n      'D_CALENDAR_DIM_LOAD' as DW_SESSION_NM\nfrom\n    source  d\norder by 2)\n\nselect * from Dim_Calendar", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nwith source as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n     + \n    \n    p11.generated_number * pow(2, 11)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n     cross join \n    \n    p as p11\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 2603\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2015', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= dateadd(week, 53, current_date)\n\n)\n\nselect * from filtered\n\n\n) ,Dim_Calendar as(\nselect\n      d.date_day AS Calendar_ID,\n      d.date_day as cldr_date,\n      cast(\n    date_trunc('month', d.date_day)\n as date) as cldr_mnth_strt_dt,    \n       cast(\n  cast(\n        \n  \n\n    dateadd(\n        day,\n        -1,\n        \n  \n\n    dateadd(\n        month,\n        1,\n        \n    date_trunc('month', d.date_day)\n\n        )\n\n\n\n        )\n\n\n\n        as date)\n as date) as cldr_mnth_end_dt,\n        cast(\n    date_trunc('quarter', d.date_day)\n as date) as cldr_qtr_strt_dt,\n        cast(\n  cast(\n        \n  \n\n    dateadd(\n        day,\n        -1,\n        \n  \n\n    dateadd(\n        quarter,\n        1,\n        \n    date_trunc('quarter', d.date_day)\n\n        )\n\n\n\n        )\n\n\n\n        as date)\n as date) as cldr_qtr_end_dt,\n        cast(\n    date_trunc('year', d.date_day)\n as date) as cldr_year_start_dt,\n        cast(\n  cast(\n        \n  \n\n    dateadd(\n        day,\n        -1,\n        \n  \n\n    dateadd(\n        year,\n        1,\n        \n    date_trunc('year', d.date_day)\n\n        )\n\n\n\n        )\n\n\n\n        as date)\n as date) as cldr_year_end_dt,\n        cast(\n    date_trunc('week', d.date_day)\n as date) as week_start_date,\n        cast(\n  cast(\n        \n  \n\n    dateadd(\n        day,\n        -1,\n        \n  \n\n    dateadd(\n        week,\n        1,\n        \n    date_trunc('week', d.date_day)\n\n        )\n\n\n\n        )\n\n\n\n        as date)\n as date) as week_end_date,\n        to_char(d.date_day, 'Dy') as day_short_name,\n      to_char(d.date_day, 'MON') as month_short_name,\n        cast(to_char(d.date_day, 'MMMM') as varchar(20))as month_name,\n        cast(date_part('day', d.date_day) as \n    int\n) as cldr_day_num,\n        cast(date_part('week', d.date_day) as \n    int\n) as cldr_week_num,\n        'Q' || cast(date_part('quarter', d.date_day) as \n    int\n) as cldr_qtr,\n        cast(date_part('year', d.date_day) as \n    int\n) as year,\n        cast(\n            case\n                when date_part('dayofweek', d.date_day) = 0 then 7\n                else date_part('dayofweek', d.date_day)\n            end as \n    int\n\n            ) as day_of_week,\n        case\n            when date_part('dayofweek', d.date_day) = 0 then 'Y'\n            else 'N'\n        end as weekend_flag,   \n      \n    current_timestamp::\n    timestamp_ntz\n\n as DW_INS_UPD_DTS,\n      'D_CALENDAR_DIM_LOAD' as DW_SESSION_NM\nfrom\n    source  d\norder by 2)\n\nselect * from Dim_Calendar"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.521243095397949, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:03:15.444283Z", "completed_at": "2021-02-10T18:03:16.266388Z"}, {"name": "execute", "started_at": "2021-02-10T18:03:16.266961Z", "completed_at": "2021-02-10T18:03:17.878465Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_SALES_ENTITY where ENTITY_TYPE = 'SF'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'lead_id'\r\n      )\r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n{% if  V_SF_Schema[0:2] == 'SF'  %}\r\n\r\n  select\r\n        {{ dbt_utils.surrogate_key('id') }}  AS lead_id,\r\n        ID as Source_ID,\r\n        IS_DELETED,\r\n        MASTER_RECORD_ID,\r\n        LAST_NAME,\r\n        FIRST_NAME,\r\n        SALUTATION,\r\n        NAME,\r\n        TITLE,\r\n        COMPANY,\r\n        STREET,\r\n        CITY,\r\n        STATE,\r\n        POSTAL_CODE,\r\n        COUNTRY,\r\n        LATITUDE,\r\n        LONGITUDE,\r\n        GEOCODE_ACCURACY,\r\n        PHONE,\r\n        EMAIL,\r\n        WEBSITE,\r\n        PHOTO_URL,\r\n        DESCRIPTION,\r\n        LEAD_SOURCE,\r\n        STATUS,\r\n        INDUSTRY,\r\n        RATING,\r\n        ANNUAL_REVENUE,\r\n        NUMBER_OF_EMPLOYEES,\r\n        OWNER_ID,\r\n        IS_CONVERTED,\r\n        CONVERTED_DATE,\r\n        CONVERTED_ACCOUNT_ID,\r\n        CONVERTED_CONTACT_ID,\r\n        CONVERTED_OPPORTUNITY_ID,\r\n        IS_UNREAD_BY_OWNER,\r\n        CREATED_DATE,\r\n        CREATED_BY_ID,\r\n        LAST_MODIFIED_DATE,\r\n        LAST_MODIFIED_BY_ID,\r\n        SYSTEM_MODSTAMP,\r\n        LAST_ACTIVITY_DATE,\r\n        LAST_VIEWED_DATE,\r\n        LAST_REFERENCED_DATE,\r\n        JIGSAW,\r\n        JIGSAW_CONTACT_ID,\r\n        EMAIL_BOUNCED_REASON,\r\n        EMAIL_BOUNCED_DATE,\r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_LEAD_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.Lead\r\n        {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}  \r\n     {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Lead"], "unique_id": "model.sales_dataflo.Stg_Lead", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Lead.sql", "original_file_path": "ETL/Stage/Stg_Lead.sql", "name": "Stg_Lead", "resource_type": "model", "alias": "Stg_Lead", "checksum": {"name": "sha256", "checksum": "0696dd5e63d3fd87d6fc8947770a9101e0dfdd58d478e3d7202b7a23bcd8b905"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "lead_id"}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Lead.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n\n\n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS lead_id,\n        ID as Source_ID,\n        IS_DELETED,\n        MASTER_RECORD_ID,\n        LAST_NAME,\n        FIRST_NAME,\n        SALUTATION,\n        NAME,\n        TITLE,\n        COMPANY,\n        STREET,\n        CITY,\n        STATE,\n        POSTAL_CODE,\n        COUNTRY,\n        LATITUDE,\n        LONGITUDE,\n        GEOCODE_ACCURACY,\n        PHONE,\n        EMAIL,\n        WEBSITE,\n        PHOTO_URL,\n        DESCRIPTION,\n        LEAD_SOURCE,\n        STATUS,\n        INDUSTRY,\n        RATING,\n        ANNUAL_REVENUE,\n        NUMBER_OF_EMPLOYEES,\n        OWNER_ID,\n        IS_CONVERTED,\n        CONVERTED_DATE,\n        CONVERTED_ACCOUNT_ID,\n        CONVERTED_CONTACT_ID,\n        CONVERTED_OPPORTUNITY_ID,\n        IS_UNREAD_BY_OWNER,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        SYSTEM_MODSTAMP,\n        LAST_ACTIVITY_DATE,\n        LAST_VIEWED_DATE,\n        LAST_REFERENCED_DATE,\n        JIGSAW,\n        JIGSAW_CONTACT_ID,\n        EMAIL_BOUNCED_REASON,\n        EMAIL_BOUNCED_DATE,\n        'SF_TESTUSER_31122020' as Source_type,\n        'D_LEAD_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_TESTUSER_31122020.Lead\n        \n            UNION ALL\n          \n     \n\n\n\n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS lead_id,\n        ID as Source_ID,\n        IS_DELETED,\n        MASTER_RECORD_ID,\n        LAST_NAME,\n        FIRST_NAME,\n        SALUTATION,\n        NAME,\n        TITLE,\n        COMPANY,\n        STREET,\n        CITY,\n        STATE,\n        POSTAL_CODE,\n        COUNTRY,\n        LATITUDE,\n        LONGITUDE,\n        GEOCODE_ACCURACY,\n        PHONE,\n        EMAIL,\n        WEBSITE,\n        PHOTO_URL,\n        DESCRIPTION,\n        LEAD_SOURCE,\n        STATUS,\n        INDUSTRY,\n        RATING,\n        ANNUAL_REVENUE,\n        NUMBER_OF_EMPLOYEES,\n        OWNER_ID,\n        IS_CONVERTED,\n        CONVERTED_DATE,\n        CONVERTED_ACCOUNT_ID,\n        CONVERTED_CONTACT_ID,\n        CONVERTED_OPPORTUNITY_ID,\n        IS_UNREAD_BY_OWNER,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        SYSTEM_MODSTAMP,\n        LAST_ACTIVITY_DATE,\n        LAST_VIEWED_DATE,\n        LAST_REFERENCED_DATE,\n        JIGSAW,\n        JIGSAW_CONTACT_ID,\n        EMAIL_BOUNCED_REASON,\n        EMAIL_BOUNCED_DATE,\n        'SF_RKLIVE_06012021' as Source_type,\n        'D_LEAD_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_RKLIVE_06012021.Lead\n          \n     \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n\n\n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS lead_id,\n        ID as Source_ID,\n        IS_DELETED,\n        MASTER_RECORD_ID,\n        LAST_NAME,\n        FIRST_NAME,\n        SALUTATION,\n        NAME,\n        TITLE,\n        COMPANY,\n        STREET,\n        CITY,\n        STATE,\n        POSTAL_CODE,\n        COUNTRY,\n        LATITUDE,\n        LONGITUDE,\n        GEOCODE_ACCURACY,\n        PHONE,\n        EMAIL,\n        WEBSITE,\n        PHOTO_URL,\n        DESCRIPTION,\n        LEAD_SOURCE,\n        STATUS,\n        INDUSTRY,\n        RATING,\n        ANNUAL_REVENUE,\n        NUMBER_OF_EMPLOYEES,\n        OWNER_ID,\n        IS_CONVERTED,\n        CONVERTED_DATE,\n        CONVERTED_ACCOUNT_ID,\n        CONVERTED_CONTACT_ID,\n        CONVERTED_OPPORTUNITY_ID,\n        IS_UNREAD_BY_OWNER,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        SYSTEM_MODSTAMP,\n        LAST_ACTIVITY_DATE,\n        LAST_VIEWED_DATE,\n        LAST_REFERENCED_DATE,\n        JIGSAW,\n        JIGSAW_CONTACT_ID,\n        EMAIL_BOUNCED_REASON,\n        EMAIL_BOUNCED_DATE,\n        'SF_TESTUSER_31122020' as Source_type,\n        'D_LEAD_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_TESTUSER_31122020.Lead\n        \n            UNION ALL\n          \n     \n\n\n\n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS lead_id,\n        ID as Source_ID,\n        IS_DELETED,\n        MASTER_RECORD_ID,\n        LAST_NAME,\n        FIRST_NAME,\n        SALUTATION,\n        NAME,\n        TITLE,\n        COMPANY,\n        STREET,\n        CITY,\n        STATE,\n        POSTAL_CODE,\n        COUNTRY,\n        LATITUDE,\n        LONGITUDE,\n        GEOCODE_ACCURACY,\n        PHONE,\n        EMAIL,\n        WEBSITE,\n        PHOTO_URL,\n        DESCRIPTION,\n        LEAD_SOURCE,\n        STATUS,\n        INDUSTRY,\n        RATING,\n        ANNUAL_REVENUE,\n        NUMBER_OF_EMPLOYEES,\n        OWNER_ID,\n        IS_CONVERTED,\n        CONVERTED_DATE,\n        CONVERTED_ACCOUNT_ID,\n        CONVERTED_CONTACT_ID,\n        CONVERTED_OPPORTUNITY_ID,\n        IS_UNREAD_BY_OWNER,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        SYSTEM_MODSTAMP,\n        LAST_ACTIVITY_DATE,\n        LAST_VIEWED_DATE,\n        LAST_REFERENCED_DATE,\n        JIGSAW,\n        JIGSAW_CONTACT_ID,\n        EMAIL_BOUNCED_REASON,\n        EMAIL_BOUNCED_DATE,\n        'SF_RKLIVE_06012021' as Source_type,\n        'D_LEAD_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_RKLIVE_06012021.Lead\n          \n     \n"}, "error": null, "status": "SUCCESS 115015", "execution_time": 8.96333384513855, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:03:17.969627Z", "completed_at": "2021-02-10T18:03:18.589332Z"}, {"name": "execute", "started_at": "2021-02-10T18:03:18.589717Z", "completed_at": "2021-02-10T18:03:26.802701Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_SALES_ENTITY where ENTITY_TYPE = 'SF'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'Period_ID'\r\n      )\r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n{% if  V_SF_Schema[0:2] == 'SF'  %}\r\n  \r\n  select\r\n        {{ dbt_utils.surrogate_key('id') }}  AS Period_ID,\r\n        ID as Source_ID,\r\n        FISCAL_YEAR_SETTINGS_ID,\r\n        TYPE,\r\n        START_DATE,\r\n        END_DATE,\r\n        SYSTEM_MODSTAMP,\r\n        IS_FORECAST_PERIOD,\r\n        QUARTER_LABEL,\r\n        PERIOD_LABEL,\r\n        NUMBER,\r\n        FULLY_QUALIFIED_LABEL,\r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_ACCOUNT_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.Period\r\n            {% if not loop.last %}\r\n               UNION ALL\r\n            {% endif %}  \r\n        {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Period"], "unique_id": "model.sales_dataflo.Stg_Period", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Period.sql", "original_file_path": "ETL/Stage/Stg_Period.sql", "name": "Stg_Period", "resource_type": "model", "alias": "Stg_Period", "checksum": {"name": "sha256", "checksum": "96a70706fbc3e0c5c37141ed1ba5c512d0f9c12b3a9d665b96aa1e61ab484d79"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "Period_ID"}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Period.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n\n  \n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Period_ID,\n        ID as Source_ID,\n        FISCAL_YEAR_SETTINGS_ID,\n        TYPE,\n        START_DATE,\n        END_DATE,\n        SYSTEM_MODSTAMP,\n        IS_FORECAST_PERIOD,\n        QUARTER_LABEL,\n        PERIOD_LABEL,\n        NUMBER,\n        FULLY_QUALIFIED_LABEL,\n        'SF_TESTUSER_31122020' as Source_type,\n        'D_ACCOUNT_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_TESTUSER_31122020.Period\n            \n               UNION ALL\n              \n        \n\n\n  \n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Period_ID,\n        ID as Source_ID,\n        FISCAL_YEAR_SETTINGS_ID,\n        TYPE,\n        START_DATE,\n        END_DATE,\n        SYSTEM_MODSTAMP,\n        IS_FORECAST_PERIOD,\n        QUARTER_LABEL,\n        PERIOD_LABEL,\n        NUMBER,\n        FULLY_QUALIFIED_LABEL,\n        'SF_RKLIVE_06012021' as Source_type,\n        'D_ACCOUNT_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_RKLIVE_06012021.Period\n              \n        \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n\n  \n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Period_ID,\n        ID as Source_ID,\n        FISCAL_YEAR_SETTINGS_ID,\n        TYPE,\n        START_DATE,\n        END_DATE,\n        SYSTEM_MODSTAMP,\n        IS_FORECAST_PERIOD,\n        QUARTER_LABEL,\n        PERIOD_LABEL,\n        NUMBER,\n        FULLY_QUALIFIED_LABEL,\n        'SF_TESTUSER_31122020' as Source_type,\n        'D_ACCOUNT_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_TESTUSER_31122020.Period\n            \n               UNION ALL\n              \n        \n\n\n  \n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Period_ID,\n        ID as Source_ID,\n        FISCAL_YEAR_SETTINGS_ID,\n        TYPE,\n        START_DATE,\n        END_DATE,\n        SYSTEM_MODSTAMP,\n        IS_FORECAST_PERIOD,\n        QUARTER_LABEL,\n        PERIOD_LABEL,\n        NUMBER,\n        FULLY_QUALIFIED_LABEL,\n        'SF_RKLIVE_06012021' as Source_type,\n        'D_ACCOUNT_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_RKLIVE_06012021.Period\n              \n        \n"}, "error": null, "status": "SUCCESS 595", "execution_time": 3.235460042953491, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:03:26.936088Z", "completed_at": "2021-02-10T18:03:27.653406Z"}, {"name": "execute", "started_at": "2021-02-10T18:03:27.653994Z", "completed_at": "2021-02-10T18:03:30.093061Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_SALES_ENTITY where ENTITY_TYPE = 'SF'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'Account_ID'\r\n      )\r\n}}\r\n\r\n\r\n{% for V_SF_Schema in results %}\r\n\r\n {% if  V_SF_Schema[0:2] == 'SF'  %}   \r\n      \r\n  select\r\n        {{ dbt_utils.surrogate_key('id') }}  AS Account_ID,\r\n        ID as Source_ID,\r\n        IS_DELETED,\r\n        MASTER_RECORD_ID,\r\n        NAME,\r\n        TYPE,\r\n        PARENT_ID,\r\n        BILLING_STREET,\r\n        BILLING_CITY,\r\n        BILLING_STATE,\r\n        BILLING_POSTAL_CODE,\r\n        BILLING_COUNTRY,\r\n        SHIPPING_STREET,\r\n        SHIPPING_CITY,\r\n        SHIPPING_STATE,\r\n        SHIPPING_POSTAL_CODE,\r\n        SHIPPING_COUNTRY,\r\n        PHONE,\r\n        FAX,\r\n        WEBSITE,\r\n        SIC,\r\n        INDUSTRY,\r\n        ANNUAL_REVENUE,\r\n        NUMBER_OF_EMPLOYEES,\r\n        OWNERSHIP,\r\n        DESCRIPTION,\r\n        OWNER_ID,\r\n        CREATED_DATE,\r\n        CREATED_BY_ID,\r\n        LAST_MODIFIED_DATE,\r\n        LAST_MODIFIED_BY_ID,\r\n        ACCOUNT_SOURCE,\r\n        SIC_DESC,\r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_ACCOUNT_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.Account\r\n         {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}\r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Account"], "unique_id": "model.sales_dataflo.Stg_Account", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Account.sql", "original_file_path": "ETL/Stage/Stg_Account.sql", "name": "Stg_Account", "resource_type": "model", "alias": "Stg_Account", "checksum": {"name": "sha256", "checksum": "9c98ebe6bad6a963ab790041d4885e6bbff02ad038f10aeb2503d2412afbad2f"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "Account_ID"}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Account.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n\n\n    \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Account_ID,\n        ID as Source_ID,\n        IS_DELETED,\n        MASTER_RECORD_ID,\n        NAME,\n        TYPE,\n        PARENT_ID,\n        BILLING_STREET,\n        BILLING_CITY,\n        BILLING_STATE,\n        BILLING_POSTAL_CODE,\n        BILLING_COUNTRY,\n        SHIPPING_STREET,\n        SHIPPING_CITY,\n        SHIPPING_STATE,\n        SHIPPING_POSTAL_CODE,\n        SHIPPING_COUNTRY,\n        PHONE,\n        FAX,\n        WEBSITE,\n        SIC,\n        INDUSTRY,\n        ANNUAL_REVENUE,\n        NUMBER_OF_EMPLOYEES,\n        OWNERSHIP,\n        DESCRIPTION,\n        OWNER_ID,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        ACCOUNT_SOURCE,\n        SIC_DESC,\n        'SF_TESTUSER_31122020' as Source_type,\n        'D_ACCOUNT_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_TESTUSER_31122020.Account\n         \n            UNION ALL\n        \n    \n\n\n    \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Account_ID,\n        ID as Source_ID,\n        IS_DELETED,\n        MASTER_RECORD_ID,\n        NAME,\n        TYPE,\n        PARENT_ID,\n        BILLING_STREET,\n        BILLING_CITY,\n        BILLING_STATE,\n        BILLING_POSTAL_CODE,\n        BILLING_COUNTRY,\n        SHIPPING_STREET,\n        SHIPPING_CITY,\n        SHIPPING_STATE,\n        SHIPPING_POSTAL_CODE,\n        SHIPPING_COUNTRY,\n        PHONE,\n        FAX,\n        WEBSITE,\n        SIC,\n        INDUSTRY,\n        ANNUAL_REVENUE,\n        NUMBER_OF_EMPLOYEES,\n        OWNERSHIP,\n        DESCRIPTION,\n        OWNER_ID,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        ACCOUNT_SOURCE,\n        SIC_DESC,\n        'SF_RKLIVE_06012021' as Source_type,\n        'D_ACCOUNT_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_RKLIVE_06012021.Account\n         \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n\n\n    \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Account_ID,\n        ID as Source_ID,\n        IS_DELETED,\n        MASTER_RECORD_ID,\n        NAME,\n        TYPE,\n        PARENT_ID,\n        BILLING_STREET,\n        BILLING_CITY,\n        BILLING_STATE,\n        BILLING_POSTAL_CODE,\n        BILLING_COUNTRY,\n        SHIPPING_STREET,\n        SHIPPING_CITY,\n        SHIPPING_STATE,\n        SHIPPING_POSTAL_CODE,\n        SHIPPING_COUNTRY,\n        PHONE,\n        FAX,\n        WEBSITE,\n        SIC,\n        INDUSTRY,\n        ANNUAL_REVENUE,\n        NUMBER_OF_EMPLOYEES,\n        OWNERSHIP,\n        DESCRIPTION,\n        OWNER_ID,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        ACCOUNT_SOURCE,\n        SIC_DESC,\n        'SF_TESTUSER_31122020' as Source_type,\n        'D_ACCOUNT_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_TESTUSER_31122020.Account\n         \n            UNION ALL\n        \n    \n\n\n    \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Account_ID,\n        ID as Source_ID,\n        IS_DELETED,\n        MASTER_RECORD_ID,\n        NAME,\n        TYPE,\n        PARENT_ID,\n        BILLING_STREET,\n        BILLING_CITY,\n        BILLING_STATE,\n        BILLING_POSTAL_CODE,\n        BILLING_COUNTRY,\n        SHIPPING_STREET,\n        SHIPPING_CITY,\n        SHIPPING_STATE,\n        SHIPPING_POSTAL_CODE,\n        SHIPPING_COUNTRY,\n        PHONE,\n        FAX,\n        WEBSITE,\n        SIC,\n        INDUSTRY,\n        ANNUAL_REVENUE,\n        NUMBER_OF_EMPLOYEES,\n        OWNERSHIP,\n        DESCRIPTION,\n        OWNER_ID,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        ACCOUNT_SOURCE,\n        SIC_DESC,\n        'SF_RKLIVE_06012021' as Source_type,\n        'D_ACCOUNT_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_RKLIVE_06012021.Account\n         \n    \n"}, "error": null, "status": "SUCCESS 16247", "execution_time": 4.576059341430664, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:03:30.175831Z", "completed_at": "2021-02-10T18:03:30.617076Z"}, {"name": "execute", "started_at": "2021-02-10T18:03:30.617553Z", "completed_at": "2021-02-10T18:03:34.657569Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_SALES_ENTITY where ENTITY_TYPE = 'SF'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'Campaign_ID'\r\n      )\r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n{% if  V_SF_Schema[0:2] == 'SF'  %}\r\n\r\n select\r\n        {{ dbt_utils.surrogate_key('id') }}  AS Campaign_ID,\r\n        ID as Source_ID,\r\n        IS_DELETED,\r\n        NAME,\r\n        TYPE,\r\n        STATUS,\r\n        START_DATE,\r\n        END_DATE,\r\n        EXPECTED_REVENUE,\r\n        BUDGETED_COST,\r\n        ACTUAL_COST,\r\n        EXPECTED_RESPONSE,\r\n        NUMBER_SENT,\r\n        IS_ACTIVE,\r\n        DESCRIPTION,\r\n        NUMBER_OF_LEADS,\r\n        NUMBER_OF_CONVERTED_LEADS,\r\n        NUMBER_OF_CONTACTS,\r\n        NUMBER_OF_RESPONSES,\r\n        NUMBER_OF_OPPORTUNITIES,\r\n        NUMBER_OF_WON_OPPORTUNITIES,\r\n        AMOUNT_ALL_OPPORTUNITIES,\r\n        AMOUNT_WON_OPPORTUNITIES,\r\n        OWNER_ID,\r\n        CREATED_DATE,\r\n        CREATED_BY_ID,\r\n        LAST_MODIFIED_DATE,\r\n        LAST_MODIFIED_BY_ID,\r\n        SYSTEM_MODSTAMP,\r\n        LAST_ACTIVITY_DATE,\r\n        LAST_VIEWED_DATE,\r\n        LAST_REFERENCED_DATE,\r\n        CAMPAIGN_MEMBER_RECORD_TYPE_ID,\r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_CAMPAIGN_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.Campaign\r\n        {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}  \r\n     {% endif %}\r\n\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Campaign"], "unique_id": "model.sales_dataflo.Stg_Campaign", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Campaign.sql", "original_file_path": "ETL/Stage/Stg_Campaign.sql", "name": "Stg_Campaign", "resource_type": "model", "alias": "Stg_Campaign", "checksum": {"name": "sha256", "checksum": "77cbffc2c63aa8c1b5284d51b06b5f5fa18ed35406521026a945351ee5e76aa1"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "Campaign_ID"}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Campaign.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n\n\n select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Campaign_ID,\n        ID as Source_ID,\n        IS_DELETED,\n        NAME,\n        TYPE,\n        STATUS,\n        START_DATE,\n        END_DATE,\n        EXPECTED_REVENUE,\n        BUDGETED_COST,\n        ACTUAL_COST,\n        EXPECTED_RESPONSE,\n        NUMBER_SENT,\n        IS_ACTIVE,\n        DESCRIPTION,\n        NUMBER_OF_LEADS,\n        NUMBER_OF_CONVERTED_LEADS,\n        NUMBER_OF_CONTACTS,\n        NUMBER_OF_RESPONSES,\n        NUMBER_OF_OPPORTUNITIES,\n        NUMBER_OF_WON_OPPORTUNITIES,\n        AMOUNT_ALL_OPPORTUNITIES,\n        AMOUNT_WON_OPPORTUNITIES,\n        OWNER_ID,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        SYSTEM_MODSTAMP,\n        LAST_ACTIVITY_DATE,\n        LAST_VIEWED_DATE,\n        LAST_REFERENCED_DATE,\n        CAMPAIGN_MEMBER_RECORD_TYPE_ID,\n        'SF_TESTUSER_31122020' as Source_type,\n        'D_CAMPAIGN_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_TESTUSER_31122020.Campaign\n        \n            UNION ALL\n          \n     \n\n\n\n\n select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Campaign_ID,\n        ID as Source_ID,\n        IS_DELETED,\n        NAME,\n        TYPE,\n        STATUS,\n        START_DATE,\n        END_DATE,\n        EXPECTED_REVENUE,\n        BUDGETED_COST,\n        ACTUAL_COST,\n        EXPECTED_RESPONSE,\n        NUMBER_SENT,\n        IS_ACTIVE,\n        DESCRIPTION,\n        NUMBER_OF_LEADS,\n        NUMBER_OF_CONVERTED_LEADS,\n        NUMBER_OF_CONTACTS,\n        NUMBER_OF_RESPONSES,\n        NUMBER_OF_OPPORTUNITIES,\n        NUMBER_OF_WON_OPPORTUNITIES,\n        AMOUNT_ALL_OPPORTUNITIES,\n        AMOUNT_WON_OPPORTUNITIES,\n        OWNER_ID,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        SYSTEM_MODSTAMP,\n        LAST_ACTIVITY_DATE,\n        LAST_VIEWED_DATE,\n        LAST_REFERENCED_DATE,\n        CAMPAIGN_MEMBER_RECORD_TYPE_ID,\n        'SF_RKLIVE_06012021' as Source_type,\n        'D_CAMPAIGN_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_RKLIVE_06012021.Campaign\n          \n     \n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n\n\n select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Campaign_ID,\n        ID as Source_ID,\n        IS_DELETED,\n        NAME,\n        TYPE,\n        STATUS,\n        START_DATE,\n        END_DATE,\n        EXPECTED_REVENUE,\n        BUDGETED_COST,\n        ACTUAL_COST,\n        EXPECTED_RESPONSE,\n        NUMBER_SENT,\n        IS_ACTIVE,\n        DESCRIPTION,\n        NUMBER_OF_LEADS,\n        NUMBER_OF_CONVERTED_LEADS,\n        NUMBER_OF_CONTACTS,\n        NUMBER_OF_RESPONSES,\n        NUMBER_OF_OPPORTUNITIES,\n        NUMBER_OF_WON_OPPORTUNITIES,\n        AMOUNT_ALL_OPPORTUNITIES,\n        AMOUNT_WON_OPPORTUNITIES,\n        OWNER_ID,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        SYSTEM_MODSTAMP,\n        LAST_ACTIVITY_DATE,\n        LAST_VIEWED_DATE,\n        LAST_REFERENCED_DATE,\n        CAMPAIGN_MEMBER_RECORD_TYPE_ID,\n        'SF_TESTUSER_31122020' as Source_type,\n        'D_CAMPAIGN_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_TESTUSER_31122020.Campaign\n        \n            UNION ALL\n          \n     \n\n\n\n\n select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Campaign_ID,\n        ID as Source_ID,\n        IS_DELETED,\n        NAME,\n        TYPE,\n        STATUS,\n        START_DATE,\n        END_DATE,\n        EXPECTED_REVENUE,\n        BUDGETED_COST,\n        ACTUAL_COST,\n        EXPECTED_RESPONSE,\n        NUMBER_SENT,\n        IS_ACTIVE,\n        DESCRIPTION,\n        NUMBER_OF_LEADS,\n        NUMBER_OF_CONVERTED_LEADS,\n        NUMBER_OF_CONTACTS,\n        NUMBER_OF_RESPONSES,\n        NUMBER_OF_OPPORTUNITIES,\n        NUMBER_OF_WON_OPPORTUNITIES,\n        AMOUNT_ALL_OPPORTUNITIES,\n        AMOUNT_WON_OPPORTUNITIES,\n        OWNER_ID,\n        CREATED_DATE,\n        CREATED_BY_ID,\n        LAST_MODIFIED_DATE,\n        LAST_MODIFIED_BY_ID,\n        SYSTEM_MODSTAMP,\n        LAST_ACTIVITY_DATE,\n        LAST_VIEWED_DATE,\n        LAST_REFERENCED_DATE,\n        CAMPAIGN_MEMBER_RECORD_TYPE_ID,\n        'SF_RKLIVE_06012021' as Source_type,\n        'D_CAMPAIGN_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM SF_RKLIVE_06012021.Campaign\n          \n     \n\n"}, "error": null, "status": "SUCCESS 1274", "execution_time": 3.7716171741485596, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:03:34.755734Z", "completed_at": "2021-02-10T18:03:35.448745Z"}, {"name": "execute", "started_at": "2021-02-10T18:03:35.449385Z", "completed_at": "2021-02-10T18:03:38.437714Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_MKT_ENTITY where ENTITY_TYPE = 'GA'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n{% for V_SF_Schema in results %}\r\n\r\n {% if  V_SF_Schema[0:2] == 'GA'  %} \r\n      \r\n  select\r\n        {{ dbt_utils.surrogate_key('_FIVETRAN_ID') }}  AS ID,\r\n        DATE,\r\n        PROFILE,\r\n        CHANNEL_GROUPING,\r\n        GOAL_VALUE_ALL,\r\n        NEW_USERS,\r\n        SESSIONS,\r\n        AVG_SESSION_DURATION,\r\n        GOAL_COMPLETIONS_ALL,\r\n        PAGEVIEWS_PER_SESSION,\r\n        GOAL_CONVERSION_RATE_ALL,\r\n        USERS,\r\n        BOUNCE_RATE,\r\n        PERCENT_NEW_SESSIONS,\r\n   \r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_CHANNEL_TRAFFIC_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.CHANNEL_TRAFFIC\r\n          {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}        \r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Channel_Traffic"], "unique_id": "model.sales_dataflo.Stg_Channel_Traffic", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Channel_Traffic.sql", "original_file_path": "ETL/Stage/Stg_Channel_Traffic.sql", "name": "Stg_Channel_Traffic", "resource_type": "model", "alias": "Stg_Channel_Traffic", "checksum": {"name": "sha256", "checksum": "98f96f433f03bdbf8e9517e9d3221045bf6ad525be6a097c7147db086d215968"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Channel_Traffic.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        CHANNEL_GROUPING,\n        GOAL_VALUE_ALL,\n        NEW_USERS,\n        SESSIONS,\n        AVG_SESSION_DURATION,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        PERCENT_NEW_SESSIONS,\n   \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_CHANNEL_TRAFFIC_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.CHANNEL_TRAFFIC\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        CHANNEL_GROUPING,\n        GOAL_VALUE_ALL,\n        NEW_USERS,\n        SESSIONS,\n        AVG_SESSION_DURATION,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        PERCENT_NEW_SESSIONS,\n   \n        'GA_ANAND_01022021' as Source_type,\n        'D_CHANNEL_TRAFFIC_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.CHANNEL_TRAFFIC\n                  \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        CHANNEL_GROUPING,\n        GOAL_VALUE_ALL,\n        NEW_USERS,\n        SESSIONS,\n        AVG_SESSION_DURATION,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        PERCENT_NEW_SESSIONS,\n   \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_CHANNEL_TRAFFIC_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.CHANNEL_TRAFFIC\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        CHANNEL_GROUPING,\n        GOAL_VALUE_ALL,\n        NEW_USERS,\n        SESSIONS,\n        AVG_SESSION_DURATION,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        PERCENT_NEW_SESSIONS,\n   \n        'GA_ANAND_01022021' as Source_type,\n        'D_CHANNEL_TRAFFIC_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.CHANNEL_TRAFFIC\n                  \n    \n"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.959303855895996, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:03:38.531470Z", "completed_at": "2021-02-10T18:03:39.244877Z"}, {"name": "execute", "started_at": "2021-02-10T18:03:39.245445Z", "completed_at": "2021-02-10T18:03:40.409665Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_MKT_ENTITY where ENTITY_TYPE = 'GA'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n{% for V_SF_Schema in results %}\r\n\r\n {% if  V_SF_Schema == 'GA_DATAFLO_01022021'  %} \r\n    \r\n  select\r\n        {{ dbt_utils.surrogate_key('_FIVETRAN_ID') }}  AS ID,\r\n        DATE,\r\n        PROFILE,\r\n        EVENT_CATEGORY,\r\n        EVENT_VALUE,\r\n        TOTAL_EVENTS,\r\n        SESSIONS_WITH_EVENT,\r\n        EVENTS_PER_SESSION_WITH_EVENT,\r\n        AVG_EVENT_VALUE,\r\n        UNIQUE_EVENTS,\r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_EVENTS_OVERVIEW_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.EVENTS_OVERVIEW\r\n        \r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Events_Overview"], "unique_id": "model.sales_dataflo.Stg_Events_Overview", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Events_Overview.sql", "original_file_path": "ETL/Stage/Stg_Events_Overview.sql", "name": "Stg_Events_Overview", "resource_type": "model", "alias": "Stg_Events_Overview", "checksum": {"name": "sha256", "checksum": "aa4fb37320ba08e7a25b9cfcb6fad128b27481d779df91c3b7155178e82cee1f"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Events_Overview.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n  \n    \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        EVENT_CATEGORY,\n        EVENT_VALUE,\n        TOTAL_EVENTS,\n        SESSIONS_WITH_EVENT,\n        EVENTS_PER_SESSION_WITH_EVENT,\n        AVG_EVENT_VALUE,\n        UNIQUE_EVENTS,\n        'GA_DATAFLO_01022021' as Source_type,\n        'D_EVENTS_OVERVIEW_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.EVENTS_OVERVIEW\n        \n    \n\n\n \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n  \n    \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        EVENT_CATEGORY,\n        EVENT_VALUE,\n        TOTAL_EVENTS,\n        SESSIONS_WITH_EVENT,\n        EVENTS_PER_SESSION_WITH_EVENT,\n        AVG_EVENT_VALUE,\n        UNIQUE_EVENTS,\n        'GA_DATAFLO_01022021' as Source_type,\n        'D_EVENTS_OVERVIEW_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.EVENTS_OVERVIEW\n        \n    \n\n\n \n"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.6761863231658936, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:03:40.493184Z", "completed_at": "2021-02-10T18:03:41.174277Z"}, {"name": "execute", "started_at": "2021-02-10T18:03:41.174667Z", "completed_at": "2021-02-10T18:03:42.080778Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_MKT_ENTITY where ENTITY_TYPE = 'GA'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n{% for V_SF_Schema in results %}\r\n\r\n {% if  V_SF_Schema[0:2] == 'GA'  %} \r\n      \r\n  select\r\n        {{ dbt_utils.surrogate_key('_FIVETRAN_ID') }}  AS ID,\r\n        DATE,\r\n        PROFILE,\r\n        GOAL_COMPLETION_LOCATION,\r\n        GOAL_PREVIOUS_STEP_1,\r\n        GOAL_PREVIOUS_STEP_2,\r\n        GOAL_PREVIOUS_STEP_3,\r\n        GOAL_VALUE_ALL,\r\n        GOAL_COMPLETIONS_ALL,\r\n        GOAL_STARTS_ALL,\r\n        GOAL_CONVERSION_RATE_ALL,\r\n        GOAL_ABANDON_RATE_ALL,\r\n        GOAL_ABANDONS_ALL,\r\n        GOAL_VALUE_PER_SESSION,\r\n\r\n        \r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_GOAL_CONVERSIONS_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.GOAL_CONVERSIONS\r\n          {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}        \r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Goal_Conversions"], "unique_id": "model.sales_dataflo.Stg_Goal_Conversions", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Goal_Conversions.sql", "original_file_path": "ETL/Stage/Stg_Goal_Conversions.sql", "name": "Stg_Goal_Conversions", "resource_type": "model", "alias": "Stg_Goal_Conversions", "checksum": {"name": "sha256", "checksum": "a5c3f62c7dac6679727e4e21c605059f2eee4b2069062cc0785a08a9748382c1"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Goal_Conversions.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        GOAL_COMPLETION_LOCATION,\n        GOAL_PREVIOUS_STEP_1,\n        GOAL_PREVIOUS_STEP_2,\n        GOAL_PREVIOUS_STEP_3,\n        GOAL_VALUE_ALL,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_STARTS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        GOAL_ABANDON_RATE_ALL,\n        GOAL_ABANDONS_ALL,\n        GOAL_VALUE_PER_SESSION,\n\n        \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_GOAL_CONVERSIONS_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.GOAL_CONVERSIONS\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        GOAL_COMPLETION_LOCATION,\n        GOAL_PREVIOUS_STEP_1,\n        GOAL_PREVIOUS_STEP_2,\n        GOAL_PREVIOUS_STEP_3,\n        GOAL_VALUE_ALL,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_STARTS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        GOAL_ABANDON_RATE_ALL,\n        GOAL_ABANDONS_ALL,\n        GOAL_VALUE_PER_SESSION,\n\n        \n        'GA_ANAND_01022021' as Source_type,\n        'D_GOAL_CONVERSIONS_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.GOAL_CONVERSIONS\n                  \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        GOAL_COMPLETION_LOCATION,\n        GOAL_PREVIOUS_STEP_1,\n        GOAL_PREVIOUS_STEP_2,\n        GOAL_PREVIOUS_STEP_3,\n        GOAL_VALUE_ALL,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_STARTS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        GOAL_ABANDON_RATE_ALL,\n        GOAL_ABANDONS_ALL,\n        GOAL_VALUE_PER_SESSION,\n\n        \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_GOAL_CONVERSIONS_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.GOAL_CONVERSIONS\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        GOAL_COMPLETION_LOCATION,\n        GOAL_PREVIOUS_STEP_1,\n        GOAL_PREVIOUS_STEP_2,\n        GOAL_PREVIOUS_STEP_3,\n        GOAL_VALUE_ALL,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_STARTS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        GOAL_ABANDON_RATE_ALL,\n        GOAL_ABANDONS_ALL,\n        GOAL_VALUE_PER_SESSION,\n\n        \n        'GA_ANAND_01022021' as Source_type,\n        'D_GOAL_CONVERSIONS_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.GOAL_CONVERSIONS\n                  \n    \n"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.314605951309204, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:03:42.172938Z", "completed_at": "2021-02-10T18:03:42.737564Z"}, {"name": "execute", "started_at": "2021-02-10T18:03:42.738128Z", "completed_at": "2021-02-10T18:03:44.392606Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_MKT_ENTITY where ENTITY_TYPE = 'GA'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n{% for V_SF_Schema in results %}\r\n\r\n {% if  V_SF_Schema[0:2] == 'GA'  %} \r\n      \r\n  select\r\n        {{ dbt_utils.surrogate_key('_FIVETRAN_ID') }}  AS ID,\r\n        DATE,\r\n        PROFILE,\r\n        PAGE_TITLE,\r\n        LANDING_PAGE_PATH,\r\n        PAGE_PATH,\r\n        EXIT_PAGE_PATH,\r\n        PAGE_VALUE,\r\n        EXIT_RATE,\r\n        TIME_ON_PAGE,\r\n        PAGEVIEWS_PER_SESSION,\r\n        UNIQUE_PAGEVIEWS,\r\n        ENTRANCE_RATE,\r\n\r\n        \r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_PAGE_TRACKING_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.PAGE_TRACKING\r\n          {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}        \r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Page_Tracking"], "unique_id": "model.sales_dataflo.Stg_Page_Tracking", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Page_Tracking.sql", "original_file_path": "ETL/Stage/Stg_Page_Tracking.sql", "name": "Stg_Page_Tracking", "resource_type": "model", "alias": "Stg_Page_Tracking", "checksum": {"name": "sha256", "checksum": "1937f4eeb250f60bab5952464cfc4bc5c92f799603b632532b0aa1b3d82d05e3"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Page_Tracking.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        PAGE_TITLE,\n        LANDING_PAGE_PATH,\n        PAGE_PATH,\n        EXIT_PAGE_PATH,\n        PAGE_VALUE,\n        EXIT_RATE,\n        TIME_ON_PAGE,\n        PAGEVIEWS_PER_SESSION,\n        UNIQUE_PAGEVIEWS,\n        ENTRANCE_RATE,\n\n        \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_PAGE_TRACKING_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.PAGE_TRACKING\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        PAGE_TITLE,\n        LANDING_PAGE_PATH,\n        PAGE_PATH,\n        EXIT_PAGE_PATH,\n        PAGE_VALUE,\n        EXIT_RATE,\n        TIME_ON_PAGE,\n        PAGEVIEWS_PER_SESSION,\n        UNIQUE_PAGEVIEWS,\n        ENTRANCE_RATE,\n\n        \n        'GA_ANAND_01022021' as Source_type,\n        'D_PAGE_TRACKING_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.PAGE_TRACKING\n                  \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        PAGE_TITLE,\n        LANDING_PAGE_PATH,\n        PAGE_PATH,\n        EXIT_PAGE_PATH,\n        PAGE_VALUE,\n        EXIT_RATE,\n        TIME_ON_PAGE,\n        PAGEVIEWS_PER_SESSION,\n        UNIQUE_PAGEVIEWS,\n        ENTRANCE_RATE,\n\n        \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_PAGE_TRACKING_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.PAGE_TRACKING\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        PAGE_TITLE,\n        LANDING_PAGE_PATH,\n        PAGE_PATH,\n        EXIT_PAGE_PATH,\n        PAGE_VALUE,\n        EXIT_RATE,\n        TIME_ON_PAGE,\n        PAGEVIEWS_PER_SESSION,\n        UNIQUE_PAGEVIEWS,\n        ENTRANCE_RATE,\n\n        \n        'GA_ANAND_01022021' as Source_type,\n        'D_PAGE_TRACKING_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.PAGE_TRACKING\n                  \n    \n"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.9776382446289062, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:03:44.491418Z", "completed_at": "2021-02-10T18:03:44.914565Z"}, {"name": "execute", "started_at": "2021-02-10T18:03:44.915132Z", "completed_at": "2021-02-10T18:03:46.375256Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_MKT_ENTITY where ENTITY_TYPE = 'GA'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n{% for V_SF_Schema in results %}\r\n\r\n {% if  V_SF_Schema[0:2] == 'GA'  %} \r\n      \r\n  select\r\n        {{ dbt_utils.surrogate_key('_FIVETRAN_ID') }}  AS ID,\r\n        DATE,\r\n        PROFILE,\r\n        SOCIAL_NETWORK,\r\n        SESSIONS,\r\n        NEW_USERS,\r\n        AVG_SESSION_DURATION,\r\n        TRANSACTION_REVENUE,\r\n        PAGEVIEWS_PER_SESSION,\r\n        TRANSACTIONS,\r\n        BOUNCE_RATE,\r\n        PAGEVIEWS,\r\n        PERCENT_NEW_SESSIONS,\r\n        TRANSACTIONS_PER_SESSION,\r\n       \r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_SOCIAL_MEDIA_ACQUISITIONS_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.SOCIAL_MEDIA_ACQUISITIONS\r\n          {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}        \r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Social_Media_Acquisitions"], "unique_id": "model.sales_dataflo.Stg_Social_Media_Acquisitions", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Social_Media_Acquisitions.sql", "original_file_path": "ETL/Stage/Stg_Social_Media_Acquisitions.sql", "name": "Stg_Social_Media_Acquisitions", "resource_type": "model", "alias": "Stg_Social_Media_Acquisitions", "checksum": {"name": "sha256", "checksum": "a13690c9c8958cc32f7aae03fc2afbdedfb5881c7f1b1f50990eb527fe6f373d"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Social_Media_Acquisitions.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        SOCIAL_NETWORK,\n        SESSIONS,\n        NEW_USERS,\n        AVG_SESSION_DURATION,\n        TRANSACTION_REVENUE,\n        PAGEVIEWS_PER_SESSION,\n        TRANSACTIONS,\n        BOUNCE_RATE,\n        PAGEVIEWS,\n        PERCENT_NEW_SESSIONS,\n        TRANSACTIONS_PER_SESSION,\n       \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_SOCIAL_MEDIA_ACQUISITIONS_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.SOCIAL_MEDIA_ACQUISITIONS\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        SOCIAL_NETWORK,\n        SESSIONS,\n        NEW_USERS,\n        AVG_SESSION_DURATION,\n        TRANSACTION_REVENUE,\n        PAGEVIEWS_PER_SESSION,\n        TRANSACTIONS,\n        BOUNCE_RATE,\n        PAGEVIEWS,\n        PERCENT_NEW_SESSIONS,\n        TRANSACTIONS_PER_SESSION,\n       \n        'GA_ANAND_01022021' as Source_type,\n        'D_SOCIAL_MEDIA_ACQUISITIONS_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.SOCIAL_MEDIA_ACQUISITIONS\n                  \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        SOCIAL_NETWORK,\n        SESSIONS,\n        NEW_USERS,\n        AVG_SESSION_DURATION,\n        TRANSACTION_REVENUE,\n        PAGEVIEWS_PER_SESSION,\n        TRANSACTIONS,\n        BOUNCE_RATE,\n        PAGEVIEWS,\n        PERCENT_NEW_SESSIONS,\n        TRANSACTIONS_PER_SESSION,\n       \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_SOCIAL_MEDIA_ACQUISITIONS_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.SOCIAL_MEDIA_ACQUISITIONS\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        SOCIAL_NETWORK,\n        SESSIONS,\n        NEW_USERS,\n        AVG_SESSION_DURATION,\n        TRANSACTION_REVENUE,\n        PAGEVIEWS_PER_SESSION,\n        TRANSACTIONS,\n        BOUNCE_RATE,\n        PAGEVIEWS,\n        PERCENT_NEW_SESSIONS,\n        TRANSACTIONS_PER_SESSION,\n       \n        'GA_ANAND_01022021' as Source_type,\n        'D_SOCIAL_MEDIA_ACQUISITIONS_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.SOCIAL_MEDIA_ACQUISITIONS\n                  \n    \n"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.1385717391967773, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:03:46.473116Z", "completed_at": "2021-02-10T18:03:47.073029Z"}, {"name": "execute", "started_at": "2021-02-10T18:03:47.073588Z", "completed_at": "2021-02-10T18:03:48.514385Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_MKT_ENTITY where ENTITY_TYPE = 'GA'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n{% for V_SF_Schema in results %}\r\n\r\n {% if  V_SF_Schema[0:2] == 'GA'  %} \r\n      \r\n  select\r\n        {{ dbt_utils.surrogate_key('_FIVETRAN_ID') }}  AS ID,\r\n        DATE,\r\n        PROFILE,\r\n        KEYWORD,\r\n        GOAL_VALUE_ALL,\r\n        SESSIONS,\r\n        GOAL_COMPLETIONS_ALL,\r\n        PAGEVIEWS_PER_SESSION,\r\n        GOAL_CONVERSION_RATE_ALL,\r\n        USERS,\r\n        BOUNCE_RATE,\r\n        AD_CLICKS,\r\n        AD_COST,\r\n        CPC,\r\n     \r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_ADWORDS_KEYWORD_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.ADWORDS_KEYWORD\r\n          {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}        \r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Adwords_Keyword"], "unique_id": "model.sales_dataflo.Stg_Adwords_Keyword", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Adwords_Keyword.sql", "original_file_path": "ETL/Stage/Stg_Adwords_Keyword.sql", "name": "Stg_Adwords_Keyword", "resource_type": "model", "alias": "Stg_Adwords_Keyword", "checksum": {"name": "sha256", "checksum": "7c1ee715d515c0f89146cc1df21e5861e06a4ff90d54b1fec75d38312d9db751"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Adwords_Keyword.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        KEYWORD,\n        GOAL_VALUE_ALL,\n        SESSIONS,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        AD_CLICKS,\n        AD_COST,\n        CPC,\n     \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_ADWORDS_KEYWORD_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.ADWORDS_KEYWORD\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        KEYWORD,\n        GOAL_VALUE_ALL,\n        SESSIONS,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        AD_CLICKS,\n        AD_COST,\n        CPC,\n     \n        'GA_ANAND_01022021' as Source_type,\n        'D_ADWORDS_KEYWORD_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.ADWORDS_KEYWORD\n                  \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        KEYWORD,\n        GOAL_VALUE_ALL,\n        SESSIONS,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        AD_CLICKS,\n        AD_COST,\n        CPC,\n     \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_ADWORDS_KEYWORD_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.ADWORDS_KEYWORD\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        KEYWORD,\n        GOAL_VALUE_ALL,\n        SESSIONS,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        AD_CLICKS,\n        AD_COST,\n        CPC,\n     \n        'GA_ANAND_01022021' as Source_type,\n        'D_ADWORDS_KEYWORD_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.ADWORDS_KEYWORD\n                  \n    \n"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.836470365524292, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:03:48.615703Z", "completed_at": "2021-02-10T18:03:49.029892Z"}, {"name": "execute", "started_at": "2021-02-10T18:03:49.030433Z", "completed_at": "2021-02-10T18:03:50.381722Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_MKT_ENTITY where ENTITY_TYPE = 'GA'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n{% for V_SF_Schema in results %}\r\n\r\n {% if  V_SF_Schema[0:2] == 'GA'  %} \r\n      \r\n  select\r\n        {{ dbt_utils.surrogate_key('_FIVETRAN_ID') }}  AS ID,\r\n        DATE,\r\n        PROFILE,\r\n        CONTINENT,\r\n        COUNTRY,\r\n        CITY,\r\n        METRO,\r\n        REGION,\r\n        NETWORK_LOCATION,\r\n        SESSIONS,\r\n        USERS,\r\n\r\n        \r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_GEO_NETWORK_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.GEO_NETWORK\r\n          {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}        \r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Geo_Network"], "unique_id": "model.sales_dataflo.Stg_Geo_Network", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Geo_Network.sql", "original_file_path": "ETL/Stage/Stg_Geo_Network.sql", "name": "Stg_Geo_Network", "resource_type": "model", "alias": "Stg_Geo_Network", "checksum": {"name": "sha256", "checksum": "3d9fada498130ef1a3f406eadf973f3549deccc30f0f6c50c9edd3eef00d066a"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Geo_Network.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        CONTINENT,\n        COUNTRY,\n        CITY,\n        METRO,\n        REGION,\n        NETWORK_LOCATION,\n        SESSIONS,\n        USERS,\n\n        \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_GEO_NETWORK_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.GEO_NETWORK\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        CONTINENT,\n        COUNTRY,\n        CITY,\n        METRO,\n        REGION,\n        NETWORK_LOCATION,\n        SESSIONS,\n        USERS,\n\n        \n        'GA_ANAND_01022021' as Source_type,\n        'D_GEO_NETWORK_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.GEO_NETWORK\n                  \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        CONTINENT,\n        COUNTRY,\n        CITY,\n        METRO,\n        REGION,\n        NETWORK_LOCATION,\n        SESSIONS,\n        USERS,\n\n        \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_GEO_NETWORK_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.GEO_NETWORK\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        CONTINENT,\n        COUNTRY,\n        CITY,\n        METRO,\n        REGION,\n        NETWORK_LOCATION,\n        SESSIONS,\n        USERS,\n\n        \n        'GA_ANAND_01022021' as Source_type,\n        'D_GEO_NETWORK_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.GEO_NETWORK\n                  \n    \n"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.94752836227417, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:03:50.456362Z", "completed_at": "2021-02-10T18:03:50.950777Z"}, {"name": "execute", "started_at": "2021-02-10T18:03:50.951330Z", "completed_at": "2021-02-10T18:03:52.325340Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_MKT_ENTITY where ENTITY_TYPE = 'GA'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n{% for V_SF_Schema in results %}\r\n\r\n {% if  V_SF_Schema[0:2] == 'GA'  %} \r\n      \r\n  select\r\n        {{ dbt_utils.surrogate_key('_FIVETRAN_ID') }}  AS ID,\r\n        DATE,\r\n        PROFILE,\r\n        MOBILE_DEVICE_BRANDING,\r\n        DEVICE_CATEGORY,\r\n        MOBILE_DEVICE_MODEL,\r\n        MOBILE_INPUT_SELECTOR,\r\n        OPERATING_SYSTEM,\r\n        DATA_SOURCE,\r\n        GOAL_VALUE_ALL,\r\n        GOAL_COMPLETIONS_ALL,\r\n        GOAL_STARTS_ALL,\r\n        GOAL_CONVERSION_RATE_ALL,\r\n        GOAL_ABANDONS_ALL,\r\n        GOAL_VALUE_PER_SESSION,\r\n\r\n        \r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_PLATFORM_DEVICE_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.PLATFORM_DEVICE\r\n          {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}        \r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Platform_Device"], "unique_id": "model.sales_dataflo.Stg_Platform_Device", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Platform_Device.sql", "original_file_path": "ETL/Stage/Stg_Platform_Device.sql", "name": "Stg_Platform_Device", "resource_type": "model", "alias": "Stg_Platform_Device", "checksum": {"name": "sha256", "checksum": "67405f254ab3da7386f7809a9649fc91fb7744acc28d81bbeb0dfbb4385aa915"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Platform_Device.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        MOBILE_DEVICE_BRANDING,\n        DEVICE_CATEGORY,\n        MOBILE_DEVICE_MODEL,\n        MOBILE_INPUT_SELECTOR,\n        OPERATING_SYSTEM,\n        DATA_SOURCE,\n        GOAL_VALUE_ALL,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_STARTS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        GOAL_ABANDONS_ALL,\n        GOAL_VALUE_PER_SESSION,\n\n        \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_PLATFORM_DEVICE_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.PLATFORM_DEVICE\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        MOBILE_DEVICE_BRANDING,\n        DEVICE_CATEGORY,\n        MOBILE_DEVICE_MODEL,\n        MOBILE_INPUT_SELECTOR,\n        OPERATING_SYSTEM,\n        DATA_SOURCE,\n        GOAL_VALUE_ALL,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_STARTS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        GOAL_ABANDONS_ALL,\n        GOAL_VALUE_PER_SESSION,\n\n        \n        'GA_ANAND_01022021' as Source_type,\n        'D_PLATFORM_DEVICE_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.PLATFORM_DEVICE\n                  \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        MOBILE_DEVICE_BRANDING,\n        DEVICE_CATEGORY,\n        MOBILE_DEVICE_MODEL,\n        MOBILE_INPUT_SELECTOR,\n        OPERATING_SYSTEM,\n        DATA_SOURCE,\n        GOAL_VALUE_ALL,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_STARTS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        GOAL_ABANDONS_ALL,\n        GOAL_VALUE_PER_SESSION,\n\n        \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_PLATFORM_DEVICE_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.PLATFORM_DEVICE\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        MOBILE_DEVICE_BRANDING,\n        DEVICE_CATEGORY,\n        MOBILE_DEVICE_MODEL,\n        MOBILE_INPUT_SELECTOR,\n        OPERATING_SYSTEM,\n        DATA_SOURCE,\n        GOAL_VALUE_ALL,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_STARTS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        GOAL_ABANDONS_ALL,\n        GOAL_VALUE_PER_SESSION,\n\n        \n        'GA_ANAND_01022021' as Source_type,\n        'D_PLATFORM_DEVICE_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.PLATFORM_DEVICE\n                  \n    \n"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.815884590148926, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:03:52.406348Z", "completed_at": "2021-02-10T18:03:53.084762Z"}, {"name": "execute", "started_at": "2021-02-10T18:03:53.085368Z", "completed_at": "2021-02-10T18:03:54.194216Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_MKT_ENTITY where ENTITY_TYPE = 'GA'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n{% for V_SF_Schema in results %}\r\n\r\n {% if  V_SF_Schema[0:2] == 'GA'  %} \r\n      \r\n  select\r\n        {{ dbt_utils.surrogate_key('_FIVETRAN_ID') }}  AS ID,\r\n        DATE,\r\n        PROFILE,\r\n        SESSION_DURATION_BUCKET,\r\n        USER_TYPE,\r\n        HITS,\r\n        SESSIONS,\r\n        SESSIONS_PER_USER,\r\n        AVG_SESSION_DURATION,\r\n        BOUNCES,\r\n        SESSION_DURATION,\r\n        BOUNCE_RATE,\r\n\r\n        \r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_SESSION_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.SESSION\r\n          {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}        \r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Session"], "unique_id": "model.sales_dataflo.Stg_Session", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Session.sql", "original_file_path": "ETL/Stage/Stg_Session.sql", "name": "Stg_Session", "resource_type": "model", "alias": "Stg_Session", "checksum": {"name": "sha256", "checksum": "65ebc1ef0bb1af65ae4222ea9e3210d9ebdd2b8c17408e194c1532ae067e4807"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Session.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        SESSION_DURATION_BUCKET,\n        USER_TYPE,\n        HITS,\n        SESSIONS,\n        SESSIONS_PER_USER,\n        AVG_SESSION_DURATION,\n        BOUNCES,\n        SESSION_DURATION,\n        BOUNCE_RATE,\n\n        \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_SESSION_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.SESSION\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        SESSION_DURATION_BUCKET,\n        USER_TYPE,\n        HITS,\n        SESSIONS,\n        SESSIONS_PER_USER,\n        AVG_SESSION_DURATION,\n        BOUNCES,\n        SESSION_DURATION,\n        BOUNCE_RATE,\n\n        \n        'GA_ANAND_01022021' as Source_type,\n        'D_SESSION_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.SESSION\n                  \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        SESSION_DURATION_BUCKET,\n        USER_TYPE,\n        HITS,\n        SESSIONS,\n        SESSIONS_PER_USER,\n        AVG_SESSION_DURATION,\n        BOUNCES,\n        SESSION_DURATION,\n        BOUNCE_RATE,\n\n        \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_SESSION_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.SESSION\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        SESSION_DURATION_BUCKET,\n        USER_TYPE,\n        HITS,\n        SESSIONS,\n        SESSIONS_PER_USER,\n        AVG_SESSION_DURATION,\n        BOUNCES,\n        SESSION_DURATION,\n        BOUNCE_RATE,\n\n        \n        'GA_ANAND_01022021' as Source_type,\n        'D_SESSION_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.SESSION\n                  \n    \n"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.2445900440216064, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:03:55.226047Z", "completed_at": "2021-02-10T18:03:55.863304Z"}, {"name": "execute", "started_at": "2021-02-10T18:03:55.863805Z", "completed_at": "2021-02-10T18:03:57.328780Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_MKT_ENTITY where ENTITY_TYPE = 'GA'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n{% for V_SF_Schema in results %}\r\n\r\n {% if  V_SF_Schema[0:2] == 'GA'  %} \r\n      \r\n  select\r\n        {{ dbt_utils.surrogate_key('_FIVETRAN_ID') }}  AS ID,\r\n        DATE,\r\n        PROFILE,\r\n        PAGE_TITLE,\r\n        PAGEVIEWS,\r\n        AVG_TIME_ON_PAGE,\r\n        PAGE_VALUE,\r\n        UNIQUE_PAGEVIEWS,\r\n        EXIT_RATE,\r\n        ENTRANCES,\r\n        USERS,\r\n        BOUNCE_RATE,        \r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_TRAFFIC_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.traffic\r\n          {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}        \r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Traffic"], "unique_id": "model.sales_dataflo.Stg_Traffic", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Traffic.sql", "original_file_path": "ETL/Stage/Stg_Traffic.sql", "name": "Stg_Traffic", "resource_type": "model", "alias": "Stg_Traffic", "checksum": {"name": "sha256", "checksum": "cf95e74f32d91b3c533fc9fb36ceda59320d3f30febcb0f9755e9bb8b7008fc8"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Traffic.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        PAGE_TITLE,\n        PAGEVIEWS,\n        AVG_TIME_ON_PAGE,\n        PAGE_VALUE,\n        UNIQUE_PAGEVIEWS,\n        EXIT_RATE,\n        ENTRANCES,\n        USERS,\n        BOUNCE_RATE,        \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_TRAFFIC_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.traffic\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        PAGE_TITLE,\n        PAGEVIEWS,\n        AVG_TIME_ON_PAGE,\n        PAGE_VALUE,\n        UNIQUE_PAGEVIEWS,\n        EXIT_RATE,\n        ENTRANCES,\n        USERS,\n        BOUNCE_RATE,        \n        'GA_ANAND_01022021' as Source_type,\n        'D_TRAFFIC_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.traffic\n                  \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        PAGE_TITLE,\n        PAGEVIEWS,\n        AVG_TIME_ON_PAGE,\n        PAGE_VALUE,\n        UNIQUE_PAGEVIEWS,\n        EXIT_RATE,\n        ENTRANCES,\n        USERS,\n        BOUNCE_RATE,        \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_TRAFFIC_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.traffic\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        PAGE_TITLE,\n        PAGEVIEWS,\n        AVG_TIME_ON_PAGE,\n        PAGE_VALUE,\n        UNIQUE_PAGEVIEWS,\n        EXIT_RATE,\n        ENTRANCES,\n        USERS,\n        BOUNCE_RATE,        \n        'GA_ANAND_01022021' as Source_type,\n        'D_TRAFFIC_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.traffic\n                  \n    \n"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.9158918857574463, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:03:57.473524Z", "completed_at": "2021-02-10T18:03:57.920369Z"}, {"name": "execute", "started_at": "2021-02-10T18:03:57.920708Z", "completed_at": "2021-02-10T18:03:59.317689Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(\r\n  materialized=\"table\"\r\n) \r\n}}\r\n\r\nselect * from(\r\nSelect 1 METRIC_ID,'Opportunities Won Revenue' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is equal to Closed Won\"\" and Opportunity owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Opportunities Won Revenue during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 2 METRIC_ID,'Key Metrics' METRIC_NAME,5 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'This is a multi-metric Datablock with the following metrics: Avg Case Close Time, Converted Leads, Expected revenue, New Cases, New Leads, Opportunities Lost Count, Open Opportunities Count, Opportunities Won Count, Opportunities Won Revenue.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 3 METRIC_ID,'Converted Leads' METRIC_NAME,4 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Status \"\"is equal to Converted\"\" and Lead owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Number of Converted Leads during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 4 METRIC_ID,'New Leads' METRIC_NAME,3 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Name \"\"is not empty\"\" and Lead owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Number of New Leads during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 5 METRIC_ID,'Open Opportunity by stage' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is not equal to Closed Won\"\" and Opportunity owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Total Open Opportunities Count during the specified Date Range split up by Owner. Daily totals are not available for this metric. Instead, the total current value of this metric will be visualized cumulatively. No historical data is available from the initial connection.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 6 METRIC_ID,'Top Sales Rep' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Sum ' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'This is a multi-metric Datablock with the following metrics: Opportunities Won Amount by Owner, Opportunities Won Count by Owner.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 7 METRIC_ID,'New Leads by industry' METRIC_NAME,3 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'Number of New Leads during the specified Date Range split up by Industry.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 8 METRIC_ID,'Return On Investment Amount by Campaign' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'Total Return On Investment Amount during the specified Date Range split up by Campaign Type. Daily totals are not available for this metric. Instead, the total current value of this metric will be visualized cumulatively. No historical data is available from the initial connection.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 9 METRIC_ID,'Return On Investment by Campaign Type' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'Total Return On Investment during the specified Date Range split up by Campaign Type. Daily totals are not available for this metric. Instead, the total current value of this metric will be visualized cumulatively. No historical data is available from the initial connection.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 10 METRIC_ID,'Opportunities Lost' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is equal to Closed Lost\"\" and Opportunity owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Opportunities Lost Count during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 11 METRIC_ID,'Opportunities Lost Amount by Owner' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is equal to Closed Lost\"\"' METRICCRITERIA,'Opportunities Lost Amount during the specified Date Range split up by Owner.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 12 METRIC_ID,'Opportunities Lost by Owner' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is equal to Closed Lost\"\"' METRICCRITERIA,'Opportunities Lost Count during the specified Date Range split up by Owner.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 13 METRIC_ID,'Average Case Close Time' METRIC_NAME,6 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'Average Case Close Time during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 14 METRIC_ID,'Opportunities Lost Amount by Opp Name' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is equal to Closed Lost\"\" and Opportunity owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Opportunities Lost Amount during the specified Date Range split up by Opportunity Name.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 15 METRIC_ID,'Closed Cases' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Status \"\"is equal to Closed\"\" and case owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Number of Closed Cases during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 16 METRIC_ID,'Opportunities Won Revenue by Product Family' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'Opportunities Won Revenue during the specified Date Range split up by Product Family.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 17 METRIC_ID,'Expected Revenue' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Closed Date \"is not empty\" and Sales stage \"is not equal to Closed Won, closed Lost\"' METRICCRITERIA,'Expected Revenue during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 18 METRIC_ID,'New Leads by Lead Source' METRIC_NAME,3 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Lead Source \"\"is not empty\"\"' METRICCRITERIA,'Number of New Leads during the specified Date Range split up by Lead Source.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 19 METRIC_ID,'New Leads by Lead Status' METRIC_NAME,3 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Lead Status \"\"is not empty\"\"' METRICCRITERIA,'Number of New Leads during the specified Date Range split up by Lead Status.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 20 METRIC_ID,'New Cases' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Case # \"\"is not empty\"\"' METRICCRITERIA,'Number of New Cases during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 21 METRIC_ID,'Opportunities Won' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is equal to Closed Won\"\" and Opportunity owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Opportunities Won Count during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 22 METRIC_ID,'Opportunities Won Amount by Opp Name' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is equal to Closed Won\"\" and Opportunity owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Opportunities Won Amount during the specified Date Range split up by Opportunity Name.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 23 METRIC_ID,'Open Opportunities' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"is not equal to Closed Won, closed Lost\" and Opportunity owner \"is equal to logged in employee\"' METRICCRITERIA,'Total Open Opportunities Count during the specified Date Range. Daily totals are not available for this metric. Instead, the total current value of this metric will be visualized cumulatively. No historical data is available from the initial connection.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 24 METRIC_ID,'Opportunities Overview' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'This is a multi-metric Datablock with the following metrics: Opportunities Lost Count, Open Opportunities Count, Opportunities Won Count.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 25 METRIC_ID,'Open Opportunities Amount by Stage Name' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"is not equal to Closed Won, closed Lost\" and Opportunity owner \"is equal to logged in employee\"' METRICCRITERIA,'Total Open Opportunities Amount during the specified Date Range split up by Owner. Daily totals are not available for this metric. Instead, the total current value of this metric will be visualized cumulatively. No historical data is available from the initial connection.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 26 METRIC_ID,'Open Opportunities Amount by Opp Name' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'Total Open Opportunities Amount during the specified Date Range split up by Opportunity Name. Daily totals are not available for this metric. Instead, the total current value of this metric will be visualized cumulatively. No historical data is available from the initial connection.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 27 METRIC_ID,'Accounts' METRIC_NAME,5 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Account Name \"is not empty\" and Account Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get a list of accounts by annual revenue.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 28 METRIC_ID,'Accounts by Type' METRIC_NAME,5 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Account Type \"is not empty\" and Account Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get a list of accounts by type.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 29 METRIC_ID,'Contacts' METRIC_NAME,6 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, ' Name \"is not empty\" and Contact Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get a list of all your contacts by department including name, phone, title, and more.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 30 METRIC_ID,'Leads' METRIC_NAME,3 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, ' Name \"is not empty\" and Lead Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get a list of leads (for this quarter).' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 31 METRIC_ID,'Leads by location' METRIC_NAME,3 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, ' Address \"is not empty\" and Lead Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get a list of leads by location (for the last 7 days).' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 32 METRIC_ID,'Opportunities by type' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Type \"is not empty\" and Opportunity Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get the number of opportunities by type (for this year or for the last two quarters).' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 33 METRIC_ID,'Leads by status' METRIC_NAME,3 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Lead status \"is not empty\" and Lead Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get a list of new leads by status (for this month).' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 34 METRIC_ID,'Opportunities (for this quarter)' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Opportunity Name \"is not empty\" and Opportunity Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get a list of opportunities (for this quarter)' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion    \r\nSelect 35 METRIC_ID, 'All Deals Amount' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 36 METRIC_ID, 'All deals by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 37 METRIC_ID, 'Average Time to Close Deal' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 38 METRIC_ID, 'Average Time to Close Deal by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'average' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 39 METRIC_ID, 'Calls' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 40 METRIC_ID, 'Calls & Meetings' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 41 METRIC_ID, 'Calls by Owner' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 42 METRIC_ID, 'Closed Deals Amount by Stage by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 43 METRIC_ID, 'Closed Deals Leaderboard' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 44 METRIC_ID, 'Closed Lost by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 45 METRIC_ID, 'Closed Lost Deals by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 46 METRIC_ID, 'Closed Won Amount by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 47 METRIC_ID, 'Closed Won Deals Amount by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 48 METRIC_ID, 'Closed Won Deals by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 49 METRIC_ID, 'Companies by Owner' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 50 METRIC_ID, 'Deals Amount by Original Source Type' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 51 METRIC_ID, 'Deals by Deal Type (by Create Date)' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 52 METRIC_ID, 'Deals by Original Source Data' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 53 METRIC_ID, 'Deals by Original Source Type' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 54 METRIC_ID, 'Deals by Stage (Create Date)' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 55 METRIC_ID, 'Deals by Stage by Created Date' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 56 METRIC_ID, 'Deals Closed Lost' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 57 METRIC_ID, 'Deals Closed Won' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,' Sales Stage is equal to Closed Won' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 58 METRIC_ID, 'Deals Closed Won Amount' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,' Sales Stage is equal to Closed Won' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 59 METRIC_ID, 'Deals Closed Won and Lost' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 60 METRIC_ID, 'Deals Created' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,' Creation Date is not equal to empty' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 61 METRIC_ID, 'Deals Created by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 62 METRIC_ID, 'Deals Created by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 63 METRIC_ID, 'Deals Lost by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 64 METRIC_ID, 'Deals Won Amount by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 65 METRIC_ID, 'Deals Won by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 66 METRIC_ID, 'Emails Logged' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 67 METRIC_ID, 'Emails Logged by Owner' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 68 METRIC_ID, 'Forecasted Deals by Stage' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 69 METRIC_ID, 'Latest Deal Amount by Name' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 70 METRIC_ID, 'Latest Deal by Name' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 71 METRIC_ID, 'Meetings' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 72 METRIC_ID, 'Meetings by Owner' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 73 METRIC_ID, 'New Company by First Conversion' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 74 METRIC_ID, 'New Deals Amount' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 75 METRIC_ID, 'New Deals Created Amount' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,' Creation Date is not equal to empty' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 76 METRIC_ID, 'Notes' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 77 METRIC_ID, 'Notes by Owner' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 78 METRIC_ID, 'Open (Unclosed) Deals' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 79 METRIC_ID, 'Open (Unclosed) Deals Amount' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 80 METRIC_ID, 'Open (unclosed) Deals by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 81 METRIC_ID, 'Open (Unclosed) Deals by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 82 METRIC_ID, 'Open (Unclosed) Deals by Stage by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 83 METRIC_ID, 'Open Deals Amount by Stage by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 84 METRIC_ID, '1 Overview' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, '' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 85 METRIC_ID, 'Revenue by Company' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 86 METRIC_ID, 'Sales Leaderboard' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 87 METRIC_ID, 'Sales Performance' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'This is a multi-metric Datablock with the following metrics: Average Time to Close Deal, All deals, Companies, Contacts (Marketing), Deals Created, Deals Closed Lost, Deals Closed Won, Deals Closed Won Amount.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 88 METRIC_ID, 'Sales Pipeline' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'This is a multi-metric Datablock with the following metrics: All deals, Companies, Contacts (Marketing), Deals Created, Deals Closed Won.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 89 METRIC_ID, 'Tasks Completed' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 90 METRIC_ID, 'Tasks Completed by Owner' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 91 METRIC_ID, 'Top Won Deals' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 92 METRIC_ID, 'Total Contacts (Marketing)' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 93 METRIC_ID, 'Sessions by Device Type' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get the number of website sessions by device type: desktop, mobile, and tablet (for the last year).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 94 METRIC_ID, 'Traffic By Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get the number of sessions by channel grouping (for the last 2 years).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 95 METRIC_ID, 'Sessions by Social Network' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by Social Networks.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 96 METRIC_ID, 'Top Pages by Pageviews' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Pageviews to each Page during the specified Date Range. This metric is collecting data for the top 500 Pages in the connected Google Analytics Account. To gather data for more than 500 Pages, please use the Query Builder tool.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 97 METRIC_ID, 'Avg. Quantity by Sources' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average number of Products Sold per Transaction during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 98 METRIC_ID, 'Product revenue by Product name' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Individual Product Sales during specified Date Range split up by Product Name.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 99 METRIC_ID, 'Sessions by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 100 METRIC_ID, 'Sessions by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 101 METRIC_ID, 'Sessions by Organic Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by Organic Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 102 METRIC_ID, 'Goal Completion by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 103 METRIC_ID, 'Goal Completion by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 104 METRIC_ID, 'Quantity by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Units Sold in Ecommerce transactions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 105 METRIC_ID, 'Quantity by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Units Sold in Ecommerce transactions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 106 METRIC_ID, 'Revenue by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 107 METRIC_ID, 'Revenue by landing page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during the specified Date Range split up by Landing Page.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 108 METRIC_ID, 'Goal Completion by Goal' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range split up by Goals.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 109 METRIC_ID, 'Sessions by Paid Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Top Paid Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 110 METRIC_ID, 'Goal Value by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 111 METRIC_ID, 'Revenue by Organic Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during specified Date Range split up by Organic Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 112 METRIC_ID, 'Goal Value by Goal' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range split up by Goals.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 113 METRIC_ID, 'Screen Views by Screen Name' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Screens Viewed. Repeated Views of a Single Screen are counted during specified Date Range split up by Screen Name.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 114 METRIC_ID, 'Sessions by Landing Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Landing Page.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 115 METRIC_ID, 'Sessions by Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions to each Page during the specified Date Range. This metric is collecting data for the top 500 Pages in the connected Google Analytics Account. To gather data for more than 500 Pages, please use the Query Builder tool.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 116 METRIC_ID, 'Sessions by New vs Returning' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by New vs Returning.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 117 METRIC_ID, 'Goal Completion by New vs Returning' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range split up by New vs Returning.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 118 METRIC_ID, 'Top Source/Medium by Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Top Sources/Mediums.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 119 METRIC_ID, 'Top Sources By Revenue' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 120 METRIC_ID, 'Sessions by Geo Location' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified date range split up by Geo Location.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 121 METRIC_ID, 'Sessions by Top Geo Location' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified date range split up by Geo Location.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 122 METRIC_ID, 'Transactions by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Completed Purchases on your Site during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 123 METRIC_ID, 'Goal Value by New vs Returning' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range split up by New vs Returning.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 124 METRIC_ID, 'Transactions by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Completed Purchases on your Site during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 125 METRIC_ID, 'Transactions per User by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Transactions split up by Channels during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 126 METRIC_ID, 'Transactions per User by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Transactions split up by original Source during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 127 METRIC_ID, 'Goal Value by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 128 METRIC_ID, 'Users by Landing Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during the specified Date Range split up by Landing Page.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 129 METRIC_ID, 'Users by Organic Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during specified Date Range split up by Organic Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 130 METRIC_ID, 'Users by Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Users who have initiated at least one Session to each Page during the specified Date Range. This metric is collecting data for the top 500 Pages in the connected Google Analytics Account. To gather data for more than 500 Pages, please use the Query Builder tool.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 131 METRIC_ID, 'Top Events by Sessions by Label' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Total number of Sessions during the specified date range split up by top Events by Label.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 132 METRIC_ID, 'Users by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 133 METRIC_ID, 'Ecommerce Conv Rate by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Percentage of Sessions that resulted in an Ecommerce Transaction during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 134 METRIC_ID, 'Audience Metrics' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get a list of total monthly users, sessions, and page views (for the last year).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 135 METRIC_ID, 'Impressions, Cost, Clicks' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get Google Ads data by distribution network and ad group including impressions, cost, and clicks (for the last 14 days).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 136 METRIC_ID, 'Organic Search Landing Page Performance (Last 30 Days)' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get a list of landing pages including average time on page, number of users, sessions, and more (for the last 30 days).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 137 METRIC_ID, 'Web Property Metrics (Last 30 Days)' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get daily web property metrics including users, sessions, and page views (for the last 30 days).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 138 METRIC_ID, 'Website Performance' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get website performance details including users, bounce rate, page views per session, and more (for the last 2 years).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 139 METRIC_ID, 'Users' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 140 METRIC_ID, 'Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range. A session is the period time a user is actively engaged with your website, app, etc.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 141 METRIC_ID, '% New Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'The Procentage of the Sessions that are created by New Users (first-time visits) during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 142 METRIC_ID, 'New Users' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of First-time Users during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 143 METRIC_ID, 'Pageviews' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Pages Viewed during specified Date Range. Repeated Views of a Single Page are counted.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 144 METRIC_ID, 'Pages / Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Number of Pages Viewed during a Session during specified Date Range. Repeated Views of a Single Page are counted.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 145 METRIC_ID, 'Bounce Rate' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Percentage of Single-Page Sessions in which there was no Interaction with the Page during specified Date Range. A bounced Session has a duration of 0 seconds.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 146 METRIC_ID, 'Screens / Session' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average number of Screens Viewed per Session during specified Date Range. Every View of a Single Screen is counted individually, including repeated Siews of the same Screen.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 147 METRIC_ID, 'Average Session Duration' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Length of a Session during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 148 METRIC_ID, 'Audience Overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Session Duration, Bounce Rate, % New Sessions, Pages / Session, Pageviews, Sessions, Users.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 149 METRIC_ID, 'Audience Overview (mobile)' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Session Duration, Bounce Rate, % New Sessions, Pages / Session, Pageviews, Sessions, Users.This is a multi-metric Datablock with the following metrics: Avg. Session Duration, % New Sessions, Screens / Session, Screen View, Sessions, Users.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 150 METRIC_ID, 'Goal Overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Goal Completion, Goal Conversion Rate.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 151 METRIC_ID, 'Goal Completion' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 152 METRIC_ID, 'Goal Conversion Rate' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Sum of all individual Goal Conversion Rates during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 153 METRIC_ID, 'Behavior Overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Time on Page, Bounce Rate, Pageviews, Unique Pageviews.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 154 METRIC_ID, 'Revenue' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during specified Date Range. Depending on your implementation, this can include Tax and Shipping.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 155 METRIC_ID, 'Transactions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Completed Purchases on your Site during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 156 METRIC_ID, 'Ecommerce Conversion Rate' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Percentage of Sessions that resulted in an Ecommerce Transaction during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 157 METRIC_ID, 'Ecommerce overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Order Value, Ecommerce Conversion Rate, Revenue, Quantity, Revenue per Visit, Transactions, Unique Purchases.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 158 METRIC_ID, 'Avg. Order Value' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Value of transactions during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 159 METRIC_ID, 'Avg. Quantity' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average number of Products Sold per Transaction during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 160 METRIC_ID, 'Avg. revenue per user' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average amount of Money generated split up by User during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 161 METRIC_ID, 'Unique Purchases' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Times a specified Pooduct (or set of Products) was a part of a Transaction during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 162 METRIC_ID, 'Quantity' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Units Sold in Ecommerce transactions during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 163 METRIC_ID, 'Events' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Events occurred during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 164 METRIC_ID, 'Transactions per user' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Transactions divided by total number of Users during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 165 METRIC_ID, 'Avg. Time on Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Amount of Time Users Spent Viewing a specified Page/Screen, or Set of Pages/Screens during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 166 METRIC_ID, 'Avg. Time on Screen' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Amount of Time Users Spent Viewing a specified Screen, or Set of Screens during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 167 METRIC_ID, 'Unique Pageviews' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during which the specified Page was Viewed at least once. A unique pageview is counted for each page URL + page Title combination.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 168 METRIC_ID, 'Unique Screen Views' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Unique Screen Views is the number of Sessions during which the specified Screen was Viewed at least once during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 169 METRIC_ID, 'Screen Views' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Screens Viewed. Repeated Views of a Single Screen are counted during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 170 METRIC_ID, 'Revenue per Visit' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'The amount of Money generated each time a Customer visits your Website during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 171 METRIC_ID, 'Goal Value' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range. This value is calculated by multiplying the number of Goal Conversionsby the value that you assigned to each Goal.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\n)", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Static_Tables", "Dim_Metrics"], "unique_id": "model.sales_dataflo.Dim_Metrics", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Static_Tables/Dim_Metrics.sql", "original_file_path": "ETL/Stage/Static_Tables/Dim_Metrics.sql", "name": "Dim_Metrics", "resource_type": "model", "alias": "Dim_Metrics", "checksum": {"name": "sha256", "checksum": "9dbc20ed7e7eaa5bbfe50890ffe3cc424eb3843de98ca71f5e8ca7686f698ae8"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Static_Tables/Dim_Metrics.sql", "deferred": false, "compiled_sql": "\n\nselect * from(\nSelect 1 METRIC_ID,'Opportunities Won Revenue' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is equal to Closed Won\"\" and Opportunity owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Opportunities Won Revenue during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 2 METRIC_ID,'Key Metrics' METRIC_NAME,5 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'This is a multi-metric Datablock with the following metrics: Avg Case Close Time, Converted Leads, Expected revenue, New Cases, New Leads, Opportunities Lost Count, Open Opportunities Count, Opportunities Won Count, Opportunities Won Revenue.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 3 METRIC_ID,'Converted Leads' METRIC_NAME,4 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Status \"\"is equal to Converted\"\" and Lead owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Number of Converted Leads during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 4 METRIC_ID,'New Leads' METRIC_NAME,3 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Name \"\"is not empty\"\" and Lead owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Number of New Leads during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 5 METRIC_ID,'Open Opportunity by stage' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is not equal to Closed Won\"\" and Opportunity owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Total Open Opportunities Count during the specified Date Range split up by Owner. Daily totals are not available for this metric. Instead, the total current value of this metric will be visualized cumulatively. No historical data is available from the initial connection.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 6 METRIC_ID,'Top Sales Rep' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Sum ' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'This is a multi-metric Datablock with the following metrics: Opportunities Won Amount by Owner, Opportunities Won Count by Owner.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 7 METRIC_ID,'New Leads by industry' METRIC_NAME,3 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'Number of New Leads during the specified Date Range split up by Industry.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 8 METRIC_ID,'Return On Investment Amount by Campaign' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'Total Return On Investment Amount during the specified Date Range split up by Campaign Type. Daily totals are not available for this metric. Instead, the total current value of this metric will be visualized cumulatively. No historical data is available from the initial connection.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 9 METRIC_ID,'Return On Investment by Campaign Type' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'Total Return On Investment during the specified Date Range split up by Campaign Type. Daily totals are not available for this metric. Instead, the total current value of this metric will be visualized cumulatively. No historical data is available from the initial connection.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 10 METRIC_ID,'Opportunities Lost' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is equal to Closed Lost\"\" and Opportunity owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Opportunities Lost Count during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 11 METRIC_ID,'Opportunities Lost Amount by Owner' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is equal to Closed Lost\"\"' METRICCRITERIA,'Opportunities Lost Amount during the specified Date Range split up by Owner.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 12 METRIC_ID,'Opportunities Lost by Owner' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is equal to Closed Lost\"\"' METRICCRITERIA,'Opportunities Lost Count during the specified Date Range split up by Owner.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 13 METRIC_ID,'Average Case Close Time' METRIC_NAME,6 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'Average Case Close Time during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 14 METRIC_ID,'Opportunities Lost Amount by Opp Name' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is equal to Closed Lost\"\" and Opportunity owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Opportunities Lost Amount during the specified Date Range split up by Opportunity Name.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 15 METRIC_ID,'Closed Cases' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Status \"\"is equal to Closed\"\" and case owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Number of Closed Cases during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 16 METRIC_ID,'Opportunities Won Revenue by Product Family' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'Opportunities Won Revenue during the specified Date Range split up by Product Family.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 17 METRIC_ID,'Expected Revenue' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Closed Date \"is not empty\" and Sales stage \"is not equal to Closed Won, closed Lost\"' METRICCRITERIA,'Expected Revenue during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 18 METRIC_ID,'New Leads by Lead Source' METRIC_NAME,3 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Lead Source \"\"is not empty\"\"' METRICCRITERIA,'Number of New Leads during the specified Date Range split up by Lead Source.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 19 METRIC_ID,'New Leads by Lead Status' METRIC_NAME,3 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Lead Status \"\"is not empty\"\"' METRICCRITERIA,'Number of New Leads during the specified Date Range split up by Lead Status.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 20 METRIC_ID,'New Cases' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Case # \"\"is not empty\"\"' METRICCRITERIA,'Number of New Cases during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 21 METRIC_ID,'Opportunities Won' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is equal to Closed Won\"\" and Opportunity owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Opportunities Won Count during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 22 METRIC_ID,'Opportunities Won Amount by Opp Name' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is equal to Closed Won\"\" and Opportunity owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Opportunities Won Amount during the specified Date Range split up by Opportunity Name.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 23 METRIC_ID,'Open Opportunities' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"is not equal to Closed Won, closed Lost\" and Opportunity owner \"is equal to logged in employee\"' METRICCRITERIA,'Total Open Opportunities Count during the specified Date Range. Daily totals are not available for this metric. Instead, the total current value of this metric will be visualized cumulatively. No historical data is available from the initial connection.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 24 METRIC_ID,'Opportunities Overview' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'This is a multi-metric Datablock with the following metrics: Opportunities Lost Count, Open Opportunities Count, Opportunities Won Count.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 25 METRIC_ID,'Open Opportunities Amount by Stage Name' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"is not equal to Closed Won, closed Lost\" and Opportunity owner \"is equal to logged in employee\"' METRICCRITERIA,'Total Open Opportunities Amount during the specified Date Range split up by Owner. Daily totals are not available for this metric. Instead, the total current value of this metric will be visualized cumulatively. No historical data is available from the initial connection.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 26 METRIC_ID,'Open Opportunities Amount by Opp Name' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'Total Open Opportunities Amount during the specified Date Range split up by Opportunity Name. Daily totals are not available for this metric. Instead, the total current value of this metric will be visualized cumulatively. No historical data is available from the initial connection.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 27 METRIC_ID,'Accounts' METRIC_NAME,5 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Account Name \"is not empty\" and Account Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get a list of accounts by annual revenue.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 28 METRIC_ID,'Accounts by Type' METRIC_NAME,5 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Account Type \"is not empty\" and Account Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get a list of accounts by type.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 29 METRIC_ID,'Contacts' METRIC_NAME,6 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, ' Name \"is not empty\" and Contact Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get a list of all your contacts by department including name, phone, title, and more.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 30 METRIC_ID,'Leads' METRIC_NAME,3 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, ' Name \"is not empty\" and Lead Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get a list of leads (for this quarter).' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 31 METRIC_ID,'Leads by location' METRIC_NAME,3 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, ' Address \"is not empty\" and Lead Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get a list of leads by location (for the last 7 days).' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 32 METRIC_ID,'Opportunities by type' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Type \"is not empty\" and Opportunity Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get the number of opportunities by type (for this year or for the last two quarters).' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 33 METRIC_ID,'Leads by status' METRIC_NAME,3 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Lead status \"is not empty\" and Lead Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get a list of new leads by status (for this month).' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 34 METRIC_ID,'Opportunities (for this quarter)' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Opportunity Name \"is not empty\" and Opportunity Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get a list of opportunities (for this quarter)' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion    \nSelect 35 METRIC_ID, 'All Deals Amount' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 36 METRIC_ID, 'All deals by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 37 METRIC_ID, 'Average Time to Close Deal' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 38 METRIC_ID, 'Average Time to Close Deal by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'average' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 39 METRIC_ID, 'Calls' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 40 METRIC_ID, 'Calls & Meetings' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 41 METRIC_ID, 'Calls by Owner' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 42 METRIC_ID, 'Closed Deals Amount by Stage by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 43 METRIC_ID, 'Closed Deals Leaderboard' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 44 METRIC_ID, 'Closed Lost by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 45 METRIC_ID, 'Closed Lost Deals by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 46 METRIC_ID, 'Closed Won Amount by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 47 METRIC_ID, 'Closed Won Deals Amount by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 48 METRIC_ID, 'Closed Won Deals by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 49 METRIC_ID, 'Companies by Owner' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 50 METRIC_ID, 'Deals Amount by Original Source Type' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 51 METRIC_ID, 'Deals by Deal Type (by Create Date)' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 52 METRIC_ID, 'Deals by Original Source Data' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 53 METRIC_ID, 'Deals by Original Source Type' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 54 METRIC_ID, 'Deals by Stage (Create Date)' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 55 METRIC_ID, 'Deals by Stage by Created Date' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 56 METRIC_ID, 'Deals Closed Lost' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 57 METRIC_ID, 'Deals Closed Won' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,' Sales Stage is equal to Closed Won' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 58 METRIC_ID, 'Deals Closed Won Amount' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,' Sales Stage is equal to Closed Won' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 59 METRIC_ID, 'Deals Closed Won and Lost' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 60 METRIC_ID, 'Deals Created' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,' Creation Date is not equal to empty' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 61 METRIC_ID, 'Deals Created by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 62 METRIC_ID, 'Deals Created by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 63 METRIC_ID, 'Deals Lost by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 64 METRIC_ID, 'Deals Won Amount by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 65 METRIC_ID, 'Deals Won by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 66 METRIC_ID, 'Emails Logged' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 67 METRIC_ID, 'Emails Logged by Owner' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 68 METRIC_ID, 'Forecasted Deals by Stage' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 69 METRIC_ID, 'Latest Deal Amount by Name' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 70 METRIC_ID, 'Latest Deal by Name' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 71 METRIC_ID, 'Meetings' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 72 METRIC_ID, 'Meetings by Owner' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 73 METRIC_ID, 'New Company by First Conversion' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 74 METRIC_ID, 'New Deals Amount' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 75 METRIC_ID, 'New Deals Created Amount' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,' Creation Date is not equal to empty' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 76 METRIC_ID, 'Notes' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 77 METRIC_ID, 'Notes by Owner' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 78 METRIC_ID, 'Open (Unclosed) Deals' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 79 METRIC_ID, 'Open (Unclosed) Deals Amount' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 80 METRIC_ID, 'Open (unclosed) Deals by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 81 METRIC_ID, 'Open (Unclosed) Deals by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 82 METRIC_ID, 'Open (Unclosed) Deals by Stage by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 83 METRIC_ID, 'Open Deals Amount by Stage by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 84 METRIC_ID, '1 Overview' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, '' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 85 METRIC_ID, 'Revenue by Company' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 86 METRIC_ID, 'Sales Leaderboard' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 87 METRIC_ID, 'Sales Performance' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'This is a multi-metric Datablock with the following metrics: Average Time to Close Deal, All deals, Companies, Contacts (Marketing), Deals Created, Deals Closed Lost, Deals Closed Won, Deals Closed Won Amount.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 88 METRIC_ID, 'Sales Pipeline' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'This is a multi-metric Datablock with the following metrics: All deals, Companies, Contacts (Marketing), Deals Created, Deals Closed Won.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 89 METRIC_ID, 'Tasks Completed' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 90 METRIC_ID, 'Tasks Completed by Owner' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 91 METRIC_ID, 'Top Won Deals' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 92 METRIC_ID, 'Total Contacts (Marketing)' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 93 METRIC_ID, 'Sessions by Device Type' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get the number of website sessions by device type: desktop, mobile, and tablet (for the last year).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 94 METRIC_ID, 'Traffic By Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get the number of sessions by channel grouping (for the last 2 years).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 95 METRIC_ID, 'Sessions by Social Network' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by Social Networks.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 96 METRIC_ID, 'Top Pages by Pageviews' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Pageviews to each Page during the specified Date Range. This metric is collecting data for the top 500 Pages in the connected Google Analytics Account. To gather data for more than 500 Pages, please use the Query Builder tool.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 97 METRIC_ID, 'Avg. Quantity by Sources' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average number of Products Sold per Transaction during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 98 METRIC_ID, 'Product revenue by Product name' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Individual Product Sales during specified Date Range split up by Product Name.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 99 METRIC_ID, 'Sessions by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 100 METRIC_ID, 'Sessions by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 101 METRIC_ID, 'Sessions by Organic Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by Organic Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 102 METRIC_ID, 'Goal Completion by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 103 METRIC_ID, 'Goal Completion by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 104 METRIC_ID, 'Quantity by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Units Sold in Ecommerce transactions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 105 METRIC_ID, 'Quantity by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Units Sold in Ecommerce transactions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 106 METRIC_ID, 'Revenue by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 107 METRIC_ID, 'Revenue by landing page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during the specified Date Range split up by Landing Page.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 108 METRIC_ID, 'Goal Completion by Goal' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range split up by Goals.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 109 METRIC_ID, 'Sessions by Paid Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Top Paid Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 110 METRIC_ID, 'Goal Value by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 111 METRIC_ID, 'Revenue by Organic Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during specified Date Range split up by Organic Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 112 METRIC_ID, 'Goal Value by Goal' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range split up by Goals.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 113 METRIC_ID, 'Screen Views by Screen Name' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Screens Viewed. Repeated Views of a Single Screen are counted during specified Date Range split up by Screen Name.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 114 METRIC_ID, 'Sessions by Landing Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Landing Page.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 115 METRIC_ID, 'Sessions by Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions to each Page during the specified Date Range. This metric is collecting data for the top 500 Pages in the connected Google Analytics Account. To gather data for more than 500 Pages, please use the Query Builder tool.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 116 METRIC_ID, 'Sessions by New vs Returning' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by New vs Returning.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 117 METRIC_ID, 'Goal Completion by New vs Returning' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range split up by New vs Returning.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 118 METRIC_ID, 'Top Source/Medium by Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Top Sources/Mediums.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 119 METRIC_ID, 'Top Sources By Revenue' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 120 METRIC_ID, 'Sessions by Geo Location' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified date range split up by Geo Location.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 121 METRIC_ID, 'Sessions by Top Geo Location' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified date range split up by Geo Location.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 122 METRIC_ID, 'Transactions by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Completed Purchases on your Site during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 123 METRIC_ID, 'Goal Value by New vs Returning' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range split up by New vs Returning.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 124 METRIC_ID, 'Transactions by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Completed Purchases on your Site during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 125 METRIC_ID, 'Transactions per User by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Transactions split up by Channels during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 126 METRIC_ID, 'Transactions per User by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Transactions split up by original Source during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 127 METRIC_ID, 'Goal Value by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 128 METRIC_ID, 'Users by Landing Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during the specified Date Range split up by Landing Page.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 129 METRIC_ID, 'Users by Organic Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during specified Date Range split up by Organic Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 130 METRIC_ID, 'Users by Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Users who have initiated at least one Session to each Page during the specified Date Range. This metric is collecting data for the top 500 Pages in the connected Google Analytics Account. To gather data for more than 500 Pages, please use the Query Builder tool.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 131 METRIC_ID, 'Top Events by Sessions by Label' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Total number of Sessions during the specified date range split up by top Events by Label.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 132 METRIC_ID, 'Users by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 133 METRIC_ID, 'Ecommerce Conv Rate by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Percentage of Sessions that resulted in an Ecommerce Transaction during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 134 METRIC_ID, 'Audience Metrics' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get a list of total monthly users, sessions, and page views (for the last year).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 135 METRIC_ID, 'Impressions, Cost, Clicks' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get Google Ads data by distribution network and ad group including impressions, cost, and clicks (for the last 14 days).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 136 METRIC_ID, 'Organic Search Landing Page Performance (Last 30 Days)' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get a list of landing pages including average time on page, number of users, sessions, and more (for the last 30 days).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 137 METRIC_ID, 'Web Property Metrics (Last 30 Days)' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get daily web property metrics including users, sessions, and page views (for the last 30 days).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 138 METRIC_ID, 'Website Performance' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get website performance details including users, bounce rate, page views per session, and more (for the last 2 years).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 139 METRIC_ID, 'Users' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 140 METRIC_ID, 'Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range. A session is the period time a user is actively engaged with your website, app, etc.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 141 METRIC_ID, '% New Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'The Procentage of the Sessions that are created by New Users (first-time visits) during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 142 METRIC_ID, 'New Users' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of First-time Users during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 143 METRIC_ID, 'Pageviews' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Pages Viewed during specified Date Range. Repeated Views of a Single Page are counted.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 144 METRIC_ID, 'Pages / Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Number of Pages Viewed during a Session during specified Date Range. Repeated Views of a Single Page are counted.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 145 METRIC_ID, 'Bounce Rate' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Percentage of Single-Page Sessions in which there was no Interaction with the Page during specified Date Range. A bounced Session has a duration of 0 seconds.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 146 METRIC_ID, 'Screens / Session' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average number of Screens Viewed per Session during specified Date Range. Every View of a Single Screen is counted individually, including repeated Siews of the same Screen.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 147 METRIC_ID, 'Average Session Duration' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Length of a Session during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 148 METRIC_ID, 'Audience Overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Session Duration, Bounce Rate, % New Sessions, Pages / Session, Pageviews, Sessions, Users.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 149 METRIC_ID, 'Audience Overview (mobile)' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Session Duration, Bounce Rate, % New Sessions, Pages / Session, Pageviews, Sessions, Users.This is a multi-metric Datablock with the following metrics: Avg. Session Duration, % New Sessions, Screens / Session, Screen View, Sessions, Users.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 150 METRIC_ID, 'Goal Overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Goal Completion, Goal Conversion Rate.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 151 METRIC_ID, 'Goal Completion' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 152 METRIC_ID, 'Goal Conversion Rate' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Sum of all individual Goal Conversion Rates during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 153 METRIC_ID, 'Behavior Overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Time on Page, Bounce Rate, Pageviews, Unique Pageviews.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 154 METRIC_ID, 'Revenue' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during specified Date Range. Depending on your implementation, this can include Tax and Shipping.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 155 METRIC_ID, 'Transactions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Completed Purchases on your Site during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 156 METRIC_ID, 'Ecommerce Conversion Rate' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Percentage of Sessions that resulted in an Ecommerce Transaction during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 157 METRIC_ID, 'Ecommerce overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Order Value, Ecommerce Conversion Rate, Revenue, Quantity, Revenue per Visit, Transactions, Unique Purchases.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 158 METRIC_ID, 'Avg. Order Value' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Value of transactions during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 159 METRIC_ID, 'Avg. Quantity' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average number of Products Sold per Transaction during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 160 METRIC_ID, 'Avg. revenue per user' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average amount of Money generated split up by User during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 161 METRIC_ID, 'Unique Purchases' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Times a specified Pooduct (or set of Products) was a part of a Transaction during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 162 METRIC_ID, 'Quantity' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Units Sold in Ecommerce transactions during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 163 METRIC_ID, 'Events' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Events occurred during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 164 METRIC_ID, 'Transactions per user' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Transactions divided by total number of Users during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 165 METRIC_ID, 'Avg. Time on Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Amount of Time Users Spent Viewing a specified Page/Screen, or Set of Pages/Screens during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 166 METRIC_ID, 'Avg. Time on Screen' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Amount of Time Users Spent Viewing a specified Screen, or Set of Screens during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 167 METRIC_ID, 'Unique Pageviews' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during which the specified Page was Viewed at least once. A unique pageview is counted for each page URL + page Title combination.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 168 METRIC_ID, 'Unique Screen Views' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Unique Screen Views is the number of Sessions during which the specified Screen was Viewed at least once during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 169 METRIC_ID, 'Screen Views' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Screens Viewed. Repeated Views of a Single Screen are counted during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 170 METRIC_ID, 'Revenue per Visit' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'The amount of Money generated each time a Customer visits your Website during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 171 METRIC_ID, 'Goal Value' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range. This value is calculated by multiplying the number of Goal Conversionsby the value that you assigned to each Goal.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \n)", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nselect * from(\nSelect 1 METRIC_ID,'Opportunities Won Revenue' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is equal to Closed Won\"\" and Opportunity owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Opportunities Won Revenue during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 2 METRIC_ID,'Key Metrics' METRIC_NAME,5 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'This is a multi-metric Datablock with the following metrics: Avg Case Close Time, Converted Leads, Expected revenue, New Cases, New Leads, Opportunities Lost Count, Open Opportunities Count, Opportunities Won Count, Opportunities Won Revenue.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 3 METRIC_ID,'Converted Leads' METRIC_NAME,4 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Status \"\"is equal to Converted\"\" and Lead owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Number of Converted Leads during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 4 METRIC_ID,'New Leads' METRIC_NAME,3 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Name \"\"is not empty\"\" and Lead owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Number of New Leads during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 5 METRIC_ID,'Open Opportunity by stage' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is not equal to Closed Won\"\" and Opportunity owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Total Open Opportunities Count during the specified Date Range split up by Owner. Daily totals are not available for this metric. Instead, the total current value of this metric will be visualized cumulatively. No historical data is available from the initial connection.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 6 METRIC_ID,'Top Sales Rep' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Sum ' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'This is a multi-metric Datablock with the following metrics: Opportunities Won Amount by Owner, Opportunities Won Count by Owner.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 7 METRIC_ID,'New Leads by industry' METRIC_NAME,3 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'Number of New Leads during the specified Date Range split up by Industry.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 8 METRIC_ID,'Return On Investment Amount by Campaign' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'Total Return On Investment Amount during the specified Date Range split up by Campaign Type. Daily totals are not available for this metric. Instead, the total current value of this metric will be visualized cumulatively. No historical data is available from the initial connection.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 9 METRIC_ID,'Return On Investment by Campaign Type' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'Total Return On Investment during the specified Date Range split up by Campaign Type. Daily totals are not available for this metric. Instead, the total current value of this metric will be visualized cumulatively. No historical data is available from the initial connection.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 10 METRIC_ID,'Opportunities Lost' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is equal to Closed Lost\"\" and Opportunity owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Opportunities Lost Count during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 11 METRIC_ID,'Opportunities Lost Amount by Owner' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is equal to Closed Lost\"\"' METRICCRITERIA,'Opportunities Lost Amount during the specified Date Range split up by Owner.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 12 METRIC_ID,'Opportunities Lost by Owner' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is equal to Closed Lost\"\"' METRICCRITERIA,'Opportunities Lost Count during the specified Date Range split up by Owner.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 13 METRIC_ID,'Average Case Close Time' METRIC_NAME,6 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'Average Case Close Time during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 14 METRIC_ID,'Opportunities Lost Amount by Opp Name' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is equal to Closed Lost\"\" and Opportunity owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Opportunities Lost Amount during the specified Date Range split up by Opportunity Name.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 15 METRIC_ID,'Closed Cases' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Status \"\"is equal to Closed\"\" and case owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Number of Closed Cases during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 16 METRIC_ID,'Opportunities Won Revenue by Product Family' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'Opportunities Won Revenue during the specified Date Range split up by Product Family.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 17 METRIC_ID,'Expected Revenue' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Closed Date \"is not empty\" and Sales stage \"is not equal to Closed Won, closed Lost\"' METRICCRITERIA,'Expected Revenue during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 18 METRIC_ID,'New Leads by Lead Source' METRIC_NAME,3 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Lead Source \"\"is not empty\"\"' METRICCRITERIA,'Number of New Leads during the specified Date Range split up by Lead Source.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 19 METRIC_ID,'New Leads by Lead Status' METRIC_NAME,3 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Lead Status \"\"is not empty\"\"' METRICCRITERIA,'Number of New Leads during the specified Date Range split up by Lead Status.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 20 METRIC_ID,'New Cases' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Case # \"\"is not empty\"\"' METRICCRITERIA,'Number of New Cases during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 21 METRIC_ID,'Opportunities Won' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is equal to Closed Won\"\" and Opportunity owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Opportunities Won Count during the specified Date Range.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 22 METRIC_ID,'Opportunities Won Amount by Opp Name' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"\"is equal to Closed Won\"\" and Opportunity owner \"\"is equal to logged in employee\"\"' METRICCRITERIA,'Opportunities Won Amount during the specified Date Range split up by Opportunity Name.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 23 METRIC_ID,'Open Opportunities' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"is not equal to Closed Won, closed Lost\" and Opportunity owner \"is equal to logged in employee\"' METRICCRITERIA,'Total Open Opportunities Count during the specified Date Range. Daily totals are not available for this metric. Instead, the total current value of this metric will be visualized cumulatively. No historical data is available from the initial connection.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 24 METRIC_ID,'Opportunities Overview' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'This is a multi-metric Datablock with the following metrics: Opportunities Lost Count, Open Opportunities Count, Opportunities Won Count.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 25 METRIC_ID,'Open Opportunities Amount by Stage Name' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Sales stage \"is not equal to Closed Won, closed Lost\" and Opportunity owner \"is equal to logged in employee\"' METRICCRITERIA,'Total Open Opportunities Amount during the specified Date Range split up by Owner. Daily totals are not available for this metric. Instead, the total current value of this metric will be visualized cumulatively. No historical data is available from the initial connection.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 26 METRIC_ID,'Open Opportunities Amount by Opp Name' METRIC_NAME,1 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Sum' RESULT_TYPE, 'SF' ENTITY_TYPE, '' METRICCRITERIA,'Total Open Opportunities Amount during the specified Date Range split up by Opportunity Name. Daily totals are not available for this metric. Instead, the total current value of this metric will be visualized cumulatively. No historical data is available from the initial connection.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 27 METRIC_ID,'Accounts' METRIC_NAME,5 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Account Name \"is not empty\" and Account Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get a list of accounts by annual revenue.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 28 METRIC_ID,'Accounts by Type' METRIC_NAME,5 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Account Type \"is not empty\" and Account Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get a list of accounts by type.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 29 METRIC_ID,'Contacts' METRIC_NAME,6 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, ' Name \"is not empty\" and Contact Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get a list of all your contacts by department including name, phone, title, and more.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 30 METRIC_ID,'Leads' METRIC_NAME,3 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, ' Name \"is not empty\" and Lead Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get a list of leads (for this quarter).' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 31 METRIC_ID,'Leads by location' METRIC_NAME,3 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, ' Address \"is not empty\" and Lead Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get a list of leads by location (for the last 7 days).' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 32 METRIC_ID,'Opportunities by type' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Type \"is not empty\" and Opportunity Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get the number of opportunities by type (for this year or for the last two quarters).' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 33 METRIC_ID,'Leads by status' METRIC_NAME,3 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'TRUE' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Lead status \"is not empty\" and Lead Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get a list of new leads by status (for this month).' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 34 METRIC_ID,'Opportunities (for this quarter)' METRIC_NAME,2 METRIC_CATEGORY_ID,'TRUE' ACTIVE_FLAG,'' SEGMENT_FLAG,'Count' RESULT_TYPE, 'SF' ENTITY_TYPE, 'Opportunity Name \"is not empty\" and Opportunity Owner is equal to \"Logged in employee\"' METRICCRITERIA,'Get a list of opportunities (for this quarter)' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion    \nSelect 35 METRIC_ID, 'All Deals Amount' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 36 METRIC_ID, 'All deals by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 37 METRIC_ID, 'Average Time to Close Deal' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 38 METRIC_ID, 'Average Time to Close Deal by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'average' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 39 METRIC_ID, 'Calls' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 40 METRIC_ID, 'Calls & Meetings' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 41 METRIC_ID, 'Calls by Owner' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 42 METRIC_ID, 'Closed Deals Amount by Stage by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 43 METRIC_ID, 'Closed Deals Leaderboard' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 44 METRIC_ID, 'Closed Lost by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 45 METRIC_ID, 'Closed Lost Deals by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 46 METRIC_ID, 'Closed Won Amount by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 47 METRIC_ID, 'Closed Won Deals Amount by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 48 METRIC_ID, 'Closed Won Deals by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 49 METRIC_ID, 'Companies by Owner' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 50 METRIC_ID, 'Deals Amount by Original Source Type' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 51 METRIC_ID, 'Deals by Deal Type (by Create Date)' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 52 METRIC_ID, 'Deals by Original Source Data' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 53 METRIC_ID, 'Deals by Original Source Type' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 54 METRIC_ID, 'Deals by Stage (Create Date)' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 55 METRIC_ID, 'Deals by Stage by Created Date' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 56 METRIC_ID, 'Deals Closed Lost' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 57 METRIC_ID, 'Deals Closed Won' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,' Sales Stage is equal to Closed Won' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 58 METRIC_ID, 'Deals Closed Won Amount' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,' Sales Stage is equal to Closed Won' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 59 METRIC_ID, 'Deals Closed Won and Lost' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 60 METRIC_ID, 'Deals Created' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,' Creation Date is not equal to empty' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 61 METRIC_ID, 'Deals Created by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 62 METRIC_ID, 'Deals Created by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 63 METRIC_ID, 'Deals Lost by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 64 METRIC_ID, 'Deals Won Amount by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 65 METRIC_ID, 'Deals Won by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 66 METRIC_ID, 'Emails Logged' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 67 METRIC_ID, 'Emails Logged by Owner' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 68 METRIC_ID, 'Forecasted Deals by Stage' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 69 METRIC_ID, 'Latest Deal Amount by Name' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 70 METRIC_ID, 'Latest Deal by Name' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 71 METRIC_ID, 'Meetings' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 72 METRIC_ID, 'Meetings by Owner' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 73 METRIC_ID, 'New Company by First Conversion' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 74 METRIC_ID, 'New Deals Amount' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 75 METRIC_ID, 'New Deals Created Amount' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,' Creation Date is not equal to empty' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 76 METRIC_ID, 'Notes' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 77 METRIC_ID, 'Notes by Owner' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 78 METRIC_ID, 'Open (Unclosed) Deals' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 79 METRIC_ID, 'Open (Unclosed) Deals Amount' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 80 METRIC_ID, 'Open (unclosed) Deals by Owner' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 81 METRIC_ID, 'Open (Unclosed) Deals by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 82 METRIC_ID, 'Open (Unclosed) Deals by Stage by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 83 METRIC_ID, 'Open Deals Amount by Stage by Pipeline' METRIC_NAME, 2 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 84 METRIC_ID, '1 Overview' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, '' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 85 METRIC_ID, 'Revenue by Company' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 86 METRIC_ID, 'Sales Leaderboard' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 87 METRIC_ID, 'Sales Performance' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'This is a multi-metric Datablock with the following metrics: Average Time to Close Deal, All deals, Companies, Contacts (Marketing), Deals Created, Deals Closed Lost, Deals Closed Won, Deals Closed Won Amount.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 88 METRIC_ID, 'Sales Pipeline' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'sum' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'This is a multi-metric Datablock with the following metrics: All deals, Companies, Contacts (Marketing), Deals Created, Deals Closed Won.' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 89 METRIC_ID, 'Tasks Completed' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 90 METRIC_ID, 'Tasks Completed by Owner' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'Count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 91 METRIC_ID, 'Top Won Deals' METRIC_NAME, 1 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 92 METRIC_ID, 'Total Contacts (Marketing)' METRIC_NAME, 0 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'HS' ENTITY_TYPE,'' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 93 METRIC_ID, 'Sessions by Device Type' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get the number of website sessions by device type: desktop, mobile, and tablet (for the last year).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 94 METRIC_ID, 'Traffic By Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get the number of sessions by channel grouping (for the last 2 years).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 95 METRIC_ID, 'Sessions by Social Network' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by Social Networks.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 96 METRIC_ID, 'Top Pages by Pageviews' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Pageviews to each Page during the specified Date Range. This metric is collecting data for the top 500 Pages in the connected Google Analytics Account. To gather data for more than 500 Pages, please use the Query Builder tool.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 97 METRIC_ID, 'Avg. Quantity by Sources' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average number of Products Sold per Transaction during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 98 METRIC_ID, 'Product revenue by Product name' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Individual Product Sales during specified Date Range split up by Product Name.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 99 METRIC_ID, 'Sessions by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 100 METRIC_ID, 'Sessions by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 101 METRIC_ID, 'Sessions by Organic Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by Organic Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 102 METRIC_ID, 'Goal Completion by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 103 METRIC_ID, 'Goal Completion by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 104 METRIC_ID, 'Quantity by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Units Sold in Ecommerce transactions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 105 METRIC_ID, 'Quantity by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Units Sold in Ecommerce transactions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 106 METRIC_ID, 'Revenue by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 107 METRIC_ID, 'Revenue by landing page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during the specified Date Range split up by Landing Page.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 108 METRIC_ID, 'Goal Completion by Goal' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range split up by Goals.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 109 METRIC_ID, 'Sessions by Paid Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Top Paid Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 110 METRIC_ID, 'Goal Value by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 111 METRIC_ID, 'Revenue by Organic Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during specified Date Range split up by Organic Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 112 METRIC_ID, 'Goal Value by Goal' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range split up by Goals.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 113 METRIC_ID, 'Screen Views by Screen Name' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Screens Viewed. Repeated Views of a Single Screen are counted during specified Date Range split up by Screen Name.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 114 METRIC_ID, 'Sessions by Landing Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Landing Page.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 115 METRIC_ID, 'Sessions by Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions to each Page during the specified Date Range. This metric is collecting data for the top 500 Pages in the connected Google Analytics Account. To gather data for more than 500 Pages, please use the Query Builder tool.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 116 METRIC_ID, 'Sessions by New vs Returning' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by New vs Returning.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 117 METRIC_ID, 'Goal Completion by New vs Returning' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range split up by New vs Returning.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 118 METRIC_ID, 'Top Source/Medium by Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Top Sources/Mediums.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 119 METRIC_ID, 'Top Sources By Revenue' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 120 METRIC_ID, 'Sessions by Geo Location' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified date range split up by Geo Location.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 121 METRIC_ID, 'Sessions by Top Geo Location' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified date range split up by Geo Location.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 122 METRIC_ID, 'Transactions by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Completed Purchases on your Site during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 123 METRIC_ID, 'Goal Value by New vs Returning' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range split up by New vs Returning.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 124 METRIC_ID, 'Transactions by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Completed Purchases on your Site during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 125 METRIC_ID, 'Transactions per User by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Transactions split up by Channels during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 126 METRIC_ID, 'Transactions per User by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Transactions split up by original Source during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 127 METRIC_ID, 'Goal Value by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 128 METRIC_ID, 'Users by Landing Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during the specified Date Range split up by Landing Page.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 129 METRIC_ID, 'Users by Organic Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during specified Date Range split up by Organic Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 130 METRIC_ID, 'Users by Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Users who have initiated at least one Session to each Page during the specified Date Range. This metric is collecting data for the top 500 Pages in the connected Google Analytics Account. To gather data for more than 500 Pages, please use the Query Builder tool.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 131 METRIC_ID, 'Top Events by Sessions by Label' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Total number of Sessions during the specified date range split up by top Events by Label.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 132 METRIC_ID, 'Users by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 133 METRIC_ID, 'Ecommerce Conv Rate by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, 'TRUE' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Percentage of Sessions that resulted in an Ecommerce Transaction during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 134 METRIC_ID, 'Audience Metrics' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get a list of total monthly users, sessions, and page views (for the last year).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 135 METRIC_ID, 'Impressions, Cost, Clicks' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get Google Ads data by distribution network and ad group including impressions, cost, and clicks (for the last 14 days).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 136 METRIC_ID, 'Organic Search Landing Page Performance (Last 30 Days)' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get a list of landing pages including average time on page, number of users, sessions, and more (for the last 30 days).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 137 METRIC_ID, 'Web Property Metrics (Last 30 Days)' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get daily web property metrics including users, sessions, and page views (for the last 30 days).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 138 METRIC_ID, 'Website Performance' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get website performance details including users, bounce rate, page views per session, and more (for the last 2 years).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 139 METRIC_ID, 'Users' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 140 METRIC_ID, 'Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range. A session is the period time a user is actively engaged with your website, app, etc.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 141 METRIC_ID, '% New Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'The Procentage of the Sessions that are created by New Users (first-time visits) during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 142 METRIC_ID, 'New Users' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of First-time Users during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 143 METRIC_ID, 'Pageviews' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Pages Viewed during specified Date Range. Repeated Views of a Single Page are counted.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 144 METRIC_ID, 'Pages / Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Number of Pages Viewed during a Session during specified Date Range. Repeated Views of a Single Page are counted.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 145 METRIC_ID, 'Bounce Rate' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Percentage of Single-Page Sessions in which there was no Interaction with the Page during specified Date Range. A bounced Session has a duration of 0 seconds.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 146 METRIC_ID, 'Screens / Session' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average number of Screens Viewed per Session during specified Date Range. Every View of a Single Screen is counted individually, including repeated Siews of the same Screen.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 147 METRIC_ID, 'Average Session Duration' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Length of a Session during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 148 METRIC_ID, 'Audience Overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Session Duration, Bounce Rate, % New Sessions, Pages / Session, Pageviews, Sessions, Users.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 149 METRIC_ID, 'Audience Overview (mobile)' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Session Duration, Bounce Rate, % New Sessions, Pages / Session, Pageviews, Sessions, Users.This is a multi-metric Datablock with the following metrics: Avg. Session Duration, % New Sessions, Screens / Session, Screen View, Sessions, Users.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 150 METRIC_ID, 'Goal Overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Goal Completion, Goal Conversion Rate.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 151 METRIC_ID, 'Goal Completion' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 152 METRIC_ID, 'Goal Conversion Rate' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Sum of all individual Goal Conversion Rates during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 153 METRIC_ID, 'Behavior Overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Time on Page, Bounce Rate, Pageviews, Unique Pageviews.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 154 METRIC_ID, 'Revenue' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during specified Date Range. Depending on your implementation, this can include Tax and Shipping.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 155 METRIC_ID, 'Transactions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Completed Purchases on your Site during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 156 METRIC_ID, 'Ecommerce Conversion Rate' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Percentage of Sessions that resulted in an Ecommerce Transaction during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 157 METRIC_ID, 'Ecommerce overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Order Value, Ecommerce Conversion Rate, Revenue, Quantity, Revenue per Visit, Transactions, Unique Purchases.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 158 METRIC_ID, 'Avg. Order Value' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Value of transactions during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 159 METRIC_ID, 'Avg. Quantity' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average number of Products Sold per Transaction during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 160 METRIC_ID, 'Avg. revenue per user' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average amount of Money generated split up by User during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 161 METRIC_ID, 'Unique Purchases' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Times a specified Pooduct (or set of Products) was a part of a Transaction during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 162 METRIC_ID, 'Quantity' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Units Sold in Ecommerce transactions during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 163 METRIC_ID, 'Events' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Events occurred during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 164 METRIC_ID, 'Transactions per user' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Transactions divided by total number of Users during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 165 METRIC_ID, 'Avg. Time on Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Amount of Time Users Spent Viewing a specified Page/Screen, or Set of Pages/Screens during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 166 METRIC_ID, 'Avg. Time on Screen' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Amount of Time Users Spent Viewing a specified Screen, or Set of Screens during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 167 METRIC_ID, 'Unique Pageviews' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during which the specified Page was Viewed at least once. A unique pageview is counted for each page URL + page Title combination.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 168 METRIC_ID, 'Unique Screen Views' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Unique Screen Views is the number of Sessions during which the specified Screen was Viewed at least once during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 169 METRIC_ID, 'Screen Views' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Screens Viewed. Repeated Views of a Single Screen are counted during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 170 METRIC_ID, 'Revenue per Visit' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'The amount of Money generated each time a Customer visits your Website during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 171 METRIC_ID, 'Goal Value' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'TRUE' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range. This value is calculated by multiplying the number of Goal Conversionsby the value that you assigned to each Goal.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \n)"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.732323169708252, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:03:59.393620Z", "completed_at": "2021-02-10T18:03:59.465584Z"}, {"name": "execute", "started_at": "2021-02-10T18:03:59.466104Z", "completed_at": "2021-02-10T18:04:02.050302Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(\r\n    materialized=\"table\"\r\n) \r\n}}\r\n\r\nselect *from (\r\nSelect 1 metric_category_id,'Productivity' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 2 metric_category_id,'Opportunity Generation' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 3 metric_category_id,'Lead Generation' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 4 metric_category_id,'Conversion' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 5 metric_category_id,'Account' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 6 metric_category_id,'Contact' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 7 metric_category_id,'Sub-list' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\nunion\r\nSelect 8 metric_category_id,'Funnel' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\r\n)", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Static_Tables", "Dim_Metrics_Category"], "unique_id": "model.sales_dataflo.Dim_Metrics_Category", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Static_Tables/Dim_Metrics_Category.sql", "original_file_path": "ETL/Stage/Static_Tables/Dim_Metrics_Category.sql", "name": "Dim_Metrics_Category", "resource_type": "model", "alias": "Dim_Metrics_Category", "checksum": {"name": "sha256", "checksum": "8e92f059796758356059b44b5038b2ce2241057c00415699322f022db4347dc3"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Static_Tables/Dim_Metrics_Category.sql", "deferred": false, "compiled_sql": "\n\nselect *from (\nSelect 1 metric_category_id,'Productivity' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 2 metric_category_id,'Opportunity Generation' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 3 metric_category_id,'Lead Generation' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 4 metric_category_id,'Conversion' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 5 metric_category_id,'Account' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 6 metric_category_id,'Contact' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 7 metric_category_id,'Sub-list' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 8 metric_category_id,'Funnel' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\n)", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nselect *from (\nSelect 1 metric_category_id,'Productivity' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 2 metric_category_id,'Opportunity Generation' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 3 metric_category_id,'Lead Generation' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 4 metric_category_id,'Conversion' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 5 metric_category_id,'Account' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 6 metric_category_id,'Contact' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 7 metric_category_id,'Sub-list' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\nunion\nSelect 8 metric_category_id,'Funnel' metrics_category,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS\n)"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.3912205696105957, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:04:02.130136Z", "completed_at": "2021-02-10T18:04:02.163233Z"}, {"name": "execute", "started_at": "2021-02-10T18:04:02.163748Z", "completed_at": "2021-02-10T18:04:03.443872Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(\r\n  materialized=\"table\"\r\n) \r\n}}\r\n\r\nselect * from(\r\nSelect 1 METRIC_ID, 'Sessions by Device Type' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get the number of website sessions by device type: desktop, mobile, and tablet (for the last year).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 2 METRIC_ID, 'Traffic By Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get the number of sessions by channel grouping (for the last 2 years).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 3 METRIC_ID, 'Sessions by Social Network' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by Social Networks.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 4 METRIC_ID, 'Top Pages by Pageviews' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Pageviews to each Page during the specified Date Range. This metric is collecting data for the top 500 Pages in the connected Google Analytics Account. To gather data for more than 500 Pages, please use the Query Builder tool.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 5 METRIC_ID, 'Avg. Quantity by Sources' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average number of Products Sold per Transaction during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 6 METRIC_ID, 'Product revenue by Product name' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Individual Product Sales during specified Date Range split up by Product Name.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 7 METRIC_ID, 'Sessions by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 8 METRIC_ID, 'Sessions by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 9 METRIC_ID, 'Sessions by Organic Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by Organic Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 10 METRIC_ID, 'Goal Completion by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 11 METRIC_ID, 'Goal Completion by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 12 METRIC_ID, 'Quantity by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Units Sold in Ecommerce transactions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 13 METRIC_ID, 'Quantity by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Units Sold in Ecommerce transactions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 14 METRIC_ID, 'Revenue by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 15 METRIC_ID, 'Revenue by landing page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during the specified Date Range split up by Landing Page.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 16 METRIC_ID, 'Goal Completion by Goal' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range split up by Goals.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 17 METRIC_ID, 'Sessions by Paid Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Top Paid Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 18 METRIC_ID, 'Goal Value by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 19 METRIC_ID, 'Revenue by Organic Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during specified Date Range split up by Organic Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 20 METRIC_ID, 'Goal Value by Goal' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range split up by Goals.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 21 METRIC_ID, 'Screen Views by Screen Name' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Screens Viewed. Repeated Views of a Single Screen are counted during specified Date Range split up by Screen Name.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 22 METRIC_ID, 'Sessions by Landing Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Landing Page.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 23 METRIC_ID, 'Sessions by Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions to each Page during the specified Date Range. This metric is collecting data for the top 500 Pages in the connected Google Analytics Account. To gather data for more than 500 Pages, please use the Query Builder tool.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 24 METRIC_ID, 'Sessions by New vs Returning' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by New vs Returning.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 25 METRIC_ID, 'Goal Completion by New vs Returning' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range split up by New vs Returning.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 26 METRIC_ID, 'Top Source/Medium by Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Top Sources/Mediums.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 27 METRIC_ID, 'Top Sources By Revenue' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 28 METRIC_ID, 'Sessions by Geo Location' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified date range split up by Geo Location.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 29 METRIC_ID, 'Sessions by Top Geo Location' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified date range split up by Geo Location.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 30 METRIC_ID, 'Transactions by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Completed Purchases on your Site during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 31 METRIC_ID, 'Goal Value by New vs Returning' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range split up by New vs Returning.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 32 METRIC_ID, 'Transactions by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Completed Purchases on your Site during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 33 METRIC_ID, 'Transactions per User by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Transactions split up by Channels during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 34 METRIC_ID, 'Transactions per User by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Transactions split up by original Source during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 35 METRIC_ID, 'Goal Value by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 36 METRIC_ID, 'Users by Landing Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during the specified Date Range split up by Landing Page.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 37 METRIC_ID, 'Users by Organic Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during specified Date Range split up by Organic Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 38 METRIC_ID, 'Users by Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Users who have initiated at least one Session to each Page during the specified Date Range. This metric is collecting data for the top 500 Pages in the connected Google Analytics Account. To gather data for more than 500 Pages, please use the Query Builder tool.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 39 METRIC_ID, 'Top Events by Sessions by Label' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Total number of Sessions during the specified date range split up by top Events by Label.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 40 METRIC_ID, 'Users by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 41 METRIC_ID, 'Ecommerce Conv Rate by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Percentage of Sessions that resulted in an Ecommerce Transaction during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 42 METRIC_ID, 'Audience Metrics' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get a list of total monthly users, sessions, and page views (for the last year).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 43 METRIC_ID, 'Impressions, Cost, Clicks' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get Google Ads data by distribution network and ad group including impressions, cost, and clicks (for the last 14 days).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 44 METRIC_ID, 'Organic Search Landing Page Performance (Last 30 Days)' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get a list of landing pages including average time on page, number of users, sessions, and more (for the last 30 days).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 45 METRIC_ID, 'Web Property Metrics (Last 30 Days)' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get daily web property metrics including users, sessions, and page views (for the last 30 days).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 46 METRIC_ID, 'Website Performance' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get website performance details including users, bounce rate, page views per session, and more (for the last 2 years).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 47 METRIC_ID, 'Users' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 48 METRIC_ID, 'Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range. A session is the period time a user is actively engaged with your website, app, etc. \r\n' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 49 METRIC_ID, '% New Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'The Procentage of the Sessions that are created by New Users (first-time visits) during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 50 METRIC_ID, 'New Users' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of First-time Users during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 51 METRIC_ID, 'Pageviews' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Pages Viewed during specified Date Range. Repeated Views of a Single Page are counted.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 52 METRIC_ID, 'Pages / Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Number of Pages Viewed during a Session during specified Date Range. Repeated Views of a Single Page are counted.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 53 METRIC_ID, 'Bounce Rate' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Percentage of Single-Page Sessions in which there was no Interaction with the Page during specified Date Range. A bounced Session has a duration of 0 seconds.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 54 METRIC_ID, 'Screens / Session' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average number of Screens Viewed per Session during specified Date Range. Every View of a Single Screen is counted individually, including repeated Siews of the same Screen.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 55 METRIC_ID, 'Average Session Duration' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Length of a Session during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 56 METRIC_ID, 'Audience Overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Session Duration, Bounce Rate, % New Sessions, Pages / Session, Pageviews, Sessions, Users.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 57 METRIC_ID, 'Audience Overview (mobile)' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Session Duration, Bounce Rate, % New Sessions, Pages / Session, Pageviews, Sessions, Users.This is a multi-metric Datablock with the following metrics: Avg. Session Duration, % New Sessions, Screens / Session, Screen View, Sessions, Users.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 58 METRIC_ID, 'Goal Overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Goal Completion, Goal Conversion Rate.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 59 METRIC_ID, 'Goal Completion' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 60 METRIC_ID, 'Goal Conversion Rate' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Sum of all individual Goal Conversion Rates during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 61 METRIC_ID, 'Behavior Overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Time on Page, Bounce Rate, Pageviews, Unique Pageviews.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 62 METRIC_ID, 'Revenue' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during specified Date Range. Depending on your implementation, this can include Tax and Shipping.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 63 METRIC_ID, 'Transactions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Completed Purchases on your Site during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 64 METRIC_ID, 'Ecommerce Conversion Rate' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Percentage of Sessions that resulted in an Ecommerce Transaction during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 65 METRIC_ID, 'Ecommerce overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Order Value, Ecommerce Conversion Rate, Revenue, Quantity, Revenue per Visit, Transactions, Unique Purchases.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 66 METRIC_ID, 'Avg. Order Value' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Value of transactions during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 67 METRIC_ID, 'Avg. Quantity' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average number of Products Sold per Transaction during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 68 METRIC_ID, 'Avg. revenue per user' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average amount of Money generated split up by User during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 69 METRIC_ID, 'Unique Purchases' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Times a specified Pooduct (or set of Products) was a part of a Transaction during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 70 METRIC_ID, 'Quantity' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Units Sold in Ecommerce transactions during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 71 METRIC_ID, 'Events' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Events occurred during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 72 METRIC_ID, 'Transactions per user' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Transactions divided by total number of Users during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 73 METRIC_ID, 'Avg. Time on Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Amount of Time Users Spent Viewing a specified Page/Screen, or Set of Pages/Screens during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 74 METRIC_ID, 'Avg. Time on Screen' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Amount of Time Users Spent Viewing a specified Screen, or Set of Screens during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 75 METRIC_ID, 'Unique Pageviews' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during which the specified Page was Viewed at least once. A unique pageview is counted for each page URL + page Title combination.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 76 METRIC_ID, 'Unique Screen Views' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Unique Screen Views is the number of Sessions during which the specified Screen was Viewed at least once during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 77 METRIC_ID, 'Screen Views' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Screens Viewed. Repeated Views of a Single Screen are counted during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 78 METRIC_ID, 'Revenue per Visit' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'The amount of Money generated each time a Customer visits your Website during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\nUnion\r\nSelect 79 METRIC_ID, 'Goal Value' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range. This value is calculated by multiplying the number of Goal Conversionsby the value that you assigned to each Goal.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \r\n)", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Static_Tables", "Dim_Mkt_Metrics"], "unique_id": "model.sales_dataflo.Dim_Mkt_Metrics", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Static_Tables/Dim_Mkt_Metrics.sql", "original_file_path": "ETL/Stage/Static_Tables/Dim_Mkt_Metrics.sql", "name": "Dim_Mkt_Metrics", "resource_type": "model", "alias": "Dim_Mkt_Metrics", "checksum": {"name": "sha256", "checksum": "4841dec3c91fa9390f609fcfdbad4d614af317e7fb60ca812cad25ab864bb15c"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Static_Tables/Dim_Mkt_Metrics.sql", "deferred": false, "compiled_sql": "\n\nselect * from(\nSelect 1 METRIC_ID, 'Sessions by Device Type' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get the number of website sessions by device type: desktop, mobile, and tablet (for the last year).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 2 METRIC_ID, 'Traffic By Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get the number of sessions by channel grouping (for the last 2 years).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 3 METRIC_ID, 'Sessions by Social Network' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by Social Networks.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 4 METRIC_ID, 'Top Pages by Pageviews' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Pageviews to each Page during the specified Date Range. This metric is collecting data for the top 500 Pages in the connected Google Analytics Account. To gather data for more than 500 Pages, please use the Query Builder tool.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 5 METRIC_ID, 'Avg. Quantity by Sources' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average number of Products Sold per Transaction during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 6 METRIC_ID, 'Product revenue by Product name' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Individual Product Sales during specified Date Range split up by Product Name.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 7 METRIC_ID, 'Sessions by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 8 METRIC_ID, 'Sessions by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 9 METRIC_ID, 'Sessions by Organic Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by Organic Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 10 METRIC_ID, 'Goal Completion by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 11 METRIC_ID, 'Goal Completion by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 12 METRIC_ID, 'Quantity by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Units Sold in Ecommerce transactions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 13 METRIC_ID, 'Quantity by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Units Sold in Ecommerce transactions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 14 METRIC_ID, 'Revenue by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 15 METRIC_ID, 'Revenue by landing page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during the specified Date Range split up by Landing Page.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 16 METRIC_ID, 'Goal Completion by Goal' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range split up by Goals.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 17 METRIC_ID, 'Sessions by Paid Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Top Paid Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 18 METRIC_ID, 'Goal Value by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 19 METRIC_ID, 'Revenue by Organic Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during specified Date Range split up by Organic Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 20 METRIC_ID, 'Goal Value by Goal' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range split up by Goals.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 21 METRIC_ID, 'Screen Views by Screen Name' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Screens Viewed. Repeated Views of a Single Screen are counted during specified Date Range split up by Screen Name.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 22 METRIC_ID, 'Sessions by Landing Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Landing Page.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 23 METRIC_ID, 'Sessions by Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions to each Page during the specified Date Range. This metric is collecting data for the top 500 Pages in the connected Google Analytics Account. To gather data for more than 500 Pages, please use the Query Builder tool.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 24 METRIC_ID, 'Sessions by New vs Returning' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by New vs Returning.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 25 METRIC_ID, 'Goal Completion by New vs Returning' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range split up by New vs Returning.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 26 METRIC_ID, 'Top Source/Medium by Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Top Sources/Mediums.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 27 METRIC_ID, 'Top Sources By Revenue' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 28 METRIC_ID, 'Sessions by Geo Location' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified date range split up by Geo Location.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 29 METRIC_ID, 'Sessions by Top Geo Location' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified date range split up by Geo Location.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 30 METRIC_ID, 'Transactions by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Completed Purchases on your Site during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 31 METRIC_ID, 'Goal Value by New vs Returning' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range split up by New vs Returning.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 32 METRIC_ID, 'Transactions by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Completed Purchases on your Site during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 33 METRIC_ID, 'Transactions per User by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Transactions split up by Channels during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 34 METRIC_ID, 'Transactions per User by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Transactions split up by original Source during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 35 METRIC_ID, 'Goal Value by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 36 METRIC_ID, 'Users by Landing Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during the specified Date Range split up by Landing Page.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 37 METRIC_ID, 'Users by Organic Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during specified Date Range split up by Organic Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 38 METRIC_ID, 'Users by Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Users who have initiated at least one Session to each Page during the specified Date Range. This metric is collecting data for the top 500 Pages in the connected Google Analytics Account. To gather data for more than 500 Pages, please use the Query Builder tool.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 39 METRIC_ID, 'Top Events by Sessions by Label' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Total number of Sessions during the specified date range split up by top Events by Label.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 40 METRIC_ID, 'Users by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 41 METRIC_ID, 'Ecommerce Conv Rate by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Percentage of Sessions that resulted in an Ecommerce Transaction during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 42 METRIC_ID, 'Audience Metrics' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get a list of total monthly users, sessions, and page views (for the last year).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 43 METRIC_ID, 'Impressions, Cost, Clicks' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get Google Ads data by distribution network and ad group including impressions, cost, and clicks (for the last 14 days).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 44 METRIC_ID, 'Organic Search Landing Page Performance (Last 30 Days)' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get a list of landing pages including average time on page, number of users, sessions, and more (for the last 30 days).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 45 METRIC_ID, 'Web Property Metrics (Last 30 Days)' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get daily web property metrics including users, sessions, and page views (for the last 30 days).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 46 METRIC_ID, 'Website Performance' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get website performance details including users, bounce rate, page views per session, and more (for the last 2 years).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 47 METRIC_ID, 'Users' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 48 METRIC_ID, 'Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range. A session is the period time a user is actively engaged with your website, app, etc. \n' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 49 METRIC_ID, '% New Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'The Procentage of the Sessions that are created by New Users (first-time visits) during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 50 METRIC_ID, 'New Users' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of First-time Users during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 51 METRIC_ID, 'Pageviews' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Pages Viewed during specified Date Range. Repeated Views of a Single Page are counted.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 52 METRIC_ID, 'Pages / Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Number of Pages Viewed during a Session during specified Date Range. Repeated Views of a Single Page are counted.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 53 METRIC_ID, 'Bounce Rate' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Percentage of Single-Page Sessions in which there was no Interaction with the Page during specified Date Range. A bounced Session has a duration of 0 seconds.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 54 METRIC_ID, 'Screens / Session' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average number of Screens Viewed per Session during specified Date Range. Every View of a Single Screen is counted individually, including repeated Siews of the same Screen.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 55 METRIC_ID, 'Average Session Duration' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Length of a Session during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 56 METRIC_ID, 'Audience Overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Session Duration, Bounce Rate, % New Sessions, Pages / Session, Pageviews, Sessions, Users.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 57 METRIC_ID, 'Audience Overview (mobile)' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Session Duration, Bounce Rate, % New Sessions, Pages / Session, Pageviews, Sessions, Users.This is a multi-metric Datablock with the following metrics: Avg. Session Duration, % New Sessions, Screens / Session, Screen View, Sessions, Users.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 58 METRIC_ID, 'Goal Overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Goal Completion, Goal Conversion Rate.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 59 METRIC_ID, 'Goal Completion' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 60 METRIC_ID, 'Goal Conversion Rate' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Sum of all individual Goal Conversion Rates during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 61 METRIC_ID, 'Behavior Overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Time on Page, Bounce Rate, Pageviews, Unique Pageviews.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 62 METRIC_ID, 'Revenue' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during specified Date Range. Depending on your implementation, this can include Tax and Shipping.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 63 METRIC_ID, 'Transactions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Completed Purchases on your Site during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 64 METRIC_ID, 'Ecommerce Conversion Rate' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Percentage of Sessions that resulted in an Ecommerce Transaction during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 65 METRIC_ID, 'Ecommerce overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Order Value, Ecommerce Conversion Rate, Revenue, Quantity, Revenue per Visit, Transactions, Unique Purchases.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 66 METRIC_ID, 'Avg. Order Value' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Value of transactions during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 67 METRIC_ID, 'Avg. Quantity' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average number of Products Sold per Transaction during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 68 METRIC_ID, 'Avg. revenue per user' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average amount of Money generated split up by User during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 69 METRIC_ID, 'Unique Purchases' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Times a specified Pooduct (or set of Products) was a part of a Transaction during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 70 METRIC_ID, 'Quantity' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Units Sold in Ecommerce transactions during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 71 METRIC_ID, 'Events' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Events occurred during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 72 METRIC_ID, 'Transactions per user' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Transactions divided by total number of Users during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 73 METRIC_ID, 'Avg. Time on Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Amount of Time Users Spent Viewing a specified Page/Screen, or Set of Pages/Screens during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 74 METRIC_ID, 'Avg. Time on Screen' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Amount of Time Users Spent Viewing a specified Screen, or Set of Screens during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 75 METRIC_ID, 'Unique Pageviews' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during which the specified Page was Viewed at least once. A unique pageview is counted for each page URL + page Title combination.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 76 METRIC_ID, 'Unique Screen Views' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Unique Screen Views is the number of Sessions during which the specified Screen was Viewed at least once during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 77 METRIC_ID, 'Screen Views' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Screens Viewed. Repeated Views of a Single Screen are counted during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 78 METRIC_ID, 'Revenue per Visit' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'The amount of Money generated each time a Customer visits your Website during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 79 METRIC_ID, 'Goal Value' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range. This value is calculated by multiplying the number of Goal Conversionsby the value that you assigned to each Goal.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \n)", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nselect * from(\nSelect 1 METRIC_ID, 'Sessions by Device Type' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get the number of website sessions by device type: desktop, mobile, and tablet (for the last year).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 2 METRIC_ID, 'Traffic By Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get the number of sessions by channel grouping (for the last 2 years).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 3 METRIC_ID, 'Sessions by Social Network' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by Social Networks.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 4 METRIC_ID, 'Top Pages by Pageviews' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Pageviews to each Page during the specified Date Range. This metric is collecting data for the top 500 Pages in the connected Google Analytics Account. To gather data for more than 500 Pages, please use the Query Builder tool.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 5 METRIC_ID, 'Avg. Quantity by Sources' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average number of Products Sold per Transaction during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 6 METRIC_ID, 'Product revenue by Product name' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Individual Product Sales during specified Date Range split up by Product Name.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 7 METRIC_ID, 'Sessions by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 8 METRIC_ID, 'Sessions by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 9 METRIC_ID, 'Sessions by Organic Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by Organic Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 10 METRIC_ID, 'Goal Completion by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 11 METRIC_ID, 'Goal Completion by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 12 METRIC_ID, 'Quantity by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Units Sold in Ecommerce transactions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 13 METRIC_ID, 'Quantity by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Units Sold in Ecommerce transactions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 14 METRIC_ID, 'Revenue by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 15 METRIC_ID, 'Revenue by landing page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during the specified Date Range split up by Landing Page.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 16 METRIC_ID, 'Goal Completion by Goal' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range split up by Goals.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 17 METRIC_ID, 'Sessions by Paid Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Top Paid Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 18 METRIC_ID, 'Goal Value by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 19 METRIC_ID, 'Revenue by Organic Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during specified Date Range split up by Organic Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 20 METRIC_ID, 'Goal Value by Goal' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range split up by Goals.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 21 METRIC_ID, 'Screen Views by Screen Name' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Screens Viewed. Repeated Views of a Single Screen are counted during specified Date Range split up by Screen Name.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 22 METRIC_ID, 'Sessions by Landing Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Landing Page.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 23 METRIC_ID, 'Sessions by Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions to each Page during the specified Date Range. This metric is collecting data for the top 500 Pages in the connected Google Analytics Account. To gather data for more than 500 Pages, please use the Query Builder tool.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 24 METRIC_ID, 'Sessions by New vs Returning' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range split up by New vs Returning.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 25 METRIC_ID, 'Goal Completion by New vs Returning' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range split up by New vs Returning.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 26 METRIC_ID, 'Top Source/Medium by Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified Date Range split up by Top Sources/Mediums.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 27 METRIC_ID, 'Top Sources By Revenue' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 28 METRIC_ID, 'Sessions by Geo Location' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified date range split up by Geo Location.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 29 METRIC_ID, 'Sessions by Top Geo Location' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during the specified date range split up by Geo Location.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 30 METRIC_ID, 'Transactions by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Completed Purchases on your Site during specified Date Range split up by Channels.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 31 METRIC_ID, 'Goal Value by New vs Returning' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range split up by New vs Returning.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 32 METRIC_ID, 'Transactions by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Completed Purchases on your Site during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 33 METRIC_ID, 'Transactions per User by Channel' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Transactions split up by Channels during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 34 METRIC_ID, 'Transactions per User by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Transactions split up by original Source during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 35 METRIC_ID, 'Goal Value by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 36 METRIC_ID, 'Users by Landing Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during the specified Date Range split up by Landing Page.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 37 METRIC_ID, 'Users by Organic Keyword' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during specified Date Range split up by Organic Keywords.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 38 METRIC_ID, 'Users by Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Users who have initiated at least one Session to each Page during the specified Date Range. This metric is collecting data for the top 500 Pages in the connected Google Analytics Account. To gather data for more than 500 Pages, please use the Query Builder tool.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 39 METRIC_ID, 'Top Events by Sessions by Label' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Total number of Sessions during the specified date range split up by top Events by Label.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 40 METRIC_ID, 'Users by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 41 METRIC_ID, 'Ecommerce Conv Rate by Source' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, 'Y' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Percentage of Sessions that resulted in an Ecommerce Transaction during the specified Date Range split up by Sources.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 42 METRIC_ID, 'Audience Metrics' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get a list of total monthly users, sessions, and page views (for the last year).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 43 METRIC_ID, 'Impressions, Cost, Clicks' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get Google Ads data by distribution network and ad group including impressions, cost, and clicks (for the last 14 days).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 44 METRIC_ID, 'Organic Search Landing Page Performance (Last 30 Days)' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get a list of landing pages including average time on page, number of users, sessions, and more (for the last 30 days).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 45 METRIC_ID, 'Web Property Metrics (Last 30 Days)' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get daily web property metrics including users, sessions, and page views (for the last 30 days).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 46 METRIC_ID, 'Website Performance' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Get website performance details including users, bounce rate, page views per session, and more (for the last 2 years).' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 47 METRIC_ID, 'Users' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Users who have initiated at least one Session during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 48 METRIC_ID, 'Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during specified Date Range. A session is the period time a user is actively engaged with your website, app, etc. \n' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 49 METRIC_ID, '% New Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'The Procentage of the Sessions that are created by New Users (first-time visits) during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 50 METRIC_ID, 'New Users' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of First-time Users during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 51 METRIC_ID, 'Pageviews' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Pages Viewed during specified Date Range. Repeated Views of a Single Page are counted.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 52 METRIC_ID, 'Pages / Sessions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Number of Pages Viewed during a Session during specified Date Range. Repeated Views of a Single Page are counted.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 53 METRIC_ID, 'Bounce Rate' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Percentage of Single-Page Sessions in which there was no Interaction with the Page during specified Date Range. A bounced Session has a duration of 0 seconds.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 54 METRIC_ID, 'Screens / Session' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average number of Screens Viewed per Session during specified Date Range. Every View of a Single Screen is counted individually, including repeated Siews of the same Screen.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 55 METRIC_ID, 'Average Session Duration' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Length of a Session during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 56 METRIC_ID, 'Audience Overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Session Duration, Bounce Rate, % New Sessions, Pages / Session, Pageviews, Sessions, Users.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 57 METRIC_ID, 'Audience Overview (mobile)' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Session Duration, Bounce Rate, % New Sessions, Pages / Session, Pageviews, Sessions, Users.This is a multi-metric Datablock with the following metrics: Avg. Session Duration, % New Sessions, Screens / Session, Screen View, Sessions, Users.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 58 METRIC_ID, 'Goal Overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Goal Completion, Goal Conversion Rate.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 59 METRIC_ID, 'Goal Completion' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Conversions during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 60 METRIC_ID, 'Goal Conversion Rate' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Sum of all individual Goal Conversion Rates during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 61 METRIC_ID, 'Behavior Overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Time on Page, Bounce Rate, Pageviews, Unique Pageviews.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 62 METRIC_ID, 'Revenue' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Revenue from Web Ecommerce or In-app Transactions during specified Date Range. Depending on your implementation, this can include Tax and Shipping.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 63 METRIC_ID, 'Transactions' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Completed Purchases on your Site during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 64 METRIC_ID, 'Ecommerce Conversion Rate' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Percentage of Sessions that resulted in an Ecommerce Transaction during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 65 METRIC_ID, 'Ecommerce overview' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'This is a multi-metric Datablock with the following metrics: Avg. Order Value, Ecommerce Conversion Rate, Revenue, Quantity, Revenue per Visit, Transactions, Unique Purchases.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 66 METRIC_ID, 'Avg. Order Value' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Value of transactions during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 67 METRIC_ID, 'Avg. Quantity' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average number of Products Sold per Transaction during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 68 METRIC_ID, 'Avg. revenue per user' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average amount of Money generated split up by User during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 69 METRIC_ID, 'Unique Purchases' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Times a specified Pooduct (or set of Products) was a part of a Transaction during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 70 METRIC_ID, 'Quantity' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Units Sold in Ecommerce transactions during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 71 METRIC_ID, 'Events' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Events occurred during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 72 METRIC_ID, 'Transactions per user' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Transactions divided by total number of Users during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 73 METRIC_ID, 'Avg. Time on Page' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Amount of Time Users Spent Viewing a specified Page/Screen, or Set of Pages/Screens during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 74 METRIC_ID, 'Avg. Time on Screen' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Average Amount of Time Users Spent Viewing a specified Screen, or Set of Screens during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 75 METRIC_ID, 'Unique Pageviews' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Sessions during which the specified Page was Viewed at least once. A unique pageview is counted for each page URL + page Title combination.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 76 METRIC_ID, 'Unique Screen Views' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Unique Screen Views is the number of Sessions during which the specified Screen was Viewed at least once during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 77 METRIC_ID, 'Screen Views' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Number of Screens Viewed. Repeated Views of a Single Screen are counted during specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 78 METRIC_ID, 'Revenue per Visit' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'The amount of Money generated each time a Customer visits your Website during the specified Date Range.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \nUnion\nSelect 79 METRIC_ID, 'Goal Value' METRIC_NAME, 10 METRIC_CATEGORY_ID, 'Y' ACTIVE_FLAG, '' SEGMENT_FLAG, 'count' RESULT_TYPE,'GA' ENTITY_TYPE,'Value produced by Goal Conversions on your Site during specified Date Range. This value is calculated by multiplying the number of Goal Conversionsby the value that you assigned to each Goal.' METRICCRITERIA,'' DESCRIPTION,'D_METRICS_DIM_LOAD' DW_SESSION_NM,CURRENT_TIMESTAMP DW_INS_UPD_DTS  \n)"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.145691394805908, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:04:03.524995Z", "completed_at": "2021-02-10T18:04:03.575405Z"}, {"name": "execute", "started_at": "2021-02-10T18:04:03.575827Z", "completed_at": "2021-02-10T18:04:05.593357Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n/*\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'product_id'\r\n      )\r\n}}\r\n\r\n\r\n    WITH source AS (\r\n        SELECT * from {{ var('V_SF_Schema') }}.product\r\n    ),Dim_Product as(\r\n        SELECT\r\n            NULL AS account_id,\r\n            {{ dbt_utils.surrogate_key('id') }} AS product_id,\r\n            ID AS Source_id,\r\n            PRODUCT_CODE AS product_code,\r\n            NAME AS product_name,\r\n            IS_ACTIVE AS active_flag,\r\n            QUANTITY_UNIT_OF_MEASURE AS Quantity_UOM,\r\n             {% if var(\"V_SF_CRM_ETL\") == 'FIVETRAN_SF' %}  'SF' {% endif %} as Source_type,\r\n            'D_PRODUCT_DIM_LOAD'  AS DW_SESSION_NM,\r\n            {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n         FROM\r\n            source \r\n     \r\n    )    \r\nselect * from Dim_Product\r\n*/", "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Product"], "unique_id": "model.sales_dataflo.Dim_Product", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Product.sql", "original_file_path": "ETL/Target/Tables/Dim_Product.sql", "name": "Dim_Product", "resource_type": "model", "alias": "Dim_Product", "checksum": {"name": "sha256", "checksum": "5c176964b6ba17710df65497eafbd0e564f8b3dd0bcc8296b644215651899bd5"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "product_id"}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": null, "deferred": false}, "error": "Compilation Error in model Dim_Product (ETL/Target/Tables/Dim_Product.sql)\n  Required var 'V_SF_Schema' not found in config:\n  Vars supplied to Dim_Product = {\n      \"V_DB\": \"DATAFLOTEST_DATABASE\",\n      \"V_SF_CRM_ETL\": \"FIVETRAN_SF\",\n      \"V_Schema\": \"DBT_SALESDATAFLO\",\n      \"enable_SF_source\": true,\n      \"enable_ads_warehouse\": false,\n      \"enable_crm_warehouse\": true,\n      \"enable_finance_warehouse\": false,\n      \"enable_marketing_warehouse\": false,\n      \"enable_product_warehouse\": false,\n      \"enable_projects_warehouse\": false,\n      \"enable_subscriptions_warehouse\": false\n  }\n  \n  > in model Dim_Product (ETL/Target/Tables/Dim_Product.sql)\n  > called by model Dim_Product (ETL/Target/Tables/Dim_Product.sql)", "status": "ERROR", "execution_time": 0.01116037368774414, "thread_id": "Thread-1", "timing": [], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_MKT_ENTITY where ENTITY_TYPE = 'GA'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n{% for V_SF_Schema in results %}\r\n\r\n {% if  V_SF_Schema[0:2] == 'GA'  %} \r\n      \r\n  select\r\n        {{ dbt_utils.surrogate_key('_FIVETRAN_ID') }}  AS ID,\r\n        DATE,\r\n        PROFILE,\r\n        ADWORDS_CAMPAIGN_ID,\r\n        GOAL_VALUE_ALL,\r\n        SESSIONS,\r\n        GOAL_COMPLETIONS_ALL,\r\n        GOAL_CONVERSION_RATE_ALL,\r\n        USERS,\r\n        BOUNCE_RATE,\r\n        AD_CLICKS,\r\n        AD_COST,\r\n        CPC,\r\n        \r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_ADWORDS_CAMPAIGNS_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.ADWORDS_CAMPAIGNS\r\n          {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}        \r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Adwords_Campaigns"], "unique_id": "model.sales_dataflo.Stg_Adwords_Campaigns", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Adwords_Campaigns.sql", "original_file_path": "ETL/Stage/Stg_Adwords_Campaigns.sql", "name": "Stg_Adwords_Campaigns", "resource_type": "model", "alias": "Stg_Adwords_Campaigns", "checksum": {"name": "sha256", "checksum": "785dfaeeb224a8c54a22318458c0e63a4793fdb4ff41fc12bf4c2345d3ca861b"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Adwords_Campaigns.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        ADWORDS_CAMPAIGN_ID,\n        GOAL_VALUE_ALL,\n        SESSIONS,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        AD_CLICKS,\n        AD_COST,\n        CPC,\n        \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_ADWORDS_CAMPAIGNS_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.ADWORDS_CAMPAIGNS\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        ADWORDS_CAMPAIGN_ID,\n        GOAL_VALUE_ALL,\n        SESSIONS,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        AD_CLICKS,\n        AD_COST,\n        CPC,\n        \n        'GA_ANAND_01022021' as Source_type,\n        'D_ADWORDS_CAMPAIGNS_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.ADWORDS_CAMPAIGNS\n                  \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        ADWORDS_CAMPAIGN_ID,\n        GOAL_VALUE_ALL,\n        SESSIONS,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        AD_CLICKS,\n        AD_COST,\n        CPC,\n        \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_ADWORDS_CAMPAIGNS_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.ADWORDS_CAMPAIGNS\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        ADWORDS_CAMPAIGN_ID,\n        GOAL_VALUE_ALL,\n        SESSIONS,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        AD_CLICKS,\n        AD_COST,\n        CPC,\n        \n        'GA_ANAND_01022021' as Source_type,\n        'D_ADWORDS_CAMPAIGNS_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.ADWORDS_CAMPAIGNS\n                  \n    \n"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.8903019428253174, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:04:05.686388Z", "completed_at": "2021-02-10T18:04:06.288621Z"}, {"name": "execute", "started_at": "2021-02-10T18:04:06.289031Z", "completed_at": "2021-02-10T18:04:07.483031Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_MKT_ENTITY where ENTITY_TYPE = 'GA'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n{% for V_SF_Schema in results %}\r\n\r\n {% if  V_SF_Schema[0:2] == 'GA'  %} \r\n      \r\n  select\r\n        {{ dbt_utils.surrogate_key('_FIVETRAN_ID') }}  AS ID,\r\n        DATE,\r\n        PROFILE,\r\n        DATE_HOUR,\r\n        GOAL_VALUE_ALL,\r\n        SESSIONS,\r\n        GOAL_COMPLETIONS_ALL,\r\n        PAGEVIEWS_PER_SESSION,\r\n        GOAL_CONVERSION_RATE_ALL,\r\n        USERS,\r\n        BOUNCE_RATE,\r\n        AD_CLICKS,\r\n        AD_COST,\r\n        CPC,    \r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_ADWORDS_HOURLY_STATS_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.ADWORDS_HOURLY_STATS\r\n          {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}        \r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Adwords_Hourly_Stats"], "unique_id": "model.sales_dataflo.Stg_Adwords_Hourly_Stats", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Adwords_Hourly_Stats.sql", "original_file_path": "ETL/Stage/Stg_Adwords_Hourly_Stats.sql", "name": "Stg_Adwords_Hourly_Stats", "resource_type": "model", "alias": "Stg_Adwords_Hourly_Stats", "checksum": {"name": "sha256", "checksum": "1d2ab4748b1b8805d0e0de4e7fede490aa6295ce8e42f22ce18b9bd99f3fedde"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Adwords_Hourly_Stats.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        DATE_HOUR,\n        GOAL_VALUE_ALL,\n        SESSIONS,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        AD_CLICKS,\n        AD_COST,\n        CPC,    \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_ADWORDS_HOURLY_STATS_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.ADWORDS_HOURLY_STATS\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        DATE_HOUR,\n        GOAL_VALUE_ALL,\n        SESSIONS,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        AD_CLICKS,\n        AD_COST,\n        CPC,    \n        'GA_ANAND_01022021' as Source_type,\n        'D_ADWORDS_HOURLY_STATS_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.ADWORDS_HOURLY_STATS\n                  \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        DATE_HOUR,\n        GOAL_VALUE_ALL,\n        SESSIONS,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        AD_CLICKS,\n        AD_COST,\n        CPC,    \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_ADWORDS_HOURLY_STATS_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.ADWORDS_HOURLY_STATS\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        DATE_HOUR,\n        GOAL_VALUE_ALL,\n        SESSIONS,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        AD_CLICKS,\n        AD_COST,\n        CPC,    \n        'GA_ANAND_01022021' as Source_type,\n        'D_ADWORDS_HOURLY_STATS_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.ADWORDS_HOURLY_STATS\n                  \n    \n"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.8081750869750977, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:04:07.579301Z", "completed_at": "2021-02-10T18:04:07.967360Z"}, {"name": "execute", "started_at": "2021-02-10T18:04:07.967786Z", "completed_at": "2021-02-10T18:04:09.315117Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_MKT_ENTITY where ENTITY_TYPE = 'GA'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n{% for V_SF_Schema in results %}\r\n\r\n {% if  V_SF_Schema[0:2] == 'GA'  %} \r\n      \r\n  select\r\n        {{ dbt_utils.surrogate_key('_FIVETRAN_ID') }}  AS ID,\r\n        DATE,\r\n        PROFILE,\r\n        NEW_USERS,\r\n        SESSIONS,\r\n        SESSIONS_PER_USER,\r\n        PAGEVIEWS,\r\n        AVG_SESSION_DURATION,\r\n        PAGEVIEWS_PER_SESSION,\r\n        USERS,\r\n        BOUNCE_RATE,\r\n     \r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_AUDIENCE_OVERVIEW_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.AUDIENCE_OVERVIEW\r\n          {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}        \r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Audience_Overview"], "unique_id": "model.sales_dataflo.Stg_Audience_Overview", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Audience_Overview.sql", "original_file_path": "ETL/Stage/Stg_Audience_Overview.sql", "name": "Stg_Audience_Overview", "resource_type": "model", "alias": "Stg_Audience_Overview", "checksum": {"name": "sha256", "checksum": "1bb6dd2ba1fbee7cdc9e400fbd1f99f07f9136126fca3ad318a1021e45488f1d"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Audience_Overview.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        NEW_USERS,\n        SESSIONS,\n        SESSIONS_PER_USER,\n        PAGEVIEWS,\n        AVG_SESSION_DURATION,\n        PAGEVIEWS_PER_SESSION,\n        USERS,\n        BOUNCE_RATE,\n     \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_AUDIENCE_OVERVIEW_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.AUDIENCE_OVERVIEW\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        NEW_USERS,\n        SESSIONS,\n        SESSIONS_PER_USER,\n        PAGEVIEWS,\n        AVG_SESSION_DURATION,\n        PAGEVIEWS_PER_SESSION,\n        USERS,\n        BOUNCE_RATE,\n     \n        'GA_ANAND_01022021' as Source_type,\n        'D_AUDIENCE_OVERVIEW_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.AUDIENCE_OVERVIEW\n                  \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        NEW_USERS,\n        SESSIONS,\n        SESSIONS_PER_USER,\n        PAGEVIEWS,\n        AVG_SESSION_DURATION,\n        PAGEVIEWS_PER_SESSION,\n        USERS,\n        BOUNCE_RATE,\n     \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_AUDIENCE_OVERVIEW_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.AUDIENCE_OVERVIEW\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        NEW_USERS,\n        SESSIONS,\n        SESSIONS_PER_USER,\n        PAGEVIEWS,\n        AVG_SESSION_DURATION,\n        PAGEVIEWS_PER_SESSION,\n        USERS,\n        BOUNCE_RATE,\n     \n        'GA_ANAND_01022021' as Source_type,\n        'D_AUDIENCE_OVERVIEW_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.AUDIENCE_OVERVIEW\n                  \n    \n"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.5885016918182373, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:04:09.391012Z", "completed_at": "2021-02-10T18:04:09.781667Z"}, {"name": "execute", "started_at": "2021-02-10T18:04:09.782054Z", "completed_at": "2021-02-10T18:04:10.891631Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_MKT_ENTITY where ENTITY_TYPE = 'GA'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n{% for V_SF_Schema in results %}\r\n\r\n {% if  V_SF_Schema[0:2] == 'GA'  %} \r\n      \r\n  select\r\n        {{ dbt_utils.surrogate_key('_FIVETRAN_ID') }}  AS ID,\r\n        DATE,\r\n        PROFILE,\r\n        OPERATING_SYSTEM,\r\n        BROWSER,\r\n        GOAL_VALUE_ALL,\r\n        NEW_USERS,\r\n        SESSIONS,\r\n        AVG_SESSION_DURATION,\r\n        GOAL_COMPLETIONS_ALL,\r\n        PAGEVIEWS_PER_SESSION,\r\n        GOAL_CONVERSION_RATE_ALL,\r\n        USERS,\r\n        BOUNCE_RATE,\r\n   \r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_BROWSER_AND_OPERATING_SYSTEM_OVERVIEW_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.BROWSER_AND_OPERATING_SYSTEM_OVERVIEW\r\n          {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}        \r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Browser_And_Operating_System_Overview"], "unique_id": "model.sales_dataflo.Stg_Browser_And_Operating_System_Overview", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Browser_And_Operating_System_Overview.sql", "original_file_path": "ETL/Stage/Stg_Browser_And_Operating_System_Overview.sql", "name": "Stg_Browser_And_Operating_System_Overview", "resource_type": "model", "alias": "Stg_Browser_And_Operating_System_Overview", "checksum": {"name": "sha256", "checksum": "d72403d5aa0d365b2229226b71f52667a56635dde69b48d6f743c2f8b42f3deb"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Browser_And_Operating_System_Overview.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        OPERATING_SYSTEM,\n        BROWSER,\n        GOAL_VALUE_ALL,\n        NEW_USERS,\n        SESSIONS,\n        AVG_SESSION_DURATION,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n   \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_BROWSER_AND_OPERATING_SYSTEM_OVERVIEW_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.BROWSER_AND_OPERATING_SYSTEM_OVERVIEW\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        OPERATING_SYSTEM,\n        BROWSER,\n        GOAL_VALUE_ALL,\n        NEW_USERS,\n        SESSIONS,\n        AVG_SESSION_DURATION,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n   \n        'GA_ANAND_01022021' as Source_type,\n        'D_BROWSER_AND_OPERATING_SYSTEM_OVERVIEW_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.BROWSER_AND_OPERATING_SYSTEM_OVERVIEW\n                  \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        OPERATING_SYSTEM,\n        BROWSER,\n        GOAL_VALUE_ALL,\n        NEW_USERS,\n        SESSIONS,\n        AVG_SESSION_DURATION,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n   \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_BROWSER_AND_OPERATING_SYSTEM_OVERVIEW_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.BROWSER_AND_OPERATING_SYSTEM_OVERVIEW\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        OPERATING_SYSTEM,\n        BROWSER,\n        GOAL_VALUE_ALL,\n        NEW_USERS,\n        SESSIONS,\n        AVG_SESSION_DURATION,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n   \n        'GA_ANAND_01022021' as Source_type,\n        'D_BROWSER_AND_OPERATING_SYSTEM_OVERVIEW_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.BROWSER_AND_OPERATING_SYSTEM_OVERVIEW\n                  \n    \n"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.7165100574493408, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:04:11.137489Z", "completed_at": "2021-02-10T18:04:11.606523Z"}, {"name": "execute", "started_at": "2021-02-10T18:04:11.606891Z", "completed_at": "2021-02-10T18:04:12.772828Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_MKT_ENTITY where ENTITY_TYPE = 'GA'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n{% for V_SF_Schema in results %}\r\n\r\n {% if  V_SF_Schema[0:2] == 'GA'  %} \r\n      \r\n  select\r\n        {{ dbt_utils.surrogate_key('_FIVETRAN_ID') }}  AS ID,\r\n        DATE,\r\n        PROFILE,\r\n        CAMPAIGN,\r\n        GOAL_VALUE_ALL,\r\n        NEW_USERS,\r\n        SESSIONS,\r\n        GOAL_COMPLETIONS_ALL,\r\n        PAGEVIEWS_PER_SESSION,\r\n        GOAL_CONVERSION_RATE_ALL,\r\n        USERS,\r\n        BOUNCE_RATE,\r\n        \r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_CAMPAIGN_PERFORMANCE_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.CAMPAIGN_PERFORMANCE\r\n          {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}        \r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Campaign_Performance"], "unique_id": "model.sales_dataflo.Stg_Campaign_Performance", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Campaign_Performance.sql", "original_file_path": "ETL/Stage/Stg_Campaign_Performance.sql", "name": "Stg_Campaign_Performance", "resource_type": "model", "alias": "Stg_Campaign_Performance", "checksum": {"name": "sha256", "checksum": "8744ef0b84a08bfa9164b3ccfb79354f6b0d9db274fb972c0384d2c19463a96a"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Campaign_Performance.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        CAMPAIGN,\n        GOAL_VALUE_ALL,\n        NEW_USERS,\n        SESSIONS,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_CAMPAIGN_PERFORMANCE_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.CAMPAIGN_PERFORMANCE\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        CAMPAIGN,\n        GOAL_VALUE_ALL,\n        NEW_USERS,\n        SESSIONS,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        \n        'GA_ANAND_01022021' as Source_type,\n        'D_CAMPAIGN_PERFORMANCE_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.CAMPAIGN_PERFORMANCE\n                  \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        CAMPAIGN,\n        GOAL_VALUE_ALL,\n        NEW_USERS,\n        SESSIONS,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_CAMPAIGN_PERFORMANCE_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.CAMPAIGN_PERFORMANCE\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        CAMPAIGN,\n        GOAL_VALUE_ALL,\n        NEW_USERS,\n        SESSIONS,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        \n        'GA_ANAND_01022021' as Source_type,\n        'D_CAMPAIGN_PERFORMANCE_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.CAMPAIGN_PERFORMANCE\n                  \n    \n"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.8924643993377686, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:04:12.857340Z", "completed_at": "2021-02-10T18:04:13.441933Z"}, {"name": "execute", "started_at": "2021-02-10T18:04:13.442371Z", "completed_at": "2021-02-10T18:04:14.662762Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_SALES_ENTITY where ENTITY_TYPE = 'HS'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'Account_ID'\r\n      )\r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n {% if  V_SF_Schema[0:2] == 'HS'  %} \r\n \r\n  select\r\n        {{ dbt_utils.surrogate_key('id') }}  AS Account_ID,\r\n        ID as Source_ID,\r\n        PORTAL_ID,\r\n        IS_DELETED,\r\n        _FIVETRAN_SYNCED,\r\n        PROPERTY_NUM_ASSOCIATED_CONTACTS,\r\n        PROPERTY_ZIP,\r\n        PROPERTY_HS_ANALYTICS_FIRST_TIMESTAMP,\r\n        PROPERTY_STATE,\r\n        PROPERTY_HS_NUM_CONTACTS_WITH_BUYING_ROLES,\r\n        PROPERTY_NAME,\r\n        PROPERTY_LINKEDINBIO,\r\n        PROPERTY_HS_LASTMODIFIEDDATE,\r\n        PROPERTY_FOUNDED_YEAR,\r\n        PROPERTY_COUNTRY,\r\n        PROPERTY_TIMEZONE,\r\n        PROPERTY_TOTAL_MONEY_RAISED,\r\n        PROPERTY_CITY,\r\n        PROPERTY_HS_ANALYTICS_SOURCE_DATA_2,\r\n        PROPERTY_HS_ANALYTICS_NUM_PAGE_VIEWS,\r\n        PROPERTY_HS_ANALYTICS_SOURCE_DATA_1,\r\n        PROPERTY_HS_NUM_DECISION_MAKERS,\r\n        PROPERTY_HS_NUM_OPEN_DEALS,\r\n        PROPERTY_DOMAIN,\r\n        PROPERTY_HS_NUM_BLOCKERS,\r\n        PROPERTY_WEBSITE,\r\n        PROPERTY_FACEBOOK_COMPANY_PAGE,\r\n        PROPERTY_HS_ANALYTICS_NUM_VISITS,\r\n        PROPERTY_HS_ANALYTICS_SOURCE,\r\n        PROPERTY_ADDRESS,\r\n        PROPERTY_LINKEDIN_COMPANY_PAGE,\r\n        PROPERTY_HS_TOTAL_DEAL_VALUE,\r\n        PROPERTY_HS_TARGET_ACCOUNT_PROBABILITY,\r\n        PROPERTY_IS_PUBLIC,\r\n        PROPERTY_TWITTERHANDLE,\r\n        PROPERTY_PHONE,\r\n        PROPERTY_HS_UPDATED_BY_USER_ID,\r\n        PROPERTY_HS_CREATED_BY_USER_ID,\r\n        PROPERTY_HUBSPOT_OWNER_ASSIGNEDDATE,\r\n        PROPERTY_HUBSPOT_OWNER_ID,\r\n        PROPERTY_HS_USER_IDS_OF_ALL_OWNERS,\r\n        PROPERTY_HS_ALL_OWNER_IDS,\r\n        PROPERTY_ADDRESS_2,\r\n        PROPERTY_DESCRIPTION,\r\n        PROPERTY_CREATEDATE,\r\n        PROPERTY_INDUSTRY,\r\n        PROPERTY_ANNUALREVENUE,\r\n        PROPERTY_FIRST_CONTACT_CREATEDATE,\r\n        PROPERTY_WEB_TECHNOLOGIES,\r\n        PROPERTY_NUMBEROFEMPLOYEES,\r\n        PROPERTY_HS_NUM_CHILD_COMPANIES,\r\n        PROPERTY_TYPE,\r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_COMPANY_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS    \r\n    FROM {{ V_SF_Schema }}.Company\r\n      \r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Company"], "unique_id": "model.sales_dataflo.Stg_Company", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Company.sql", "original_file_path": "ETL/Stage/Stg_Company.sql", "name": "Stg_Company", "resource_type": "model", "alias": "Stg_Company", "checksum": {"name": "sha256", "checksum": "e1004c564c06d1b03b9270378057af9faccf5170421eed67941a6673fd2c2321"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "Account_ID"}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Company.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n  \n \n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Account_ID,\n        ID as Source_ID,\n        PORTAL_ID,\n        IS_DELETED,\n        _FIVETRAN_SYNCED,\n        PROPERTY_NUM_ASSOCIATED_CONTACTS,\n        PROPERTY_ZIP,\n        PROPERTY_HS_ANALYTICS_FIRST_TIMESTAMP,\n        PROPERTY_STATE,\n        PROPERTY_HS_NUM_CONTACTS_WITH_BUYING_ROLES,\n        PROPERTY_NAME,\n        PROPERTY_LINKEDINBIO,\n        PROPERTY_HS_LASTMODIFIEDDATE,\n        PROPERTY_FOUNDED_YEAR,\n        PROPERTY_COUNTRY,\n        PROPERTY_TIMEZONE,\n        PROPERTY_TOTAL_MONEY_RAISED,\n        PROPERTY_CITY,\n        PROPERTY_HS_ANALYTICS_SOURCE_DATA_2,\n        PROPERTY_HS_ANALYTICS_NUM_PAGE_VIEWS,\n        PROPERTY_HS_ANALYTICS_SOURCE_DATA_1,\n        PROPERTY_HS_NUM_DECISION_MAKERS,\n        PROPERTY_HS_NUM_OPEN_DEALS,\n        PROPERTY_DOMAIN,\n        PROPERTY_HS_NUM_BLOCKERS,\n        PROPERTY_WEBSITE,\n        PROPERTY_FACEBOOK_COMPANY_PAGE,\n        PROPERTY_HS_ANALYTICS_NUM_VISITS,\n        PROPERTY_HS_ANALYTICS_SOURCE,\n        PROPERTY_ADDRESS,\n        PROPERTY_LINKEDIN_COMPANY_PAGE,\n        PROPERTY_HS_TOTAL_DEAL_VALUE,\n        PROPERTY_HS_TARGET_ACCOUNT_PROBABILITY,\n        PROPERTY_IS_PUBLIC,\n        PROPERTY_TWITTERHANDLE,\n        PROPERTY_PHONE,\n        PROPERTY_HS_UPDATED_BY_USER_ID,\n        PROPERTY_HS_CREATED_BY_USER_ID,\n        PROPERTY_HUBSPOT_OWNER_ASSIGNEDDATE,\n        PROPERTY_HUBSPOT_OWNER_ID,\n        PROPERTY_HS_USER_IDS_OF_ALL_OWNERS,\n        PROPERTY_HS_ALL_OWNER_IDS,\n        PROPERTY_ADDRESS_2,\n        PROPERTY_DESCRIPTION,\n        PROPERTY_CREATEDATE,\n        PROPERTY_INDUSTRY,\n        PROPERTY_ANNUALREVENUE,\n        PROPERTY_FIRST_CONTACT_CREATEDATE,\n        PROPERTY_WEB_TECHNOLOGIES,\n        PROPERTY_NUMBEROFEMPLOYEES,\n        PROPERTY_HS_NUM_CHILD_COMPANIES,\n        PROPERTY_TYPE,\n        'HS_TESTUSER_09012021' as Source_type,\n        'D_COMPANY_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS    \n    FROM HS_TESTUSER_09012021.Company\n      \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n  \n \n  select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Account_ID,\n        ID as Source_ID,\n        PORTAL_ID,\n        IS_DELETED,\n        _FIVETRAN_SYNCED,\n        PROPERTY_NUM_ASSOCIATED_CONTACTS,\n        PROPERTY_ZIP,\n        PROPERTY_HS_ANALYTICS_FIRST_TIMESTAMP,\n        PROPERTY_STATE,\n        PROPERTY_HS_NUM_CONTACTS_WITH_BUYING_ROLES,\n        PROPERTY_NAME,\n        PROPERTY_LINKEDINBIO,\n        PROPERTY_HS_LASTMODIFIEDDATE,\n        PROPERTY_FOUNDED_YEAR,\n        PROPERTY_COUNTRY,\n        PROPERTY_TIMEZONE,\n        PROPERTY_TOTAL_MONEY_RAISED,\n        PROPERTY_CITY,\n        PROPERTY_HS_ANALYTICS_SOURCE_DATA_2,\n        PROPERTY_HS_ANALYTICS_NUM_PAGE_VIEWS,\n        PROPERTY_HS_ANALYTICS_SOURCE_DATA_1,\n        PROPERTY_HS_NUM_DECISION_MAKERS,\n        PROPERTY_HS_NUM_OPEN_DEALS,\n        PROPERTY_DOMAIN,\n        PROPERTY_HS_NUM_BLOCKERS,\n        PROPERTY_WEBSITE,\n        PROPERTY_FACEBOOK_COMPANY_PAGE,\n        PROPERTY_HS_ANALYTICS_NUM_VISITS,\n        PROPERTY_HS_ANALYTICS_SOURCE,\n        PROPERTY_ADDRESS,\n        PROPERTY_LINKEDIN_COMPANY_PAGE,\n        PROPERTY_HS_TOTAL_DEAL_VALUE,\n        PROPERTY_HS_TARGET_ACCOUNT_PROBABILITY,\n        PROPERTY_IS_PUBLIC,\n        PROPERTY_TWITTERHANDLE,\n        PROPERTY_PHONE,\n        PROPERTY_HS_UPDATED_BY_USER_ID,\n        PROPERTY_HS_CREATED_BY_USER_ID,\n        PROPERTY_HUBSPOT_OWNER_ASSIGNEDDATE,\n        PROPERTY_HUBSPOT_OWNER_ID,\n        PROPERTY_HS_USER_IDS_OF_ALL_OWNERS,\n        PROPERTY_HS_ALL_OWNER_IDS,\n        PROPERTY_ADDRESS_2,\n        PROPERTY_DESCRIPTION,\n        PROPERTY_CREATEDATE,\n        PROPERTY_INDUSTRY,\n        PROPERTY_ANNUALREVENUE,\n        PROPERTY_FIRST_CONTACT_CREATEDATE,\n        PROPERTY_WEB_TECHNOLOGIES,\n        PROPERTY_NUMBEROFEMPLOYEES,\n        PROPERTY_HS_NUM_CHILD_COMPANIES,\n        PROPERTY_TYPE,\n        'HS_TESTUSER_09012021' as Source_type,\n        'D_COMPANY_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS    \n    FROM HS_TESTUSER_09012021.Company\n      \n    \n"}, "error": null, "status": "SUCCESS 50244", "execution_time": 8.64056396484375, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:04:14.753953Z", "completed_at": "2021-02-10T18:04:15.411584Z"}, {"name": "execute", "started_at": "2021-02-10T18:04:15.411946Z", "completed_at": "2021-02-10T18:04:23.288063Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_SALES_ENTITY where ENTITY_TYPE = 'HS'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'Contact_ID'\r\n      )\r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n {% if  V_SF_Schema[0:2] == 'HS' %}    \r\n   select\r\n        {{ dbt_utils.surrogate_key('id') }}  AS Contact_ID,\r\n        ID as Source_ID,\r\n        CANONICAL_VID,\r\n        MERGED_VIDS,\r\n        PROFILE_URL,\r\n        _FIVETRAN_DELETED,\r\n        PROPERTY_COMPANY_SIZE,\r\n        PROPERTY_DATE_OF_BIRTH,\r\n        PROPERTY_DEGREE,\r\n        PROPERTY_FIELD_OF_STUDY,\r\n        PROPERTY_GENDER,\r\n        PROPERTY_GRADUATION_DATE,\r\n        PROPERTY_HS_ANALYTICS_FIRST_TOUCH_CONVERTING_CAMPAIGN,\r\n        PROPERTY_HS_ANALYTICS_LAST_TOUCH_CONVERTING_CAMPAIGN,\r\n        PROPERTY_HS_AVATAR_FILEMANAGER_KEY,\r\n        PROPERTY_HS_BUYING_ROLE,\r\n        PROPERTY_HS_CONTENT_MEMBERSHIP_NOTES,\r\n        PROPERTY_HS_CONTENT_MEMBERSHIP_REGISTRATION_DOMAIN_SENT_TO,\r\n        PROPERTY_HS_CONTENT_MEMBERSHIP_STATUS,\r\n        PROPERTY_HS_CONVERSATIONS_VISITOR_EMAIL,\r\n        PROPERTY_HS_EMAIL_CUSTOMER_QUARANTINED_REASON,\r\n        PROPERTY_HS_EMAIL_HARD_BOUNCE_REASON,\r\n        PROPERTY_HS_EMAIL_HARD_BOUNCE_REASON_ENUM,\r\n        PROPERTY_HS_EMAIL_QUARANTINED_REASON,\r\n        PROPERTY_HS_EMAILCONFIRMATIONSTATUS,\r\n        PROPERTY_HS_FACEBOOK_CLICK_ID,\r\n        PROPERTY_HS_FACEBOOKID,\r\n        PROPERTY_HS_FEEDBACK_LAST_NPS_FOLLOW_UP,\r\n        PROPERTY_HS_FEEDBACK_LAST_NPS_RATING,\r\n        PROPERTY_HS_GOOGLE_CLICK_ID,\r\n        PROPERTY_HS_GOOGLEPLUSID,\r\n        PROPERTY_HS_IP_TIMEZONE,\r\n        PROPERTY_HS_LEAD_STATUS,\r\n        PROPERTY_HS_LEGAL_BASIS,\r\n        PROPERTY_HS_LINKEDINID,\r\n        PROPERTY_HS_MARKETABLE_REASON_ID,\r\n        PROPERTY_HS_MARKETABLE_REASON_TYPE,\r\n        PROPERTY_HS_MARKETABLE_STATUS,\r\n        PROPERTY_HS_MARKETABLE_UNTIL_RENEWAL,\r\n        PROPERTY_HS_MERGED_OBJECT_IDS,\r\n        PROPERTY_HS_PREDICTIVESCORINGTIER,\r\n        PROPERTY_HS_TESTPURGE,\r\n        PROPERTY_HS_TESTROLLBACK,\r\n        PROPERTY_HS_TWITTERID,\r\n        PROPERTY_HS_USER_IDS_OF_ALL_OWNERS,\r\n        PROPERTY_IP_CITY,\r\n        PROPERTY_IP_COUNTRY,\r\n        PROPERTY_IP_COUNTRY_CODE,\r\n        PROPERTY_IP_LATLON,\r\n        PROPERTY_IP_STATE,\r\n        PROPERTY_IP_STATE_CODE,\r\n        PROPERTY_IP_ZIPCODE,\r\n        PROPERTY_JOB_FUNCTION,\r\n        PROPERTY_MARITAL_STATUS,\r\n        PROPERTY_MILITARY_STATUS,\r\n        PROPERTY_RELATIONSHIP_STATUS,\r\n        PROPERTY_SCHOOL,\r\n        PROPERTY_SENIORITY,\r\n        PROPERTY_START_DATE,\r\n        PROPERTY_WORK_EMAIL,\r\n        PROPERTY_FIRSTNAME,\r\n        PROPERTY_HS_ANALYTICS_FIRST_URL,\r\n        PROPERTY_HS_EMAIL_OPTOUT_9007686,\r\n        PROPERTY_TWITTERHANDLE,\r\n        PROPERTY_CURRENTLYINWORKFLOW,\r\n        PROPERTY_HS_ANALYTICS_LAST_URL,\r\n        PROPERTY_LASTNAME,\r\n        PROPERTY_SALUTATION,\r\n        PROPERTY_TWITTERPROFILEPHOTO,\r\n        PROPERTY_EMAIL,\r\n        PROPERTY_HS_PERSONA,\r\n        PROPERTY_MOBILEPHONE,\r\n        PROPERTY_PHONE,\r\n        PROPERTY_FAX,\r\n        PROPERTY_HS_EMAIL_LAST_EMAIL_NAME,\r\n        PROPERTY_ADDRESS,\r\n        PROPERTY_ENGAGEMENTS_LAST_MEETING_BOOKED_CAMPAIGN,\r\n        PROPERTY_ENGAGEMENTS_LAST_MEETING_BOOKED_MEDIUM,\r\n        PROPERTY_ENGAGEMENTS_LAST_MEETING_BOOKED_SOURCE,\r\n        PROPERTY_HUBSPOT_OWNER_ID,\r\n        PROPERTY_OWNEREMAIL,\r\n        PROPERTY_OWNERNAME,\r\n        PROPERTY_CITY,\r\n        PROPERTY_HUBSPOT_TEAM_ID,\r\n        PROPERTY_LINKEDINBIO,\r\n        PROPERTY_TWITTERBIO,\r\n        PROPERTY_HS_ALL_OWNER_IDS,\r\n        PROPERTY_STATE,\r\n        PROPERTY_HS_ALL_TEAM_IDS,\r\n        PROPERTY_HS_ANALYTICS_SOURCE,\r\n        PROPERTY_ZIP,\r\n        PROPERTY_COUNTRY,\r\n        PROPERTY_HS_ALL_ACCESSIBLE_TEAM_IDS,\r\n        PROPERTY_HS_ANALYTICS_SOURCE_DATA_1,\r\n        PROPERTY_HS_ANALYTICS_SOURCE_DATA_2,\r\n        PROPERTY_HS_LANGUAGE,\r\n        PROPERTY_HS_ANALYTICS_FIRST_REFERRER,\r\n        PROPERTY_JOBTITLE,\r\n        PROPERTY_PHOTO,\r\n        PROPERTY_HS_ANALYTICS_LAST_REFERRER,\r\n        PROPERTY_MESSAGE,\r\n        PROPERTY_LIFECYCLESTAGE,\r\n        PROPERTY_COMPANY,\r\n        PROPERTY_WEBSITE,\r\n        PROPERTY_NUMEMPLOYEES,\r\n        PROPERTY_ANNUALREVENUE,\r\n        PROPERTY_INDUSTRY,\r\n        PROPERTY_HS_PREDICTIVECONTACTSCOREBUCKET,\r\n        PROPERTY_HS_ANALYTICS_REVENUE,\r\n        PROPERTY_HS_IS_UNWORKED,\r\n        PROPERTY_HS_ANALYTICS_AVERAGE_PAGE_VIEWS,\r\n        PROPERTY_ASSOCIATEDCOMPANYID,\r\n        PROPERTY_HS_ANALYTICS_NUM_EVENT_COMPLETIONS,\r\n        PROPERTY_HS_ANALYTICS_FIRST_TIMESTAMP,\r\n        PROPERTY_HS_SOCIAL_FACEBOOK_CLICKS,\r\n        PROPERTY_HS_SOCIAL_GOOGLE_PLUS_CLICKS,\r\n        PROPERTY_HS_SOCIAL_LINKEDIN_CLICKS,\r\n        PROPERTY_HS_ANALYTICS_NUM_PAGE_VIEWS,\r\n        PROPERTY_LASTMODIFIEDDATE,\r\n        PROPERTY_HS_SOCIAL_NUM_BROADCAST_CLICKS,\r\n        PROPERTY_HS_ANALYTICS_NUM_VISITS,\r\n        PROPERTY_HS_LIFECYCLESTAGE_LEAD_DATE,\r\n        PROPERTY_CREATEDATE,\r\n        PROPERTY_HS_SOCIAL_TWITTER_CLICKS,\r\n        PROPERTY_HS_COUNT_IS_WORKED,\r\n        PROPERTY_HS_COUNT_IS_UNWORKED,\r\n        PROPERTY_HUBSPOT_OWNER_ASSIGNEDDATE,\r\n        PROPERTY_HS_LIFECYCLESTAGE_SUBSCRIBER_DATE,        \r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_CONTACT_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS    \r\n    FROM {{ V_SF_Schema }}.Contact\r\n    {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}\r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Contact_hs"], "unique_id": "model.sales_dataflo.Stg_Contact_hs", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Contact_hs.sql", "original_file_path": "ETL/Stage/Stg_Contact_hs.sql", "name": "Stg_Contact_hs", "resource_type": "model", "alias": "Stg_Contact_hs", "checksum": {"name": "sha256", "checksum": "f0a7b8fb7aa901506e24d4bffb733226aad484d4fa2d85fcd077ff6311e42036"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "Contact_ID"}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Contact_hs.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n     \n   select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Contact_ID,\n        ID as Source_ID,\n        CANONICAL_VID,\n        MERGED_VIDS,\n        PROFILE_URL,\n        _FIVETRAN_DELETED,\n        PROPERTY_COMPANY_SIZE,\n        PROPERTY_DATE_OF_BIRTH,\n        PROPERTY_DEGREE,\n        PROPERTY_FIELD_OF_STUDY,\n        PROPERTY_GENDER,\n        PROPERTY_GRADUATION_DATE,\n        PROPERTY_HS_ANALYTICS_FIRST_TOUCH_CONVERTING_CAMPAIGN,\n        PROPERTY_HS_ANALYTICS_LAST_TOUCH_CONVERTING_CAMPAIGN,\n        PROPERTY_HS_AVATAR_FILEMANAGER_KEY,\n        PROPERTY_HS_BUYING_ROLE,\n        PROPERTY_HS_CONTENT_MEMBERSHIP_NOTES,\n        PROPERTY_HS_CONTENT_MEMBERSHIP_REGISTRATION_DOMAIN_SENT_TO,\n        PROPERTY_HS_CONTENT_MEMBERSHIP_STATUS,\n        PROPERTY_HS_CONVERSATIONS_VISITOR_EMAIL,\n        PROPERTY_HS_EMAIL_CUSTOMER_QUARANTINED_REASON,\n        PROPERTY_HS_EMAIL_HARD_BOUNCE_REASON,\n        PROPERTY_HS_EMAIL_HARD_BOUNCE_REASON_ENUM,\n        PROPERTY_HS_EMAIL_QUARANTINED_REASON,\n        PROPERTY_HS_EMAILCONFIRMATIONSTATUS,\n        PROPERTY_HS_FACEBOOK_CLICK_ID,\n        PROPERTY_HS_FACEBOOKID,\n        PROPERTY_HS_FEEDBACK_LAST_NPS_FOLLOW_UP,\n        PROPERTY_HS_FEEDBACK_LAST_NPS_RATING,\n        PROPERTY_HS_GOOGLE_CLICK_ID,\n        PROPERTY_HS_GOOGLEPLUSID,\n        PROPERTY_HS_IP_TIMEZONE,\n        PROPERTY_HS_LEAD_STATUS,\n        PROPERTY_HS_LEGAL_BASIS,\n        PROPERTY_HS_LINKEDINID,\n        PROPERTY_HS_MARKETABLE_REASON_ID,\n        PROPERTY_HS_MARKETABLE_REASON_TYPE,\n        PROPERTY_HS_MARKETABLE_STATUS,\n        PROPERTY_HS_MARKETABLE_UNTIL_RENEWAL,\n        PROPERTY_HS_MERGED_OBJECT_IDS,\n        PROPERTY_HS_PREDICTIVESCORINGTIER,\n        PROPERTY_HS_TESTPURGE,\n        PROPERTY_HS_TESTROLLBACK,\n        PROPERTY_HS_TWITTERID,\n        PROPERTY_HS_USER_IDS_OF_ALL_OWNERS,\n        PROPERTY_IP_CITY,\n        PROPERTY_IP_COUNTRY,\n        PROPERTY_IP_COUNTRY_CODE,\n        PROPERTY_IP_LATLON,\n        PROPERTY_IP_STATE,\n        PROPERTY_IP_STATE_CODE,\n        PROPERTY_IP_ZIPCODE,\n        PROPERTY_JOB_FUNCTION,\n        PROPERTY_MARITAL_STATUS,\n        PROPERTY_MILITARY_STATUS,\n        PROPERTY_RELATIONSHIP_STATUS,\n        PROPERTY_SCHOOL,\n        PROPERTY_SENIORITY,\n        PROPERTY_START_DATE,\n        PROPERTY_WORK_EMAIL,\n        PROPERTY_FIRSTNAME,\n        PROPERTY_HS_ANALYTICS_FIRST_URL,\n        PROPERTY_HS_EMAIL_OPTOUT_9007686,\n        PROPERTY_TWITTERHANDLE,\n        PROPERTY_CURRENTLYINWORKFLOW,\n        PROPERTY_HS_ANALYTICS_LAST_URL,\n        PROPERTY_LASTNAME,\n        PROPERTY_SALUTATION,\n        PROPERTY_TWITTERPROFILEPHOTO,\n        PROPERTY_EMAIL,\n        PROPERTY_HS_PERSONA,\n        PROPERTY_MOBILEPHONE,\n        PROPERTY_PHONE,\n        PROPERTY_FAX,\n        PROPERTY_HS_EMAIL_LAST_EMAIL_NAME,\n        PROPERTY_ADDRESS,\n        PROPERTY_ENGAGEMENTS_LAST_MEETING_BOOKED_CAMPAIGN,\n        PROPERTY_ENGAGEMENTS_LAST_MEETING_BOOKED_MEDIUM,\n        PROPERTY_ENGAGEMENTS_LAST_MEETING_BOOKED_SOURCE,\n        PROPERTY_HUBSPOT_OWNER_ID,\n        PROPERTY_OWNEREMAIL,\n        PROPERTY_OWNERNAME,\n        PROPERTY_CITY,\n        PROPERTY_HUBSPOT_TEAM_ID,\n        PROPERTY_LINKEDINBIO,\n        PROPERTY_TWITTERBIO,\n        PROPERTY_HS_ALL_OWNER_IDS,\n        PROPERTY_STATE,\n        PROPERTY_HS_ALL_TEAM_IDS,\n        PROPERTY_HS_ANALYTICS_SOURCE,\n        PROPERTY_ZIP,\n        PROPERTY_COUNTRY,\n        PROPERTY_HS_ALL_ACCESSIBLE_TEAM_IDS,\n        PROPERTY_HS_ANALYTICS_SOURCE_DATA_1,\n        PROPERTY_HS_ANALYTICS_SOURCE_DATA_2,\n        PROPERTY_HS_LANGUAGE,\n        PROPERTY_HS_ANALYTICS_FIRST_REFERRER,\n        PROPERTY_JOBTITLE,\n        PROPERTY_PHOTO,\n        PROPERTY_HS_ANALYTICS_LAST_REFERRER,\n        PROPERTY_MESSAGE,\n        PROPERTY_LIFECYCLESTAGE,\n        PROPERTY_COMPANY,\n        PROPERTY_WEBSITE,\n        PROPERTY_NUMEMPLOYEES,\n        PROPERTY_ANNUALREVENUE,\n        PROPERTY_INDUSTRY,\n        PROPERTY_HS_PREDICTIVECONTACTSCOREBUCKET,\n        PROPERTY_HS_ANALYTICS_REVENUE,\n        PROPERTY_HS_IS_UNWORKED,\n        PROPERTY_HS_ANALYTICS_AVERAGE_PAGE_VIEWS,\n        PROPERTY_ASSOCIATEDCOMPANYID,\n        PROPERTY_HS_ANALYTICS_NUM_EVENT_COMPLETIONS,\n        PROPERTY_HS_ANALYTICS_FIRST_TIMESTAMP,\n        PROPERTY_HS_SOCIAL_FACEBOOK_CLICKS,\n        PROPERTY_HS_SOCIAL_GOOGLE_PLUS_CLICKS,\n        PROPERTY_HS_SOCIAL_LINKEDIN_CLICKS,\n        PROPERTY_HS_ANALYTICS_NUM_PAGE_VIEWS,\n        PROPERTY_LASTMODIFIEDDATE,\n        PROPERTY_HS_SOCIAL_NUM_BROADCAST_CLICKS,\n        PROPERTY_HS_ANALYTICS_NUM_VISITS,\n        PROPERTY_HS_LIFECYCLESTAGE_LEAD_DATE,\n        PROPERTY_CREATEDATE,\n        PROPERTY_HS_SOCIAL_TWITTER_CLICKS,\n        PROPERTY_HS_COUNT_IS_WORKED,\n        PROPERTY_HS_COUNT_IS_UNWORKED,\n        PROPERTY_HUBSPOT_OWNER_ASSIGNEDDATE,\n        PROPERTY_HS_LIFECYCLESTAGE_SUBSCRIBER_DATE,        \n        'HS_TESTUSER_09012021' as Source_type,\n        'D_CONTACT_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS    \n    FROM HS_TESTUSER_09012021.Contact\n    \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n     \n   select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Contact_ID,\n        ID as Source_ID,\n        CANONICAL_VID,\n        MERGED_VIDS,\n        PROFILE_URL,\n        _FIVETRAN_DELETED,\n        PROPERTY_COMPANY_SIZE,\n        PROPERTY_DATE_OF_BIRTH,\n        PROPERTY_DEGREE,\n        PROPERTY_FIELD_OF_STUDY,\n        PROPERTY_GENDER,\n        PROPERTY_GRADUATION_DATE,\n        PROPERTY_HS_ANALYTICS_FIRST_TOUCH_CONVERTING_CAMPAIGN,\n        PROPERTY_HS_ANALYTICS_LAST_TOUCH_CONVERTING_CAMPAIGN,\n        PROPERTY_HS_AVATAR_FILEMANAGER_KEY,\n        PROPERTY_HS_BUYING_ROLE,\n        PROPERTY_HS_CONTENT_MEMBERSHIP_NOTES,\n        PROPERTY_HS_CONTENT_MEMBERSHIP_REGISTRATION_DOMAIN_SENT_TO,\n        PROPERTY_HS_CONTENT_MEMBERSHIP_STATUS,\n        PROPERTY_HS_CONVERSATIONS_VISITOR_EMAIL,\n        PROPERTY_HS_EMAIL_CUSTOMER_QUARANTINED_REASON,\n        PROPERTY_HS_EMAIL_HARD_BOUNCE_REASON,\n        PROPERTY_HS_EMAIL_HARD_BOUNCE_REASON_ENUM,\n        PROPERTY_HS_EMAIL_QUARANTINED_REASON,\n        PROPERTY_HS_EMAILCONFIRMATIONSTATUS,\n        PROPERTY_HS_FACEBOOK_CLICK_ID,\n        PROPERTY_HS_FACEBOOKID,\n        PROPERTY_HS_FEEDBACK_LAST_NPS_FOLLOW_UP,\n        PROPERTY_HS_FEEDBACK_LAST_NPS_RATING,\n        PROPERTY_HS_GOOGLE_CLICK_ID,\n        PROPERTY_HS_GOOGLEPLUSID,\n        PROPERTY_HS_IP_TIMEZONE,\n        PROPERTY_HS_LEAD_STATUS,\n        PROPERTY_HS_LEGAL_BASIS,\n        PROPERTY_HS_LINKEDINID,\n        PROPERTY_HS_MARKETABLE_REASON_ID,\n        PROPERTY_HS_MARKETABLE_REASON_TYPE,\n        PROPERTY_HS_MARKETABLE_STATUS,\n        PROPERTY_HS_MARKETABLE_UNTIL_RENEWAL,\n        PROPERTY_HS_MERGED_OBJECT_IDS,\n        PROPERTY_HS_PREDICTIVESCORINGTIER,\n        PROPERTY_HS_TESTPURGE,\n        PROPERTY_HS_TESTROLLBACK,\n        PROPERTY_HS_TWITTERID,\n        PROPERTY_HS_USER_IDS_OF_ALL_OWNERS,\n        PROPERTY_IP_CITY,\n        PROPERTY_IP_COUNTRY,\n        PROPERTY_IP_COUNTRY_CODE,\n        PROPERTY_IP_LATLON,\n        PROPERTY_IP_STATE,\n        PROPERTY_IP_STATE_CODE,\n        PROPERTY_IP_ZIPCODE,\n        PROPERTY_JOB_FUNCTION,\n        PROPERTY_MARITAL_STATUS,\n        PROPERTY_MILITARY_STATUS,\n        PROPERTY_RELATIONSHIP_STATUS,\n        PROPERTY_SCHOOL,\n        PROPERTY_SENIORITY,\n        PROPERTY_START_DATE,\n        PROPERTY_WORK_EMAIL,\n        PROPERTY_FIRSTNAME,\n        PROPERTY_HS_ANALYTICS_FIRST_URL,\n        PROPERTY_HS_EMAIL_OPTOUT_9007686,\n        PROPERTY_TWITTERHANDLE,\n        PROPERTY_CURRENTLYINWORKFLOW,\n        PROPERTY_HS_ANALYTICS_LAST_URL,\n        PROPERTY_LASTNAME,\n        PROPERTY_SALUTATION,\n        PROPERTY_TWITTERPROFILEPHOTO,\n        PROPERTY_EMAIL,\n        PROPERTY_HS_PERSONA,\n        PROPERTY_MOBILEPHONE,\n        PROPERTY_PHONE,\n        PROPERTY_FAX,\n        PROPERTY_HS_EMAIL_LAST_EMAIL_NAME,\n        PROPERTY_ADDRESS,\n        PROPERTY_ENGAGEMENTS_LAST_MEETING_BOOKED_CAMPAIGN,\n        PROPERTY_ENGAGEMENTS_LAST_MEETING_BOOKED_MEDIUM,\n        PROPERTY_ENGAGEMENTS_LAST_MEETING_BOOKED_SOURCE,\n        PROPERTY_HUBSPOT_OWNER_ID,\n        PROPERTY_OWNEREMAIL,\n        PROPERTY_OWNERNAME,\n        PROPERTY_CITY,\n        PROPERTY_HUBSPOT_TEAM_ID,\n        PROPERTY_LINKEDINBIO,\n        PROPERTY_TWITTERBIO,\n        PROPERTY_HS_ALL_OWNER_IDS,\n        PROPERTY_STATE,\n        PROPERTY_HS_ALL_TEAM_IDS,\n        PROPERTY_HS_ANALYTICS_SOURCE,\n        PROPERTY_ZIP,\n        PROPERTY_COUNTRY,\n        PROPERTY_HS_ALL_ACCESSIBLE_TEAM_IDS,\n        PROPERTY_HS_ANALYTICS_SOURCE_DATA_1,\n        PROPERTY_HS_ANALYTICS_SOURCE_DATA_2,\n        PROPERTY_HS_LANGUAGE,\n        PROPERTY_HS_ANALYTICS_FIRST_REFERRER,\n        PROPERTY_JOBTITLE,\n        PROPERTY_PHOTO,\n        PROPERTY_HS_ANALYTICS_LAST_REFERRER,\n        PROPERTY_MESSAGE,\n        PROPERTY_LIFECYCLESTAGE,\n        PROPERTY_COMPANY,\n        PROPERTY_WEBSITE,\n        PROPERTY_NUMEMPLOYEES,\n        PROPERTY_ANNUALREVENUE,\n        PROPERTY_INDUSTRY,\n        PROPERTY_HS_PREDICTIVECONTACTSCOREBUCKET,\n        PROPERTY_HS_ANALYTICS_REVENUE,\n        PROPERTY_HS_IS_UNWORKED,\n        PROPERTY_HS_ANALYTICS_AVERAGE_PAGE_VIEWS,\n        PROPERTY_ASSOCIATEDCOMPANYID,\n        PROPERTY_HS_ANALYTICS_NUM_EVENT_COMPLETIONS,\n        PROPERTY_HS_ANALYTICS_FIRST_TIMESTAMP,\n        PROPERTY_HS_SOCIAL_FACEBOOK_CLICKS,\n        PROPERTY_HS_SOCIAL_GOOGLE_PLUS_CLICKS,\n        PROPERTY_HS_SOCIAL_LINKEDIN_CLICKS,\n        PROPERTY_HS_ANALYTICS_NUM_PAGE_VIEWS,\n        PROPERTY_LASTMODIFIEDDATE,\n        PROPERTY_HS_SOCIAL_NUM_BROADCAST_CLICKS,\n        PROPERTY_HS_ANALYTICS_NUM_VISITS,\n        PROPERTY_HS_LIFECYCLESTAGE_LEAD_DATE,\n        PROPERTY_CREATEDATE,\n        PROPERTY_HS_SOCIAL_TWITTER_CLICKS,\n        PROPERTY_HS_COUNT_IS_WORKED,\n        PROPERTY_HS_COUNT_IS_UNWORKED,\n        PROPERTY_HUBSPOT_OWNER_ASSIGNEDDATE,\n        PROPERTY_HS_LIFECYCLESTAGE_SUBSCRIBER_DATE,        \n        'HS_TESTUSER_09012021' as Source_type,\n        'D_CONTACT_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS    \n    FROM HS_TESTUSER_09012021.Contact\n    \n    \n"}, "error": null, "status": "SUCCESS 31023", "execution_time": 5.872183799743652, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:04:23.398468Z", "completed_at": "2021-02-10T18:04:24.066882Z"}, {"name": "execute", "started_at": "2021-02-10T18:04:24.067463Z", "completed_at": "2021-02-10T18:04:29.167842Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_MKT_ENTITY where ENTITY_TYPE = 'GA'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{% for V_SF_Schema in results %}\r\n\r\n {% if  V_SF_Schema[0:2] == 'GA'  %} \r\n      \r\n  select\r\n        {{ dbt_utils.surrogate_key('ID') }}  AS Audit_ID,\r\n        ID as Source_id,\r\n        MESSAGE,\r\n        UPDATE_STARTED,\r\n        UPDATE_ID,\r\n        SCHEMA,\r\n        --TABLE,\r\n        --START,\r\n        DONE,\r\n        ROWS_UPDATED_OR_INSERTED,\r\n        STATUS,\r\n        PROGRESS,        \r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_FIVETRAN_AUDIT_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.FIVETRAN_AUDIT\r\n          {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}        \r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Fivertan_Audit"], "unique_id": "model.sales_dataflo.Stg_Fivertan_Audit", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Fivertan_Audit.sql", "original_file_path": "ETL/Stage/Stg_Fivertan_Audit.sql", "name": "Stg_Fivertan_Audit", "resource_type": "model", "alias": "Stg_Fivertan_Audit", "checksum": {"name": "sha256", "checksum": "561ad7ede0073be9a6357681051ce7a341736457d787d65761b0dafa26d03566"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Fivertan_Audit.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Audit_ID,\n        ID as Source_id,\n        MESSAGE,\n        UPDATE_STARTED,\n        UPDATE_ID,\n        SCHEMA,\n        --TABLE,\n        --START,\n        DONE,\n        ROWS_UPDATED_OR_INSERTED,\n        STATUS,\n        PROGRESS,        \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_FIVETRAN_AUDIT_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.FIVETRAN_AUDIT\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Audit_ID,\n        ID as Source_id,\n        MESSAGE,\n        UPDATE_STARTED,\n        UPDATE_ID,\n        SCHEMA,\n        --TABLE,\n        --START,\n        DONE,\n        ROWS_UPDATED_OR_INSERTED,\n        STATUS,\n        PROGRESS,        \n        'GA_ANAND_01022021' as Source_type,\n        'D_FIVETRAN_AUDIT_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.FIVETRAN_AUDIT\n                  \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Audit_ID,\n        ID as Source_id,\n        MESSAGE,\n        UPDATE_STARTED,\n        UPDATE_ID,\n        SCHEMA,\n        --TABLE,\n        --START,\n        DONE,\n        ROWS_UPDATED_OR_INSERTED,\n        STATUS,\n        PROGRESS,        \n        'GA_DATAFLO_01022021' as Source_type,\n        'D_FIVETRAN_AUDIT_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.FIVETRAN_AUDIT\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS Audit_ID,\n        ID as Source_id,\n        MESSAGE,\n        UPDATE_STARTED,\n        UPDATE_ID,\n        SCHEMA,\n        --TABLE,\n        --START,\n        DONE,\n        ROWS_UPDATED_OR_INSERTED,\n        STATUS,\n        PROGRESS,        \n        'GA_ANAND_01022021' as Source_type,\n        'D_FIVETRAN_AUDIT_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.FIVETRAN_AUDIT\n                  \n    \n"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.1428656578063965, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:04:29.274760Z", "completed_at": "2021-02-10T18:04:29.944387Z"}, {"name": "execute", "started_at": "2021-02-10T18:04:29.944910Z", "completed_at": "2021-02-10T18:04:31.347023Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_MKT_ENTITY where ENTITY_TYPE = 'GA'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n{% for V_SF_Schema in results %}\r\n\r\n {% if  V_SF_Schema[0:2] == 'GA'  %} \r\n      \r\n  select\r\n        {{ dbt_utils.surrogate_key('_FIVETRAN_ID') }}  AS ID,\r\n        DATE,\r\n        PROFILE,\r\n        MOBILE_DEVICE_BRANDING,\r\n        BROWSER,\r\n        OPERATING_SYSTEM,\r\n        GOAL_VALUE_ALL,\r\n        GOAL_COMPLETIONS_ALL,\r\n        GOAL_STARTS_ALL,\r\n        GOAL_CONVERSION_RATE_ALL,\r\n        GOAL_ABANDON_RATE_ALL,\r\n        GOAL_ABANDONS_ALL,\r\n        GOAL_VALUE_PER_SESSION,\r\n\r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_PLATFORM_DEVICE_1_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.PLATFORM_DEVICE_1\r\n          {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}        \r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Platform_Device_1"], "unique_id": "model.sales_dataflo.Stg_Platform_Device_1", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Platform_Device_1.sql", "original_file_path": "ETL/Stage/Stg_Platform_Device_1.sql", "name": "Stg_Platform_Device_1", "resource_type": "model", "alias": "Stg_Platform_Device_1", "checksum": {"name": "sha256", "checksum": "abd43664c095be455b13f47b399cf71d152e80d785106dba621a4441d07dc697"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Platform_Device_1.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        MOBILE_DEVICE_BRANDING,\n        BROWSER,\n        OPERATING_SYSTEM,\n        GOAL_VALUE_ALL,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_STARTS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        GOAL_ABANDON_RATE_ALL,\n        GOAL_ABANDONS_ALL,\n        GOAL_VALUE_PER_SESSION,\n\n        'GA_DATAFLO_01022021' as Source_type,\n        'D_PLATFORM_DEVICE_1_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.PLATFORM_DEVICE_1\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        MOBILE_DEVICE_BRANDING,\n        BROWSER,\n        OPERATING_SYSTEM,\n        GOAL_VALUE_ALL,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_STARTS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        GOAL_ABANDON_RATE_ALL,\n        GOAL_ABANDONS_ALL,\n        GOAL_VALUE_PER_SESSION,\n\n        'GA_ANAND_01022021' as Source_type,\n        'D_PLATFORM_DEVICE_1_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.PLATFORM_DEVICE_1\n                  \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        MOBILE_DEVICE_BRANDING,\n        BROWSER,\n        OPERATING_SYSTEM,\n        GOAL_VALUE_ALL,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_STARTS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        GOAL_ABANDON_RATE_ALL,\n        GOAL_ABANDONS_ALL,\n        GOAL_VALUE_PER_SESSION,\n\n        'GA_DATAFLO_01022021' as Source_type,\n        'D_PLATFORM_DEVICE_1_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.PLATFORM_DEVICE_1\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        MOBILE_DEVICE_BRANDING,\n        BROWSER,\n        OPERATING_SYSTEM,\n        GOAL_VALUE_ALL,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_STARTS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        GOAL_ABANDON_RATE_ALL,\n        GOAL_ABANDONS_ALL,\n        GOAL_VALUE_PER_SESSION,\n\n        'GA_ANAND_01022021' as Source_type,\n        'D_PLATFORM_DEVICE_1_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.PLATFORM_DEVICE_1\n                  \n    \n"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.7505130767822266, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:04:31.420878Z", "completed_at": "2021-02-10T18:04:31.912349Z"}, {"name": "execute", "started_at": "2021-02-10T18:04:31.912912Z", "completed_at": "2021-02-10T18:04:34.062259Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".DIM_MKT_ENTITY where ENTITY_TYPE = 'GA'\", 'ENTITY_NAME')%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n{% for V_SF_Schema in results %}\r\n\r\n {% if  V_SF_Schema[0:2] == 'GA'  %} \r\n      \r\n  select\r\n        {{ dbt_utils.surrogate_key('_FIVETRAN_ID') }}  AS ID,\r\n        DATE,\r\n        PROFILE,\r\n        REFERRAL_PATH,\r\n        CAMPAIGN,\r\n        SOURCE,\r\n        MEDIUM,\r\n        SOURCE_MEDIUM,\r\n        FULL_REFERRER,\r\n        ORGANIC_SEARCHES,\r\n\r\n        '{{ V_SF_Schema }}' as Source_type,\r\n        'D_TRAFFIC_SOURCES_STG_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM {{ V_SF_Schema }}.TRAFFIC_SOURCES\r\n          {% if not loop.last %}\r\n            UNION ALL\r\n        {% endif %}        \r\n    {% endif %}\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Stage", "Stg_Traffic_Sources"], "unique_id": "model.sales_dataflo.Stg_Traffic_Sources", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Stage/Stg_Traffic_Sources.sql", "original_file_path": "ETL/Stage/Stg_Traffic_Sources.sql", "name": "Stg_Traffic_Sources", "resource_type": "model", "alias": "Stg_Traffic_Sources", "checksum": {"name": "sha256", "checksum": "c40cf8f2f8704027575de03dab93c4938a881e4e5a6aab70fe7191edda87eadb"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Stage/Stg_Traffic_Sources.sql", "deferred": false, "compiled_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        REFERRAL_PATH,\n        CAMPAIGN,\n        SOURCE,\n        MEDIUM,\n        SOURCE_MEDIUM,\n        FULL_REFERRER,\n        ORGANIC_SEARCHES,\n\n        'GA_DATAFLO_01022021' as Source_type,\n        'D_TRAFFIC_SOURCES_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.TRAFFIC_SOURCES\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        REFERRAL_PATH,\n        CAMPAIGN,\n        SOURCE,\n        MEDIUM,\n        SOURCE_MEDIUM,\n        FULL_REFERRER,\n        ORGANIC_SEARCHES,\n\n        'GA_ANAND_01022021' as Source_type,\n        'D_TRAFFIC_SOURCES_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.TRAFFIC_SOURCES\n                  \n    \n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        REFERRAL_PATH,\n        CAMPAIGN,\n        SOURCE,\n        MEDIUM,\n        SOURCE_MEDIUM,\n        FULL_REFERRER,\n        ORGANIC_SEARCHES,\n\n        'GA_DATAFLO_01022021' as Source_type,\n        'D_TRAFFIC_SOURCES_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_DATAFLO_01022021.TRAFFIC_SOURCES\n          \n            UNION ALL\n                \n    \n\n\n  \n      \n  select\n        md5(cast(\n    \n    coalesce(cast(_FIVETRAN_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS ID,\n        DATE,\n        PROFILE,\n        REFERRAL_PATH,\n        CAMPAIGN,\n        SOURCE,\n        MEDIUM,\n        SOURCE_MEDIUM,\n        FULL_REFERRER,\n        ORGANIC_SEARCHES,\n\n        'GA_ANAND_01022021' as Source_type,\n        'D_TRAFFIC_SOURCES_STG_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM GA_ANAND_01022021.TRAFFIC_SOURCES\n                  \n    \n"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.7962067127227783, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:04:34.176304Z", "completed_at": "2021-02-10T18:04:34.673008Z"}, {"name": "execute", "started_at": "2021-02-10T18:04:34.673578Z", "completed_at": "2021-02-10T18:04:35.889937Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'contact_id'\r\n      )\r\n}}\r\n\r\nWITH contacts AS (\r\n       select * from {{ ref('Stg_Contact') }} \r\n    ),\r\nDim_Contact as(\r\n      SELECT \r\n        contact_id, \r\n        contacts.salutation AS salutation, \r\n        contacts.NAME AS contact_name, \r\n        contacts.last_name AS last_name, \r\n        contacts.first_name AS first_name, \r\n        contacts.phone AS contact_number, \r\n        contacts.mobile_phone AS mobile_phone, \r\n        contacts.home_phone AS home_phone, \r\n        contacts.email AS contact_email, \r\n        source_id, \r\n        contacts.department AS department, \r\n        contacts.lead_source AS lead_source, \r\n        null AS organization_id, \r\n        contacts.owner_ID AS employee_id, \r\n        contacts.account_id AS account_id, \r\n        NULL AS contact_age_group, \r\n        NULL AS contact_income, \r\n        NULL AS dependent, \r\n        NULL AS contact_type, \r\n        contacts.IS_DELETED AS active,\r\n        CREATED_DATE as INITIAL_CREATE_DT,\r\n        {% if var(\"V_SF_CRM_ETL\") == 'FIVETRAN_SF' %}  'SF' {% endif %} as Source_type,\r\n        'D_CONTACT_DIM_LOAD' AS dw_session_nm, \r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n     FROM \r\n       contacts\r\n    )    \r\n    \r\nselect * from Dim_Contact", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Contact"], "unique_id": "model.sales_dataflo.Dim_Contact", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Contact.sql", "original_file_path": "ETL/Target/Tables/Dim_Contact.sql", "name": "Dim_Contact", "resource_type": "model", "alias": "Dim_Contact", "checksum": {"name": "sha256", "checksum": "a919b1addf985669288833f48dbe9851ba0cc655431f71f4ba61031b725d2552"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "contact_id"}, "tags": [], "refs": [["Stg_Contact"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_Contact"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Contact.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH contacts AS (\n       select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Contact \n    ),\nDim_Contact as(\n      SELECT \n        contact_id, \n        contacts.salutation AS salutation, \n        contacts.NAME AS contact_name, \n        contacts.last_name AS last_name, \n        contacts.first_name AS first_name, \n        contacts.phone AS contact_number, \n        contacts.mobile_phone AS mobile_phone, \n        contacts.home_phone AS home_phone, \n        contacts.email AS contact_email, \n        source_id, \n        contacts.department AS department, \n        contacts.lead_source AS lead_source, \n        null AS organization_id, \n        contacts.owner_ID AS employee_id, \n        contacts.account_id AS account_id, \n        NULL AS contact_age_group, \n        NULL AS contact_income, \n        NULL AS dependent, \n        NULL AS contact_type, \n        contacts.IS_DELETED AS active,\n        CREATED_DATE as INITIAL_CREATE_DT,\n          'SF'  as Source_type,\n        'D_CONTACT_DIM_LOAD' AS dw_session_nm, \n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n     FROM \n       contacts\n    )    \n    \nselect * from Dim_Contact", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH contacts AS (\n       select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Contact \n    ),\nDim_Contact as(\n      SELECT \n        contact_id, \n        contacts.salutation AS salutation, \n        contacts.NAME AS contact_name, \n        contacts.last_name AS last_name, \n        contacts.first_name AS first_name, \n        contacts.phone AS contact_number, \n        contacts.mobile_phone AS mobile_phone, \n        contacts.home_phone AS home_phone, \n        contacts.email AS contact_email, \n        source_id, \n        contacts.department AS department, \n        contacts.lead_source AS lead_source, \n        null AS organization_id, \n        contacts.owner_ID AS employee_id, \n        contacts.account_id AS account_id, \n        NULL AS contact_age_group, \n        NULL AS contact_income, \n        NULL AS dependent, \n        NULL AS contact_type, \n        contacts.IS_DELETED AS active,\n        CREATED_DATE as INITIAL_CREATE_DT,\n          'SF'  as Source_type,\n        'D_CONTACT_DIM_LOAD' AS dw_session_nm, \n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n     FROM \n       contacts\n    )    \n    \nselect * from Dim_Contact"}, "error": null, "status": "SUCCESS 237697", "execution_time": 7.392956018447876, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:04:35.976741Z", "completed_at": "2021-02-10T18:04:36.014706Z"}, {"name": "execute", "started_at": "2021-02-10T18:04:36.015116Z", "completed_at": "2021-02-10T18:04:43.267862Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{ config(\r\n    materialized=\"table\"\r\n) \r\n}}\r\n\r\nWITH source AS (\r\n       select *  from {{ ref('Stg_Contact') }} \r\n    ),Dim_Address AS(\r\n        SELECT \r\n            {{ dbt_utils.surrogate_key('Contact_ID') }} AS  address_id,\r\n            account_id AS account_id,\r\n            source_id,\r\n            MAILING_STREET AS STREET,\r\n            MAILING_CITY AS CITY,\r\n            MAILING_STATE AS STATE,\r\n            MAILING_POSTAL_CODE AS POSTAL_CODE,\r\n            MAILING_COUNTRY AS COUNTRY,\r\n            'Billing' as address_type,\r\n            Source_type,\r\n            'D_ADDRESS_DIM_LOAD' AS DW_SESSION_NM,\r\n            {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n            from source\r\n        union \r\n        SELECT\r\n            {{ dbt_utils.surrogate_key('Contact_ID') }} AS  address_id,\r\n            account_id AS account_id,\r\n            source_id,\r\n            OTHER_STREET AS STREET,\r\n            OTHER_CITY AS CITY,\r\n            OTHER_STATE AS STATE,\r\n            OTHER_POSTAL_CODE AS POSTAL_CODE,\r\n            OTHER_COUNTRY As COUNTRY, \r\n            'Shipping' as address_type,\r\n            Source_type,\r\n            'D_ADDRESS_DIM_LOAD' AS DW_SESSION_NM,\r\n            {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n             from source\r\n    )\r\n    \r\nselect * from Dim_Address", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Address"], "unique_id": "model.sales_dataflo.Dim_Address", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Address.Sql", "original_file_path": "ETL/Target/Tables/Dim_Address.Sql", "name": "Dim_Address", "resource_type": "model", "alias": "Dim_Address", "checksum": {"name": "sha256", "checksum": "b79e786b2aa4c15135a7fefda90502a396034cb1919909186d822da51d5b68bf"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Stg_Contact"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_Contact"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Address.Sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS (\n       select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Contact \n    ),Dim_Address AS(\n        SELECT \n            md5(cast(\n    \n    coalesce(cast(Contact_ID as \n    varchar\n), '')\n\n as \n    varchar\n)) AS  address_id,\n            account_id AS account_id,\n            source_id,\n            MAILING_STREET AS STREET,\n            MAILING_CITY AS CITY,\n            MAILING_STATE AS STATE,\n            MAILING_POSTAL_CODE AS POSTAL_CODE,\n            MAILING_COUNTRY AS COUNTRY,\n            'Billing' as address_type,\n            Source_type,\n            'D_ADDRESS_DIM_LOAD' AS DW_SESSION_NM,\n            \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n            from source\n        union \n        SELECT\n            md5(cast(\n    \n    coalesce(cast(Contact_ID as \n    varchar\n), '')\n\n as \n    varchar\n)) AS  address_id,\n            account_id AS account_id,\n            source_id,\n            OTHER_STREET AS STREET,\n            OTHER_CITY AS CITY,\n            OTHER_STATE AS STATE,\n            OTHER_POSTAL_CODE AS POSTAL_CODE,\n            OTHER_COUNTRY As COUNTRY, \n            'Shipping' as address_type,\n            Source_type,\n            'D_ADDRESS_DIM_LOAD' AS DW_SESSION_NM,\n            \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n             from source\n    )\n    \nselect * from Dim_Address", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS (\n       select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Contact \n    ),Dim_Address AS(\n        SELECT \n            md5(cast(\n    \n    coalesce(cast(Contact_ID as \n    varchar\n), '')\n\n as \n    varchar\n)) AS  address_id,\n            account_id AS account_id,\n            source_id,\n            MAILING_STREET AS STREET,\n            MAILING_CITY AS CITY,\n            MAILING_STATE AS STATE,\n            MAILING_POSTAL_CODE AS POSTAL_CODE,\n            MAILING_COUNTRY AS COUNTRY,\n            'Billing' as address_type,\n            Source_type,\n            'D_ADDRESS_DIM_LOAD' AS DW_SESSION_NM,\n            \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n            from source\n        union \n        SELECT\n            md5(cast(\n    \n    coalesce(cast(Contact_ID as \n    varchar\n), '')\n\n as \n    varchar\n)) AS  address_id,\n            account_id AS account_id,\n            source_id,\n            OTHER_STREET AS STREET,\n            OTHER_CITY AS CITY,\n            OTHER_STATE AS STATE,\n            OTHER_POSTAL_CODE AS POSTAL_CODE,\n            OTHER_COUNTRY As COUNTRY, \n            'Shipping' as address_type,\n            Source_type,\n            'D_ADDRESS_DIM_LOAD' AS DW_SESSION_NM,\n            \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n             from source\n    )\n    \nselect * from Dim_Address"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.8024075031280518, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:04:43.373858Z", "completed_at": "2021-02-10T18:04:43.420812Z"}, {"name": "execute", "started_at": "2021-02-10T18:04:43.421417Z", "completed_at": "2021-02-10T18:04:46.078203Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'Stage_id'\r\n      )\r\n}}\r\n\r\nWITH source AS (\r\n       select *  from {{ ref('Stg_Opportunity_Stage') }}  \r\n    ),Dim_Opportunity_stage as(\r\n        SELECT\r\n        stage_id,\r\n        MASTER_LABEL AS stage_name,\r\n        SORT_ORDER AS stage_position,\r\n        NULL AS account_id,\r\n        IS_ACTIVE AS active_flag,\r\n        Source_id,\r\n        FORECAST_CATEGORY AS FORECAST_CATEGORY,\r\n        NULL AS lead_opp_flag,\r\n        IS_CLOSED AS IS_CLOSED,\r\n        IS_WON AS IS_WON,\r\n        DEFAULT_PROBABILITY AS OPPORTUNITY_STAGE,\r\n        Source_type,\r\n        'D_OPPORTUNITYSTAGES_DIM_LOAD'  AS \tDW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n     FROM\r\n       source\r\n    )    \r\n\r\nselect * from Dim_Opportunity_stage", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Opportunity_Stage"], "unique_id": "model.sales_dataflo.Dim_Opportunity_Stage", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Opportunity_Stage.sql", "original_file_path": "ETL/Target/Tables/Dim_Opportunity_Stage.sql", "name": "Dim_Opportunity_Stage", "resource_type": "model", "alias": "Dim_Opportunity_Stage", "checksum": {"name": "sha256", "checksum": "770deda09af047203f40ab89ab94fd9d7eb01d85a15c3f39b42389e55eaa7097"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "Stage_id"}, "tags": [], "refs": [["Stg_Opportunity_Stage"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_Opportunity_Stage"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Opportunity_Stage.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS (\n       select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity_Stage  \n    ),Dim_Opportunity_stage as(\n        SELECT\n        stage_id,\n        MASTER_LABEL AS stage_name,\n        SORT_ORDER AS stage_position,\n        NULL AS account_id,\n        IS_ACTIVE AS active_flag,\n        Source_id,\n        FORECAST_CATEGORY AS FORECAST_CATEGORY,\n        NULL AS lead_opp_flag,\n        IS_CLOSED AS IS_CLOSED,\n        IS_WON AS IS_WON,\n        DEFAULT_PROBABILITY AS OPPORTUNITY_STAGE,\n        Source_type,\n        'D_OPPORTUNITYSTAGES_DIM_LOAD'  AS \tDW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n     FROM\n       source\n    )    \n\nselect * from Dim_Opportunity_stage", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS (\n       select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity_Stage  \n    ),Dim_Opportunity_stage as(\n        SELECT\n        stage_id,\n        MASTER_LABEL AS stage_name,\n        SORT_ORDER AS stage_position,\n        NULL AS account_id,\n        IS_ACTIVE AS active_flag,\n        Source_id,\n        FORECAST_CATEGORY AS FORECAST_CATEGORY,\n        NULL AS lead_opp_flag,\n        IS_CLOSED AS IS_CLOSED,\n        IS_WON AS IS_WON,\n        DEFAULT_PROBABILITY AS OPPORTUNITY_STAGE,\n        Source_type,\n        'D_OPPORTUNITYSTAGES_DIM_LOAD'  AS \tDW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n     FROM\n       source\n    )    \n\nselect * from Dim_Opportunity_stage"}, "error": null, "status": "SUCCESS 75", "execution_time": 2.504916191101074, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:04:46.178754Z", "completed_at": "2021-02-10T18:04:46.208140Z"}, {"name": "execute", "started_at": "2021-02-10T18:04:46.208528Z", "completed_at": "2021-02-10T18:04:48.595334Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'employee_id'\r\n      )\r\n}}\r\n\r\nWith user AS(\r\n    select *  from {{ ref('Stg_User') }}\r\n),usr_role AS(\r\n    select *  from {{ ref('Stg_User_Role') }}\r\n),Dim_Employee AS(\r\n SELECT\r\n   {{ dbt_utils.surrogate_key('user.user_id') }} AS employee_id,\r\n   user.Source_ID AS source_Emp_id,\r\n   user.Source_type AS Entity_id, \r\n   COMPANY_NAME AS org_name,\r\n   EMPLOYEE_NUMBER AS employee_code,\r\n   FIRST_NAME AS first_name,\r\n   NULL AS middle_name,\r\n   LAST_NAME AS last_name,\r\n   user.NAME AS emp_full_nm,\r\n   user.USER_ROLE_ID AS emp_role_id,\r\n   usr_role. NAME AS emp_position_level,\r\n   NULL  AS emp_gender,\r\n   PHONE AS emp_phone_number,\r\n   EMAIL AS emp_email,\r\n   NULL AS sales_branch_id,\r\n   NULL AS sales_branch_name,\r\n   NULL AS sales_region_id,\r\n   NULL AS sales_region_name,\r\n   NULL AS sales_zone_id,\r\n   NULL AS sales_zone_name,\r\n   NULL AS business_unit_id,\r\n   DEPARTMENT AS business_unit_name,\r\n   CREATED_DATE AS emp_create_dt,\r\n   user.LAST_MODIFIED_DATE AS emp_last_update_dt,\r\n   MANAGER_ID AS mngr_emp_id,\r\n   usr_role.ROLLUP_DESCRIPTION AS mngr_position_level,\r\n   PARENT_ROLE_ID AS mngr_role_id,\r\n   NULL AS emp_financial_year_start,\r\n   NULL AS emp_start_of_week,\r\n   NULL AS Weekly_working_days,\r\n   IS_ACTIVE AS  emp_active,\r\n   'D_EMPLOYEE_DIM_LOAD' AS DW_SESSION_NM,\r\n   {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n  FROM\r\n      user left join usr_role  on user.USER_ROLE_ID = usr_role.Source_ID\r\n      and user.source_type = usr_role.source_type\r\n)\r\n\r\nselect * from Dim_Employee", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Employee"], "unique_id": "model.sales_dataflo.Dim_Employee", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Employee.sql", "original_file_path": "ETL/Target/Tables/Dim_Employee.sql", "name": "Dim_Employee", "resource_type": "model", "alias": "Dim_Employee", "checksum": {"name": "sha256", "checksum": "36b6e5b908ef56cf4e9f6e805904891a6cf1e596a5846f096276d453b72a218a"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "employee_id"}, "tags": [], "refs": [["Stg_User"], ["Stg_User_Role"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_User", "model.sales_dataflo.Stg_User_Role"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Employee.sql", "deferred": false, "compiled_sql": "\n\n\n\nWith user AS(\n    select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_User\n),usr_role AS(\n    select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_User_Role\n),Dim_Employee AS(\n SELECT\n   md5(cast(\n    \n    coalesce(cast(user.user_id as \n    varchar\n), '')\n\n as \n    varchar\n)) AS employee_id,\n   user.Source_ID AS source_Emp_id,\n   user.Source_type AS Entity_id, \n   COMPANY_NAME AS org_name,\n   EMPLOYEE_NUMBER AS employee_code,\n   FIRST_NAME AS first_name,\n   NULL AS middle_name,\n   LAST_NAME AS last_name,\n   user.NAME AS emp_full_nm,\n   user.USER_ROLE_ID AS emp_role_id,\n   usr_role. NAME AS emp_position_level,\n   NULL  AS emp_gender,\n   PHONE AS emp_phone_number,\n   EMAIL AS emp_email,\n   NULL AS sales_branch_id,\n   NULL AS sales_branch_name,\n   NULL AS sales_region_id,\n   NULL AS sales_region_name,\n   NULL AS sales_zone_id,\n   NULL AS sales_zone_name,\n   NULL AS business_unit_id,\n   DEPARTMENT AS business_unit_name,\n   CREATED_DATE AS emp_create_dt,\n   user.LAST_MODIFIED_DATE AS emp_last_update_dt,\n   MANAGER_ID AS mngr_emp_id,\n   usr_role.ROLLUP_DESCRIPTION AS mngr_position_level,\n   PARENT_ROLE_ID AS mngr_role_id,\n   NULL AS emp_financial_year_start,\n   NULL AS emp_start_of_week,\n   NULL AS Weekly_working_days,\n   IS_ACTIVE AS  emp_active,\n   'D_EMPLOYEE_DIM_LOAD' AS DW_SESSION_NM,\n   \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n  FROM\n      user left join usr_role  on user.USER_ROLE_ID = usr_role.Source_ID\n      and user.source_type = usr_role.source_type\n)\n\nselect * from Dim_Employee", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWith user AS(\n    select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_User\n),usr_role AS(\n    select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_User_Role\n),Dim_Employee AS(\n SELECT\n   md5(cast(\n    \n    coalesce(cast(user.user_id as \n    varchar\n), '')\n\n as \n    varchar\n)) AS employee_id,\n   user.Source_ID AS source_Emp_id,\n   user.Source_type AS Entity_id, \n   COMPANY_NAME AS org_name,\n   EMPLOYEE_NUMBER AS employee_code,\n   FIRST_NAME AS first_name,\n   NULL AS middle_name,\n   LAST_NAME AS last_name,\n   user.NAME AS emp_full_nm,\n   user.USER_ROLE_ID AS emp_role_id,\n   usr_role. NAME AS emp_position_level,\n   NULL  AS emp_gender,\n   PHONE AS emp_phone_number,\n   EMAIL AS emp_email,\n   NULL AS sales_branch_id,\n   NULL AS sales_branch_name,\n   NULL AS sales_region_id,\n   NULL AS sales_region_name,\n   NULL AS sales_zone_id,\n   NULL AS sales_zone_name,\n   NULL AS business_unit_id,\n   DEPARTMENT AS business_unit_name,\n   CREATED_DATE AS emp_create_dt,\n   user.LAST_MODIFIED_DATE AS emp_last_update_dt,\n   MANAGER_ID AS mngr_emp_id,\n   usr_role.ROLLUP_DESCRIPTION AS mngr_position_level,\n   PARENT_ROLE_ID AS mngr_role_id,\n   NULL AS emp_financial_year_start,\n   NULL AS emp_start_of_week,\n   NULL AS Weekly_working_days,\n   IS_ACTIVE AS  emp_active,\n   'D_EMPLOYEE_DIM_LOAD' AS DW_SESSION_NM,\n   \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n  FROM\n      user left join usr_role  on user.USER_ROLE_ID = usr_role.Source_ID\n      and user.source_type = usr_role.source_type\n)\n\nselect * from Dim_Employee"}, "error": null, "status": "SUCCESS 3490", "execution_time": 3.229326009750366, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:04:48.687641Z", "completed_at": "2021-02-10T18:04:48.718079Z"}, {"name": "execute", "started_at": "2021-02-10T18:04:48.718435Z", "completed_at": "2021-02-10T18:04:51.811022Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "--depends_on: {{ ref('Stg_Opportunity') }}\r\n--depends_on: {{ ref('Stg_Contact') }}\r\n--depends_on: {{ ref('Stg_User') }}\r\n--depends_on: {{ ref('Stg_Opportunity_Stage') }}\r\n--depends_on: {{ ref('Stg_Deal') }}\r\n--depends_on: {{ ref('Stg_Owner') }}\r\n--depends_on: {{ ref('Stg_Deal_Pipeline_Stage') }}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'opportunity_id'\r\n      )\r\n}}\r\n\r\n(\r\nWITH OPPORTUNITY AS (\r\n       select *  from {{ ref('Stg_Opportunity') }}  \r\n    ),contact AS(\r\n        select *  from {{ ref('Stg_Contact') }}    \r\n    ),\r\n    emp AS(\r\n        select *  from {{ ref('Stg_User') }}    \r\n    ),\r\n    OPPORTUNITY_STAGE AS(\r\n        select *  from {{ ref('Stg_Opportunity_Stage') }}   \r\n    )\r\n    ,Dim_Opportunity as(\r\n    SELECT\r\n        opportunity_id,\r\n        OPPORTUNITY.NAME AS opportunity_NAME,\r\n        OPPORTUNITY.TYPE AS opportunity_Type, \r\n        cast ( OPPORTUNITY.ACCOUNT_ID as varchar(50)) AS ACCOUNT_ID,        \r\n        cast ( OPPORTUNITY.OWNER_ID  as varchar(50)) AS employee_id,\r\n        cast ( OPPORTUNITY.Source_id as varchar(50)) as Source_id,\r\n        OPPORTUNITY_STAGE.SORT_ORDER AS stage_id,\r\n        OPPORTUNITY.IS_WON as IS_WON,\r\n        OPPORTUNITY.IS_CLOSED as IS_CLOSED,\r\n        OPPORTUNITY.stage_name AS stage_name,\r\n        --   OPPORTUNITY.PROBABILITY as PROBABILITY,        \r\n        OPPORTUNITY.FORECAST_CATEGORY as FORECAST_CATEGORY,\r\n        OPPORTUNITY.AMOUNT AS AMOUNT,\r\n        NULL AS amount_without_disc,\r\n        NULL AS expectd_Clouser_Dt,\r\n        OPPORTUNITY.CONTACT_ID AS Contact_id,\r\n        contact.NAME AS contact_name,\r\n        contact.PHONE AS contact_number,\r\n        contact.EMAIL AS contact_email,\r\n        contact.MAILING_STREET AS contact_address,\r\n        OPPORTUNITY.CREATED_DATE AS initial_create_dt,\r\n        OPPORTUNITY.LAST_MODIFIED_DATE AS last_updated_dt,\r\n        OPPORTUNITY.CLOSE_DATE AS CLOSE_DATE,\r\n        NULL AS prospect_Dt,\r\n        NULL AS stage_calc_id,\r\n        OPPORTUNITY_STAGE.CREATED_DATE AS stage_start_dt,\r\n        NULL AS stage_end_dt,        \r\n        NULL AS lead_lost_reason,\r\n        NULL AS competitor,\r\n        NULL AS on_hold_flag,\r\n        NULL AS sub_product_id,\r\n        NULL AS sub_product_name,\r\n        NULL AS prd_amount_without_disc,\r\n        NULL AS prd_discount,\r\n        OPPORTUNITY. IS_DELETED AS active_flag,\r\n        NULL AS DW_CURR_FLG,\r\n        NULL AS EFFCT_START_DATE,\r\n        NULL AS EFFCT_END_DATE,\r\n        OPPORTUNITY.Source_type as Source_type,\r\n        'D_OPPORTUNITY_DIM_LOAD'  AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS\r\n      FROM\r\n        OPPORTUNITY \r\n        left join emp on OPPORTUNITY.OWNER_ID  =  emp.Source_ID\r\n        left join contact on emp.contact_id  =  contact.Source_ID\r\n        left join OPPORTUNITY_STAGE on OPPORTUNITY.stage_name = OPPORTUNITY_STAGE.MASTER_LABEL \r\n        and OPPORTUNITY_STAGE.Source_type = OPPORTUNITY.Source_type\r\n    ) \r\nselect * from Dim_Opportunity )   \r\nUnion all \r\n(WITH OPPORTUNITY AS (\r\n       select *  from {{ ref('Stg_Deal') }}  \r\n    ),\r\n    emp AS(\r\n        select *  from {{ ref('Stg_Owner') }}    \r\n    ),\r\n    OPPORTUNITY_STAGE AS(\r\n        select *  from {{ ref('Stg_Deal_Pipeline_Stage') }}   \r\n    )\r\n    ,Dim_Opportunity as(\r\n    SELECT\r\n        DEAL_ID as opportunity_id,\r\n        OPPORTUNITY.PROPERTY_DEALNAME AS opportunity_NAME,\r\n        OPPORTUNITY.PROPERTY_DEALTYPE AS opportunity_Type, \r\n        NULL AS ACCOUNT_ID,        \r\n        cast (OPPORTUNITY.OWNER_ID as varchar(50)) AS employee_id,\r\n        cast (OPPORTUNITY.Source_DEAL_ID as varchar(50)) as Source_id,\r\n        OPPORTUNITY_STAGE.DISPLAY_ORDER AS stage_id,\r\n        null as IS_WON,\r\n        OPPORTUNITY.PROPERTY_HS_IS_CLOSED as IS_CLOSED,\r\n        OPPORTUNITY.DEAL_PIPELINE_STAGE_ID AS stage_name,\r\n        --   OPPORTUNITY.PROBABILITY as PROBABILITY,        \r\n        OPPORTUNITY.PROPERTY_HS_MANUAL_FORECAST_CATEGORY as FORECAST_CATEGORY,\r\n        OPPORTUNITY.PROPERTY_AMOUNT AS AMOUNT,\r\n        NULL AS amount_without_disc,\r\n        NULL AS expectd_Clouser_Dt,\r\n        NULL AS Contact_id,\r\n        OPPORTUNITY.PROPERTY_POINT_OF_CONTACT AS contact_name,\r\n        NULL AS contact_number,\r\n        NULL AS contact_email,\r\n        NULL AS contact_address,\r\n        OPPORTUNITY.PROPERTY_CREATEDATE AS initial_create_dt,\r\n        NULL AS last_updated_dt,\r\n        OPPORTUNITY.PROPERTY_CLOSEDATE AS CLOSE_DATE,\r\n        NULL AS prospect_Dt,\r\n        NULL AS stage_calc_id,\r\n        OPPORTUNITY.PROPERTY_HS_CREATEDATE AS stage_start_dt,\r\n        NULL AS stage_end_dt,        \r\n        NULL AS lead_lost_reason,\r\n        NULL AS competitor,\r\n        NULL AS on_hold_flag,\r\n        NULL AS sub_product_id,\r\n        NULL AS sub_product_name,\r\n        NULL AS prd_amount_without_disc,\r\n        NULL AS prd_discount,\r\n        NULL AS active_flag,\r\n        NULL AS DW_CURR_FLG,\r\n        NULL AS EFFCT_START_DATE,\r\n        NULL AS EFFCT_END_DATE,\r\n        OPPORTUNITY.Source_type as Source_type,\r\n        'D_OPPORTUNITY_DIM_LOAD'  AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS  \r\n      FROM\r\n        OPPORTUNITY \r\n        left join emp on OPPORTUNITY.Owner_id  =  emp.Source_OWNER_ID\r\n        left join OPPORTUNITY_STAGE on OPPORTUNITY.DEAL_PIPELINE_STAGE_ID = OPPORTUNITY_STAGE.SOURCE_STAGE_ID \r\n        and OPPORTUNITY_STAGE.Source_type = OPPORTUNITY.Source_type\r\n    )  \r\n\r\nselect * from Dim_Opportunity )", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Opportunity"], "unique_id": "model.sales_dataflo.Dim_Opportunity", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Opportunity.sql", "original_file_path": "ETL/Target/Tables/Dim_Opportunity.sql", "name": "Dim_Opportunity", "resource_type": "model", "alias": "Dim_Opportunity", "checksum": {"name": "sha256", "checksum": "620edda675153ac567374d2f8589958a2716dbc2521d0ed7d9e3166d7c1472f8"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "opportunity_id"}, "tags": [], "refs": [["Stg_Opportunity"], ["Stg_Contact"], ["Stg_User"], ["Stg_Opportunity_Stage"], ["Stg_Deal"], ["Stg_Owner"], ["Stg_Deal_Pipeline_Stage"], ["Stg_Opportunity"], ["Stg_Contact"], ["Stg_User"], ["Stg_Opportunity_Stage"], ["Stg_Deal"], ["Stg_Owner"], ["Stg_Deal_Pipeline_Stage"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_Opportunity", "model.sales_dataflo.Stg_Contact", "model.sales_dataflo.Stg_User", "model.sales_dataflo.Stg_Opportunity_Stage", "model.sales_dataflo.Stg_Deal", "model.sales_dataflo.Stg_Owner", "model.sales_dataflo.Stg_Deal_Pipeline_Stage", "model.sales_dataflo.Stg_Opportunity", "model.sales_dataflo.Stg_Contact", "model.sales_dataflo.Stg_User", "model.sales_dataflo.Stg_Opportunity_Stage", "model.sales_dataflo.Stg_Deal", "model.sales_dataflo.Stg_Owner", "model.sales_dataflo.Stg_Deal_Pipeline_Stage"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Opportunity.sql", "deferred": false, "compiled_sql": "--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity\n--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Contact\n--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_User\n--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity_Stage\n--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Deal\n--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Owner\n--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Deal_Pipeline_Stage\n\n\n\n\n\n(\nWITH OPPORTUNITY AS (\n       select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity  \n    ),contact AS(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Contact    \n    ),\n    emp AS(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_User    \n    ),\n    OPPORTUNITY_STAGE AS(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity_Stage   \n    )\n    ,Dim_Opportunity as(\n    SELECT\n        opportunity_id,\n        OPPORTUNITY.NAME AS opportunity_NAME,\n        OPPORTUNITY.TYPE AS opportunity_Type, \n        cast ( OPPORTUNITY.ACCOUNT_ID as varchar(50)) AS ACCOUNT_ID,        \n        cast ( OPPORTUNITY.OWNER_ID  as varchar(50)) AS employee_id,\n        cast ( OPPORTUNITY.Source_id as varchar(50)) as Source_id,\n        OPPORTUNITY_STAGE.SORT_ORDER AS stage_id,\n        OPPORTUNITY.IS_WON as IS_WON,\n        OPPORTUNITY.IS_CLOSED as IS_CLOSED,\n        OPPORTUNITY.stage_name AS stage_name,\n        --   OPPORTUNITY.PROBABILITY as PROBABILITY,        \n        OPPORTUNITY.FORECAST_CATEGORY as FORECAST_CATEGORY,\n        OPPORTUNITY.AMOUNT AS AMOUNT,\n        NULL AS amount_without_disc,\n        NULL AS expectd_Clouser_Dt,\n        OPPORTUNITY.CONTACT_ID AS Contact_id,\n        contact.NAME AS contact_name,\n        contact.PHONE AS contact_number,\n        contact.EMAIL AS contact_email,\n        contact.MAILING_STREET AS contact_address,\n        OPPORTUNITY.CREATED_DATE AS initial_create_dt,\n        OPPORTUNITY.LAST_MODIFIED_DATE AS last_updated_dt,\n        OPPORTUNITY.CLOSE_DATE AS CLOSE_DATE,\n        NULL AS prospect_Dt,\n        NULL AS stage_calc_id,\n        OPPORTUNITY_STAGE.CREATED_DATE AS stage_start_dt,\n        NULL AS stage_end_dt,        \n        NULL AS lead_lost_reason,\n        NULL AS competitor,\n        NULL AS on_hold_flag,\n        NULL AS sub_product_id,\n        NULL AS sub_product_name,\n        NULL AS prd_amount_without_disc,\n        NULL AS prd_discount,\n        OPPORTUNITY. IS_DELETED AS active_flag,\n        NULL AS DW_CURR_FLG,\n        NULL AS EFFCT_START_DATE,\n        NULL AS EFFCT_END_DATE,\n        OPPORTUNITY.Source_type as Source_type,\n        'D_OPPORTUNITY_DIM_LOAD'  AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS\n      FROM\n        OPPORTUNITY \n        left join emp on OPPORTUNITY.OWNER_ID  =  emp.Source_ID\n        left join contact on emp.contact_id  =  contact.Source_ID\n        left join OPPORTUNITY_STAGE on OPPORTUNITY.stage_name = OPPORTUNITY_STAGE.MASTER_LABEL \n        and OPPORTUNITY_STAGE.Source_type = OPPORTUNITY.Source_type\n    ) \nselect * from Dim_Opportunity )   \nUnion all \n(WITH OPPORTUNITY AS (\n       select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Deal  \n    ),\n    emp AS(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Owner    \n    ),\n    OPPORTUNITY_STAGE AS(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Deal_Pipeline_Stage   \n    )\n    ,Dim_Opportunity as(\n    SELECT\n        DEAL_ID as opportunity_id,\n        OPPORTUNITY.PROPERTY_DEALNAME AS opportunity_NAME,\n        OPPORTUNITY.PROPERTY_DEALTYPE AS opportunity_Type, \n        NULL AS ACCOUNT_ID,        \n        cast (OPPORTUNITY.OWNER_ID as varchar(50)) AS employee_id,\n        cast (OPPORTUNITY.Source_DEAL_ID as varchar(50)) as Source_id,\n        OPPORTUNITY_STAGE.DISPLAY_ORDER AS stage_id,\n        null as IS_WON,\n        OPPORTUNITY.PROPERTY_HS_IS_CLOSED as IS_CLOSED,\n        OPPORTUNITY.DEAL_PIPELINE_STAGE_ID AS stage_name,\n        --   OPPORTUNITY.PROBABILITY as PROBABILITY,        \n        OPPORTUNITY.PROPERTY_HS_MANUAL_FORECAST_CATEGORY as FORECAST_CATEGORY,\n        OPPORTUNITY.PROPERTY_AMOUNT AS AMOUNT,\n        NULL AS amount_without_disc,\n        NULL AS expectd_Clouser_Dt,\n        NULL AS Contact_id,\n        OPPORTUNITY.PROPERTY_POINT_OF_CONTACT AS contact_name,\n        NULL AS contact_number,\n        NULL AS contact_email,\n        NULL AS contact_address,\n        OPPORTUNITY.PROPERTY_CREATEDATE AS initial_create_dt,\n        NULL AS last_updated_dt,\n        OPPORTUNITY.PROPERTY_CLOSEDATE AS CLOSE_DATE,\n        NULL AS prospect_Dt,\n        NULL AS stage_calc_id,\n        OPPORTUNITY.PROPERTY_HS_CREATEDATE AS stage_start_dt,\n        NULL AS stage_end_dt,        \n        NULL AS lead_lost_reason,\n        NULL AS competitor,\n        NULL AS on_hold_flag,\n        NULL AS sub_product_id,\n        NULL AS sub_product_name,\n        NULL AS prd_amount_without_disc,\n        NULL AS prd_discount,\n        NULL AS active_flag,\n        NULL AS DW_CURR_FLG,\n        NULL AS EFFCT_START_DATE,\n        NULL AS EFFCT_END_DATE,\n        OPPORTUNITY.Source_type as Source_type,\n        'D_OPPORTUNITY_DIM_LOAD'  AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS  \n      FROM\n        OPPORTUNITY \n        left join emp on OPPORTUNITY.Owner_id  =  emp.Source_OWNER_ID\n        left join OPPORTUNITY_STAGE on OPPORTUNITY.DEAL_PIPELINE_STAGE_ID = OPPORTUNITY_STAGE.SOURCE_STAGE_ID \n        and OPPORTUNITY_STAGE.Source_type = OPPORTUNITY.Source_type\n    )  \n\nselect * from Dim_Opportunity )", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity\n--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Contact\n--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_User\n--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity_Stage\n--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Deal\n--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Owner\n--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Deal_Pipeline_Stage\n\n\n\n\n\n(\nWITH OPPORTUNITY AS (\n       select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity  \n    ),contact AS(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Contact    \n    ),\n    emp AS(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_User    \n    ),\n    OPPORTUNITY_STAGE AS(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity_Stage   \n    )\n    ,Dim_Opportunity as(\n    SELECT\n        opportunity_id,\n        OPPORTUNITY.NAME AS opportunity_NAME,\n        OPPORTUNITY.TYPE AS opportunity_Type, \n        cast ( OPPORTUNITY.ACCOUNT_ID as varchar(50)) AS ACCOUNT_ID,        \n        cast ( OPPORTUNITY.OWNER_ID  as varchar(50)) AS employee_id,\n        cast ( OPPORTUNITY.Source_id as varchar(50)) as Source_id,\n        OPPORTUNITY_STAGE.SORT_ORDER AS stage_id,\n        OPPORTUNITY.IS_WON as IS_WON,\n        OPPORTUNITY.IS_CLOSED as IS_CLOSED,\n        OPPORTUNITY.stage_name AS stage_name,\n        --   OPPORTUNITY.PROBABILITY as PROBABILITY,        \n        OPPORTUNITY.FORECAST_CATEGORY as FORECAST_CATEGORY,\n        OPPORTUNITY.AMOUNT AS AMOUNT,\n        NULL AS amount_without_disc,\n        NULL AS expectd_Clouser_Dt,\n        OPPORTUNITY.CONTACT_ID AS Contact_id,\n        contact.NAME AS contact_name,\n        contact.PHONE AS contact_number,\n        contact.EMAIL AS contact_email,\n        contact.MAILING_STREET AS contact_address,\n        OPPORTUNITY.CREATED_DATE AS initial_create_dt,\n        OPPORTUNITY.LAST_MODIFIED_DATE AS last_updated_dt,\n        OPPORTUNITY.CLOSE_DATE AS CLOSE_DATE,\n        NULL AS prospect_Dt,\n        NULL AS stage_calc_id,\n        OPPORTUNITY_STAGE.CREATED_DATE AS stage_start_dt,\n        NULL AS stage_end_dt,        \n        NULL AS lead_lost_reason,\n        NULL AS competitor,\n        NULL AS on_hold_flag,\n        NULL AS sub_product_id,\n        NULL AS sub_product_name,\n        NULL AS prd_amount_without_disc,\n        NULL AS prd_discount,\n        OPPORTUNITY. IS_DELETED AS active_flag,\n        NULL AS DW_CURR_FLG,\n        NULL AS EFFCT_START_DATE,\n        NULL AS EFFCT_END_DATE,\n        OPPORTUNITY.Source_type as Source_type,\n        'D_OPPORTUNITY_DIM_LOAD'  AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS\n      FROM\n        OPPORTUNITY \n        left join emp on OPPORTUNITY.OWNER_ID  =  emp.Source_ID\n        left join contact on emp.contact_id  =  contact.Source_ID\n        left join OPPORTUNITY_STAGE on OPPORTUNITY.stage_name = OPPORTUNITY_STAGE.MASTER_LABEL \n        and OPPORTUNITY_STAGE.Source_type = OPPORTUNITY.Source_type\n    ) \nselect * from Dim_Opportunity )   \nUnion all \n(WITH OPPORTUNITY AS (\n       select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Deal  \n    ),\n    emp AS(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Owner    \n    ),\n    OPPORTUNITY_STAGE AS(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Deal_Pipeline_Stage   \n    )\n    ,Dim_Opportunity as(\n    SELECT\n        DEAL_ID as opportunity_id,\n        OPPORTUNITY.PROPERTY_DEALNAME AS opportunity_NAME,\n        OPPORTUNITY.PROPERTY_DEALTYPE AS opportunity_Type, \n        NULL AS ACCOUNT_ID,        \n        cast (OPPORTUNITY.OWNER_ID as varchar(50)) AS employee_id,\n        cast (OPPORTUNITY.Source_DEAL_ID as varchar(50)) as Source_id,\n        OPPORTUNITY_STAGE.DISPLAY_ORDER AS stage_id,\n        null as IS_WON,\n        OPPORTUNITY.PROPERTY_HS_IS_CLOSED as IS_CLOSED,\n        OPPORTUNITY.DEAL_PIPELINE_STAGE_ID AS stage_name,\n        --   OPPORTUNITY.PROBABILITY as PROBABILITY,        \n        OPPORTUNITY.PROPERTY_HS_MANUAL_FORECAST_CATEGORY as FORECAST_CATEGORY,\n        OPPORTUNITY.PROPERTY_AMOUNT AS AMOUNT,\n        NULL AS amount_without_disc,\n        NULL AS expectd_Clouser_Dt,\n        NULL AS Contact_id,\n        OPPORTUNITY.PROPERTY_POINT_OF_CONTACT AS contact_name,\n        NULL AS contact_number,\n        NULL AS contact_email,\n        NULL AS contact_address,\n        OPPORTUNITY.PROPERTY_CREATEDATE AS initial_create_dt,\n        NULL AS last_updated_dt,\n        OPPORTUNITY.PROPERTY_CLOSEDATE AS CLOSE_DATE,\n        NULL AS prospect_Dt,\n        NULL AS stage_calc_id,\n        OPPORTUNITY.PROPERTY_HS_CREATEDATE AS stage_start_dt,\n        NULL AS stage_end_dt,        \n        NULL AS lead_lost_reason,\n        NULL AS competitor,\n        NULL AS on_hold_flag,\n        NULL AS sub_product_id,\n        NULL AS sub_product_name,\n        NULL AS prd_amount_without_disc,\n        NULL AS prd_discount,\n        NULL AS active_flag,\n        NULL AS DW_CURR_FLG,\n        NULL AS EFFCT_START_DATE,\n        NULL AS EFFCT_END_DATE,\n        OPPORTUNITY.Source_type as Source_type,\n        'D_OPPORTUNITY_DIM_LOAD'  AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS  \n      FROM\n        OPPORTUNITY \n        left join emp on OPPORTUNITY.Owner_id  =  emp.Source_OWNER_ID\n        left join OPPORTUNITY_STAGE on OPPORTUNITY.DEAL_PIPELINE_STAGE_ID = OPPORTUNITY_STAGE.SOURCE_STAGE_ID \n        and OPPORTUNITY_STAGE.Source_type = OPPORTUNITY.Source_type\n    )  \n\nselect * from Dim_Opportunity )"}, "error": null, "status": "SUCCESS 21479", "execution_time": 4.250791549682617, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:04:51.921070Z", "completed_at": "2021-02-10T18:04:52.000394Z"}, {"name": "execute", "started_at": "2021-02-10T18:04:52.000858Z", "completed_at": "2021-02-10T18:04:56.073818Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'lead_id'\r\n      )\r\n}}\r\n\r\n    WITH lead AS (\r\n       select *  from {{ ref('Stg_Lead') }} \r\n    ),opportunity as(\r\n        select *  from {{ ref('Stg_Opportunity') }} \r\n    ),Dim_Lead as(\r\n    SELECT\r\n        lead_id,\r\n        lead.LEAD_SOURCE AS LEAD_SOURCE,\r\n        lead.source_id as Source_ID,\r\n        concat(lead.street,' ',lead.city,' ',lead.state,' ',lead.postal_code,' ',lead.country) AS lead_contact_address,\r\n        lead.country as country,\r\n        lead.TITLE,\r\n        lead.STATUS AS STATUS,\r\n        opportunity.STAGE_NAME AS STAGE_NAME,\r\n        NULL AS product_id,\r\n        NULL AS campaign_id,\r\n        lead.IS_CONVERTED AS lead_to_opp_flag,\r\n        null AS lead_lost_flag,\r\n        lead.CONVERTED_DATE AS lead_CONVERTED_DATE,\r\n        lead.CONVERTED_OPPORTUNITY_ID AS CONVERTED_OPPORTUNITY_ID,\r\n        NULL AS lead_lost_dt,\r\n        NULL AS lead_lost_reason,\r\n        lead.ANNUAL_REVENUE,\r\n        lead.NUMBER_OF_EMPLOYEES,\r\n        lead.INDUSTRY AS Industry,\r\n        LEAD.owner_id AS employee_id,\r\n        lead.CREATED_DATE as INITIAL_CREATE_DT,\r\n        lead.LAST_MODIFIED_DATE as lead_LAST_MODIFIED_DATE,\r\n        lead.Source_type as Source_type,\r\n        'D_LEAD_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n        FROM\r\n          lead left join opportunity on lead.CONVERTED_OPPORTUNITY_ID = opportunity.Source_ID \r\n    )    \r\n \r\nselect * from Dim_Lead", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Lead"], "unique_id": "model.sales_dataflo.Dim_Lead", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Lead.sql", "original_file_path": "ETL/Target/Tables/Dim_Lead.sql", "name": "Dim_Lead", "resource_type": "model", "alias": "Dim_Lead", "checksum": {"name": "sha256", "checksum": "0785695bf4d10c1bd7a9dc6348def5a8574de075d48820711d113ee5335d5aa1"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "lead_id"}, "tags": [], "refs": [["Stg_Lead"], ["Stg_Opportunity"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_Lead", "model.sales_dataflo.Stg_Opportunity"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Lead.sql", "deferred": false, "compiled_sql": "\n\n\n\n    WITH lead AS (\n       select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Lead \n    ),opportunity as(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity \n    ),Dim_Lead as(\n    SELECT\n        lead_id,\n        lead.LEAD_SOURCE AS LEAD_SOURCE,\n        lead.source_id as Source_ID,\n        concat(lead.street,' ',lead.city,' ',lead.state,' ',lead.postal_code,' ',lead.country) AS lead_contact_address,\n        lead.country as country,\n        lead.TITLE,\n        lead.STATUS AS STATUS,\n        opportunity.STAGE_NAME AS STAGE_NAME,\n        NULL AS product_id,\n        NULL AS campaign_id,\n        lead.IS_CONVERTED AS lead_to_opp_flag,\n        null AS lead_lost_flag,\n        lead.CONVERTED_DATE AS lead_CONVERTED_DATE,\n        lead.CONVERTED_OPPORTUNITY_ID AS CONVERTED_OPPORTUNITY_ID,\n        NULL AS lead_lost_dt,\n        NULL AS lead_lost_reason,\n        lead.ANNUAL_REVENUE,\n        lead.NUMBER_OF_EMPLOYEES,\n        lead.INDUSTRY AS Industry,\n        LEAD.owner_id AS employee_id,\n        lead.CREATED_DATE as INITIAL_CREATE_DT,\n        lead.LAST_MODIFIED_DATE as lead_LAST_MODIFIED_DATE,\n        lead.Source_type as Source_type,\n        'D_LEAD_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n        FROM\n          lead left join opportunity on lead.CONVERTED_OPPORTUNITY_ID = opportunity.Source_ID \n    )    \n \nselect * from Dim_Lead", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n    WITH lead AS (\n       select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Lead \n    ),opportunity as(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity \n    ),Dim_Lead as(\n    SELECT\n        lead_id,\n        lead.LEAD_SOURCE AS LEAD_SOURCE,\n        lead.source_id as Source_ID,\n        concat(lead.street,' ',lead.city,' ',lead.state,' ',lead.postal_code,' ',lead.country) AS lead_contact_address,\n        lead.country as country,\n        lead.TITLE,\n        lead.STATUS AS STATUS,\n        opportunity.STAGE_NAME AS STAGE_NAME,\n        NULL AS product_id,\n        NULL AS campaign_id,\n        lead.IS_CONVERTED AS lead_to_opp_flag,\n        null AS lead_lost_flag,\n        lead.CONVERTED_DATE AS lead_CONVERTED_DATE,\n        lead.CONVERTED_OPPORTUNITY_ID AS CONVERTED_OPPORTUNITY_ID,\n        NULL AS lead_lost_dt,\n        NULL AS lead_lost_reason,\n        lead.ANNUAL_REVENUE,\n        lead.NUMBER_OF_EMPLOYEES,\n        lead.INDUSTRY AS Industry,\n        LEAD.owner_id AS employee_id,\n        lead.CREATED_DATE as INITIAL_CREATE_DT,\n        lead.LAST_MODIFIED_DATE as lead_LAST_MODIFIED_DATE,\n        lead.Source_type as Source_type,\n        'D_LEAD_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n        FROM\n          lead left join opportunity on lead.CONVERTED_OPPORTUNITY_ID = opportunity.Source_ID \n    )    \n \nselect * from Dim_Lead"}, "error": null, "status": "SUCCESS 115015", "execution_time": 6.3895955085754395, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:04:56.175795Z", "completed_at": "2021-02-10T18:04:56.206519Z"}, {"name": "execute", "started_at": "2021-02-10T18:04:56.206932Z", "completed_at": "2021-02-10T18:05:02.389353Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "--depends_on: {{ ref('Stg_Period') }}\r\n--depends_on: {{ ref('Dim_Calendar') }}\r\n\r\n{%- set source_relation = adapter.get_relation( var('V_DB'),var('V_Schema'),\"DIM_SALES_ENTITY\") -%}\r\n{% set results = dbt_utils.get_column_values(source_relation,'entity_name') %}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{ config(\r\n    materialized=\"table\"\r\n) \r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n {% if  V_SF_Schema[0:2] == 'SF'  %}  \r\n(with year_data as \r\n(\r\n    select * from {{ ref('Stg_Period') }} \r\n    where type ='Year'\r\n    and source_type = '{{ V_SF_Schema}}'\r\n),\r\nqutr_data as \r\n(\r\n    select * from {{ ref('Stg_Period') }} \r\n    where type ='Quarter'\r\n    and source_type = '{{ V_SF_Schema}}'\r\n),\r\n Dates AS \r\n(\r\n    SELECT * FROM {{ ref('Dim_Calendar') }}\r\n)   \r\nselect\r\n    d.Calendar_ID AS TimeFrameID,\r\n    'D' as TimeFrameType,\r\n    d.Calendar_ID as calendar_id,\r\n    d.cldr_date as day_start,\r\n    d.cldr_date as day_end,\r\n    d.week_start_date as week_Start,\r\n    d.week_end_date as week_end,\r\n    'W' || d.cldr_week_num as week_num,\r\n    d.cldr_mnth_strt_dt as month_start,\r\n    d.cldr_mnth_end_dt as month_end, \r\n    d.month_name as month_name,\r\n     'Q' || s.number as qutr_number,\r\n    s.start_date as quarter_start,\r\n    s.end_date as quarter_end,\r\n    d.year as year,\r\n    y.start_date as year_start,\r\n    y.end_date as year_end,\r\n    '{{ V_SF_Schema }}' as Source_type,\r\n    'D_TIMEFRAME_DIM_LOAD' AS DW_SESSION_NM,\r\n    {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS     \r\nfrom\r\n    dates d\r\n    left join qutr_data s\r\n    on d.cldr_date between s.start_date and s.end_date\r\n    left join year_data y\r\n    on d.cldr_date between y.start_date and y.end_date\r\norder by 2)\r\n {% elif  V_SF_Schema[0:2] == 'HS'  %} \r\n (with  Dates AS \r\n(\r\n    SELECT * FROM {{ ref('Dim_Calendar') }}\r\n)   \r\nselect\r\n    d.Calendar_ID AS TimeFrameID,\r\n    'D' as TimeFrameType,\r\n    d.Calendar_ID as calendar_id,\r\n    d.cldr_date as day_start,\r\n    d.cldr_date as day_end,\r\n    d.week_start_date as week_Start,\r\n    d.week_end_date as week_end,\r\n    'W' || d.cldr_week_num as week_num,\r\n    d.cldr_mnth_strt_dt as month_start,\r\n    d.cldr_mnth_end_dt as month_end, \r\n    d.month_name as month_name,\r\n    cldr_qtr as qutr_number,\r\n    d.cldr_qtr_strt_dt as quarter_start,\r\n    d.cldr_qtr_end_dt as quarter_end,\r\n    d.year as year,\r\n    d.cldr_year_start_dt as year_start,\r\n    d.cldr_qtr_end_dt as year_end,\r\n    '{{ V_SF_Schema }}' as Source_type,\r\n    'D_TIMEFRAME_DIM_LOAD' AS DW_SESSION_NM,\r\n    {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS     \r\nfrom\r\n    dates d\r\n order by 2)\r\n\r\n{% endif %}\r\n{% if loop.nextitem is defined %}\r\n            UNION ALL\r\n        {% endif %}\r\n\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_TimeFrame"], "unique_id": "model.sales_dataflo.Dim_TimeFrame", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_TimeFrame.sql", "original_file_path": "ETL/Target/Tables/Dim_TimeFrame.sql", "name": "Dim_TimeFrame", "resource_type": "model", "alias": "Dim_TimeFrame", "checksum": {"name": "sha256", "checksum": "625f9f56b0c40e58fcf99d94e6d6307fcd3d0c5eff80b86e44eb6b6db6ae1a47"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Stg_Period"], ["Dim_Calendar"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.get_column_values", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_Period", "model.sales_dataflo.Dim_Calendar"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_TimeFrame.sql", "deferred": false, "compiled_sql": "--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Period\n--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n\n\n\n\n\n\n   \n(with year_data as \n(\n    select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Period \n    where type ='Year'\n    and source_type = 'SF_TESTUSER_31122020'\n),\nqutr_data as \n(\n    select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Period \n    where type ='Quarter'\n    and source_type = 'SF_TESTUSER_31122020'\n),\n Dates AS \n(\n    SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n)   \nselect\n    d.Calendar_ID AS TimeFrameID,\n    'D' as TimeFrameType,\n    d.Calendar_ID as calendar_id,\n    d.cldr_date as day_start,\n    d.cldr_date as day_end,\n    d.week_start_date as week_Start,\n    d.week_end_date as week_end,\n    'W' || d.cldr_week_num as week_num,\n    d.cldr_mnth_strt_dt as month_start,\n    d.cldr_mnth_end_dt as month_end, \n    d.month_name as month_name,\n     'Q' || s.number as qutr_number,\n    s.start_date as quarter_start,\n    s.end_date as quarter_end,\n    d.year as year,\n    y.start_date as year_start,\n    y.end_date as year_end,\n    'SF_TESTUSER_31122020' as Source_type,\n    'D_TIMEFRAME_DIM_LOAD' AS DW_SESSION_NM,\n    \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS     \nfrom\n    dates d\n    left join qutr_data s\n    on d.cldr_date between s.start_date and s.end_date\n    left join year_data y\n    on d.cldr_date between y.start_date and y.end_date\norder by 2)\n \n\n            UNION ALL\n        \n\n\n   \n(with year_data as \n(\n    select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Period \n    where type ='Year'\n    and source_type = 'SF_RKLIVE_06012021'\n),\nqutr_data as \n(\n    select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Period \n    where type ='Quarter'\n    and source_type = 'SF_RKLIVE_06012021'\n),\n Dates AS \n(\n    SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n)   \nselect\n    d.Calendar_ID AS TimeFrameID,\n    'D' as TimeFrameType,\n    d.Calendar_ID as calendar_id,\n    d.cldr_date as day_start,\n    d.cldr_date as day_end,\n    d.week_start_date as week_Start,\n    d.week_end_date as week_end,\n    'W' || d.cldr_week_num as week_num,\n    d.cldr_mnth_strt_dt as month_start,\n    d.cldr_mnth_end_dt as month_end, \n    d.month_name as month_name,\n     'Q' || s.number as qutr_number,\n    s.start_date as quarter_start,\n    s.end_date as quarter_end,\n    d.year as year,\n    y.start_date as year_start,\n    y.end_date as year_end,\n    'SF_RKLIVE_06012021' as Source_type,\n    'D_TIMEFRAME_DIM_LOAD' AS DW_SESSION_NM,\n    \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS     \nfrom\n    dates d\n    left join qutr_data s\n    on d.cldr_date between s.start_date and s.end_date\n    left join year_data y\n    on d.cldr_date between y.start_date and y.end_date\norder by 2)\n \n\n            UNION ALL\n        \n\n\n  \n (with  Dates AS \n(\n    SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n)   \nselect\n    d.Calendar_ID AS TimeFrameID,\n    'D' as TimeFrameType,\n    d.Calendar_ID as calendar_id,\n    d.cldr_date as day_start,\n    d.cldr_date as day_end,\n    d.week_start_date as week_Start,\n    d.week_end_date as week_end,\n    'W' || d.cldr_week_num as week_num,\n    d.cldr_mnth_strt_dt as month_start,\n    d.cldr_mnth_end_dt as month_end, \n    d.month_name as month_name,\n    cldr_qtr as qutr_number,\n    d.cldr_qtr_strt_dt as quarter_start,\n    d.cldr_qtr_end_dt as quarter_end,\n    d.year as year,\n    d.cldr_year_start_dt as year_start,\n    d.cldr_qtr_end_dt as year_end,\n    'HS_TESTUSER_09012021' as Source_type,\n    'D_TIMEFRAME_DIM_LOAD' AS DW_SESSION_NM,\n    \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS     \nfrom\n    dates d\n order by 2)\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Period\n--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n\n\n\n\n\n\n   \n(with year_data as \n(\n    select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Period \n    where type ='Year'\n    and source_type = 'SF_TESTUSER_31122020'\n),\nqutr_data as \n(\n    select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Period \n    where type ='Quarter'\n    and source_type = 'SF_TESTUSER_31122020'\n),\n Dates AS \n(\n    SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n)   \nselect\n    d.Calendar_ID AS TimeFrameID,\n    'D' as TimeFrameType,\n    d.Calendar_ID as calendar_id,\n    d.cldr_date as day_start,\n    d.cldr_date as day_end,\n    d.week_start_date as week_Start,\n    d.week_end_date as week_end,\n    'W' || d.cldr_week_num as week_num,\n    d.cldr_mnth_strt_dt as month_start,\n    d.cldr_mnth_end_dt as month_end, \n    d.month_name as month_name,\n     'Q' || s.number as qutr_number,\n    s.start_date as quarter_start,\n    s.end_date as quarter_end,\n    d.year as year,\n    y.start_date as year_start,\n    y.end_date as year_end,\n    'SF_TESTUSER_31122020' as Source_type,\n    'D_TIMEFRAME_DIM_LOAD' AS DW_SESSION_NM,\n    \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS     \nfrom\n    dates d\n    left join qutr_data s\n    on d.cldr_date between s.start_date and s.end_date\n    left join year_data y\n    on d.cldr_date between y.start_date and y.end_date\norder by 2)\n \n\n            UNION ALL\n        \n\n\n   \n(with year_data as \n(\n    select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Period \n    where type ='Year'\n    and source_type = 'SF_RKLIVE_06012021'\n),\nqutr_data as \n(\n    select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Period \n    where type ='Quarter'\n    and source_type = 'SF_RKLIVE_06012021'\n),\n Dates AS \n(\n    SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n)   \nselect\n    d.Calendar_ID AS TimeFrameID,\n    'D' as TimeFrameType,\n    d.Calendar_ID as calendar_id,\n    d.cldr_date as day_start,\n    d.cldr_date as day_end,\n    d.week_start_date as week_Start,\n    d.week_end_date as week_end,\n    'W' || d.cldr_week_num as week_num,\n    d.cldr_mnth_strt_dt as month_start,\n    d.cldr_mnth_end_dt as month_end, \n    d.month_name as month_name,\n     'Q' || s.number as qutr_number,\n    s.start_date as quarter_start,\n    s.end_date as quarter_end,\n    d.year as year,\n    y.start_date as year_start,\n    y.end_date as year_end,\n    'SF_RKLIVE_06012021' as Source_type,\n    'D_TIMEFRAME_DIM_LOAD' AS DW_SESSION_NM,\n    \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS     \nfrom\n    dates d\n    left join qutr_data s\n    on d.cldr_date between s.start_date and s.end_date\n    left join year_data y\n    on d.cldr_date between y.start_date and y.end_date\norder by 2)\n \n\n            UNION ALL\n        \n\n\n  \n (with  Dates AS \n(\n    SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n)   \nselect\n    d.Calendar_ID AS TimeFrameID,\n    'D' as TimeFrameType,\n    d.Calendar_ID as calendar_id,\n    d.cldr_date as day_start,\n    d.cldr_date as day_end,\n    d.week_start_date as week_Start,\n    d.week_end_date as week_end,\n    'W' || d.cldr_week_num as week_num,\n    d.cldr_mnth_strt_dt as month_start,\n    d.cldr_mnth_end_dt as month_end, \n    d.month_name as month_name,\n    cldr_qtr as qutr_number,\n    d.cldr_qtr_strt_dt as quarter_start,\n    d.cldr_qtr_end_dt as quarter_end,\n    d.year as year,\n    d.cldr_year_start_dt as year_start,\n    d.cldr_qtr_end_dt as year_end,\n    'HS_TESTUSER_09012021' as Source_type,\n    'D_TIMEFRAME_DIM_LOAD' AS DW_SESSION_NM,\n    \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS     \nfrom\n    dates d\n order by 2)\n\n\n\n\n"}, "error": null, "status": "SUCCESS 1", "execution_time": 3.4176838397979736, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:02.569656Z", "completed_at": "2021-02-10T18:05:03.405212Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:03.405736Z", "completed_at": "2021-02-10T18:05:05.845575Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'Account_ID'\r\n      )\r\n}}\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Account') }}\r\n  ),\r\nDIM_ACCOUNT as (\r\n      select\r\n        Account_ID,\r\n        NAME AS Account_Name,\r\n        TYPE AS Account_Type,\r\n        Source_ID,\r\n        IS_DELETED AS Active_Flag,\r\n        --ACCOUNT_NUMBER AS ACCOUNT_NUMBER,\r\n        INDUSTRY AS INDUSTRY,\r\n        ANNUAL_REVENUE AS ANNUAL_REVENUE,\r\n        OWNER_ID AS Employee_ID,\r\n        CREATED_DATE as INITIAL_CREATE_DT,\r\n        Source_type,\r\n        'D_ACCOUNT_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_ACCOUNT", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Account"], "unique_id": "model.sales_dataflo.Dim_Account", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Account.sql", "original_file_path": "ETL/Target/Tables/Dim_Account.sql", "name": "Dim_Account", "resource_type": "model", "alias": "Dim_Account", "checksum": {"name": "sha256", "checksum": "7c34ca5f6f7713c264cfee30efdc1b89c296c8fc3789aaad545248aadf7fca88"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "Account_ID"}, "tags": [], "refs": [["Stg_Account"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_Account"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Account.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Account\n  ),\nDIM_ACCOUNT as (\n      select\n        Account_ID,\n        NAME AS Account_Name,\n        TYPE AS Account_Type,\n        Source_ID,\n        IS_DELETED AS Active_Flag,\n        --ACCOUNT_NUMBER AS ACCOUNT_NUMBER,\n        INDUSTRY AS INDUSTRY,\n        ANNUAL_REVENUE AS ANNUAL_REVENUE,\n        OWNER_ID AS Employee_ID,\n        CREATED_DATE as INITIAL_CREATE_DT,\n        Source_type,\n        'D_ACCOUNT_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_ACCOUNT", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Account\n  ),\nDIM_ACCOUNT as (\n      select\n        Account_ID,\n        NAME AS Account_Name,\n        TYPE AS Account_Type,\n        Source_ID,\n        IS_DELETED AS Active_Flag,\n        --ACCOUNT_NUMBER AS ACCOUNT_NUMBER,\n        INDUSTRY AS INDUSTRY,\n        ANNUAL_REVENUE AS ANNUAL_REVENUE,\n        OWNER_ID AS Employee_ID,\n        CREATED_DATE as INITIAL_CREATE_DT,\n        Source_type,\n        'D_ACCOUNT_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_ACCOUNT"}, "error": null, "status": "SUCCESS 16247", "execution_time": 3.206303596496582, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:05.991485Z", "completed_at": "2021-02-10T18:05:06.026007Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:06.026383Z", "completed_at": "2021-02-10T18:05:09.107462Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'Campaign_ID'\r\n      )\r\n}}\r\n\r\nWITH source AS (\r\n    select * from {{ ref('Stg_Campaign') }} \r\n    ),\r\nDim_Campaign as (\r\n\r\n      SELECT\r\n        NULL AS Account_ID,\r\n        Campaign_ID,\r\n        OWNER_ID as Campaign_OWNER_ID,\r\n        NAME AS Campaign_Name,\r\n        IS_ACTIVE AS active_flag,\r\n        Source_ID,\r\n        TYPE AS TYPE,\r\n        STATUS AS STATUS,\r\n        START_DATE AS START_DATE,\r\n        END_DATE AS END_DATE,\r\n        EXPECTED_REVENUE AS EXPECTED_REVENUE,\r\n        BUDGETED_COST AS BUDGETED_COST,\r\n        ACTUAL_COST AS ACTUAL_COST,\r\n        EXPECTED_RESPONSE AS EXPECTED_RESPONSE,\r\n        NUMBER_SENT AS NUMBER_SENT,\r\n        NUMBER_OF_LEADS AS NUMBER_OF_LEADS,\r\n        NUMBER_OF_CONVERTED_LEADS AS NUMBER_OF_CONVERTED_LEADS,\r\n        NUMBER_OF_CONTACTS AS NUMBER_OF_CONTACTS,\r\n        NUMBER_OF_RESPONSES AS NUMBER_OF_RESPONSES,\r\n        NUMBER_OF_OPPORTUNITIES AS NUMBER_OF_OPPORTUNITIES,\r\n        NUMBER_OF_WON_OPPORTUNITIES AS NUMBER_OF_WON_OPPORTUNITIES,\r\n        AMOUNT_ALL_OPPORTUNITIES AS AMOUNT_ALL_OPPORTUNITIES,\r\n        AMOUNT_WON_OPPORTUNITIES AS AMOUNT_WON_OPPORTUNITIES,\r\n        Source_type,\r\n        'D_CAMPAIGN_DIM_LOAD'  AS \tDW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n     FROM\r\n        source     \r\n      )\r\n\r\n  select * from  Dim_Campaign", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Campaign"], "unique_id": "model.sales_dataflo.Dim_Campaign", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Campaign.sql", "original_file_path": "ETL/Target/Tables/Dim_Campaign.sql", "name": "Dim_Campaign", "resource_type": "model", "alias": "Dim_Campaign", "checksum": {"name": "sha256", "checksum": "aa68395e19d3a4312b6c094d3743c9afa93d9c48a9b8bdbbccb7c44c2b49a1a9"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "Campaign_ID"}, "tags": [], "refs": [["Stg_Campaign"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_Campaign"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Campaign.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS (\n    select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Campaign \n    ),\nDim_Campaign as (\n\n      SELECT\n        NULL AS Account_ID,\n        Campaign_ID,\n        OWNER_ID as Campaign_OWNER_ID,\n        NAME AS Campaign_Name,\n        IS_ACTIVE AS active_flag,\n        Source_ID,\n        TYPE AS TYPE,\n        STATUS AS STATUS,\n        START_DATE AS START_DATE,\n        END_DATE AS END_DATE,\n        EXPECTED_REVENUE AS EXPECTED_REVENUE,\n        BUDGETED_COST AS BUDGETED_COST,\n        ACTUAL_COST AS ACTUAL_COST,\n        EXPECTED_RESPONSE AS EXPECTED_RESPONSE,\n        NUMBER_SENT AS NUMBER_SENT,\n        NUMBER_OF_LEADS AS NUMBER_OF_LEADS,\n        NUMBER_OF_CONVERTED_LEADS AS NUMBER_OF_CONVERTED_LEADS,\n        NUMBER_OF_CONTACTS AS NUMBER_OF_CONTACTS,\n        NUMBER_OF_RESPONSES AS NUMBER_OF_RESPONSES,\n        NUMBER_OF_OPPORTUNITIES AS NUMBER_OF_OPPORTUNITIES,\n        NUMBER_OF_WON_OPPORTUNITIES AS NUMBER_OF_WON_OPPORTUNITIES,\n        AMOUNT_ALL_OPPORTUNITIES AS AMOUNT_ALL_OPPORTUNITIES,\n        AMOUNT_WON_OPPORTUNITIES AS AMOUNT_WON_OPPORTUNITIES,\n        Source_type,\n        'D_CAMPAIGN_DIM_LOAD'  AS \tDW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n     FROM\n        source     \n      )\n\n  select * from  Dim_Campaign", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS (\n    select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Campaign \n    ),\nDim_Campaign as (\n\n      SELECT\n        NULL AS Account_ID,\n        Campaign_ID,\n        OWNER_ID as Campaign_OWNER_ID,\n        NAME AS Campaign_Name,\n        IS_ACTIVE AS active_flag,\n        Source_ID,\n        TYPE AS TYPE,\n        STATUS AS STATUS,\n        START_DATE AS START_DATE,\n        END_DATE AS END_DATE,\n        EXPECTED_REVENUE AS EXPECTED_REVENUE,\n        BUDGETED_COST AS BUDGETED_COST,\n        ACTUAL_COST AS ACTUAL_COST,\n        EXPECTED_RESPONSE AS EXPECTED_RESPONSE,\n        NUMBER_SENT AS NUMBER_SENT,\n        NUMBER_OF_LEADS AS NUMBER_OF_LEADS,\n        NUMBER_OF_CONVERTED_LEADS AS NUMBER_OF_CONVERTED_LEADS,\n        NUMBER_OF_CONTACTS AS NUMBER_OF_CONTACTS,\n        NUMBER_OF_RESPONSES AS NUMBER_OF_RESPONSES,\n        NUMBER_OF_OPPORTUNITIES AS NUMBER_OF_OPPORTUNITIES,\n        NUMBER_OF_WON_OPPORTUNITIES AS NUMBER_OF_WON_OPPORTUNITIES,\n        AMOUNT_ALL_OPPORTUNITIES AS AMOUNT_ALL_OPPORTUNITIES,\n        AMOUNT_WON_OPPORTUNITIES AS AMOUNT_WON_OPPORTUNITIES,\n        Source_type,\n        'D_CAMPAIGN_DIM_LOAD'  AS \tDW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n     FROM\n        source     \n      )\n\n  select * from  Dim_Campaign"}, "error": null, "status": "SUCCESS 1274", "execution_time": 4.073388576507568, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:09.200285Z", "completed_at": "2021-02-10T18:05:09.229245Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:09.229587Z", "completed_at": "2021-02-10T18:05:13.005911Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Channel_Traffic') }}\r\n  ),\r\nDIM_CHANNEL_TRAFFIC as (\r\n      select\r\n        ID,\r\n        DATE,\r\n        PROFILE,\r\n        CHANNEL_GROUPING,\r\n        GOAL_VALUE_ALL,\r\n        NEW_USERS,\r\n        SESSIONS,\r\n        AVG_SESSION_DURATION,\r\n        GOAL_COMPLETIONS_ALL,\r\n        PAGEVIEWS_PER_SESSION,\r\n        GOAL_CONVERSION_RATE_ALL,\r\n        USERS,\r\n        BOUNCE_RATE,\r\n        PERCENT_NEW_SESSIONS,\r\n        Source_type,\r\n        'D_CHANNEL_TRAFFIC_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_CHANNEL_TRAFFIC", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Channel_Traffic"], "unique_id": "model.sales_dataflo.Dim_Channel_Traffic", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Channel_Traffic.sql", "original_file_path": "ETL/Target/Tables/Dim_Channel_Traffic.sql", "name": "Dim_Channel_Traffic", "resource_type": "model", "alias": "Dim_Channel_Traffic", "checksum": {"name": "sha256", "checksum": "68e9d6dd835ed002ff3f4522838619023f30d1d214c613bfaa48b6b39e6fa9d0"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Stg_Channel_Traffic"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Channel_Traffic"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Channel_Traffic.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Channel_Traffic\n  ),\nDIM_CHANNEL_TRAFFIC as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        CHANNEL_GROUPING,\n        GOAL_VALUE_ALL,\n        NEW_USERS,\n        SESSIONS,\n        AVG_SESSION_DURATION,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        PERCENT_NEW_SESSIONS,\n        Source_type,\n        'D_CHANNEL_TRAFFIC_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_CHANNEL_TRAFFIC", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Channel_Traffic\n  ),\nDIM_CHANNEL_TRAFFIC as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        CHANNEL_GROUPING,\n        GOAL_VALUE_ALL,\n        NEW_USERS,\n        SESSIONS,\n        AVG_SESSION_DURATION,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        PERCENT_NEW_SESSIONS,\n        Source_type,\n        'D_CHANNEL_TRAFFIC_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_CHANNEL_TRAFFIC"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.108978033065796, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:13.276566Z", "completed_at": "2021-02-10T18:05:13.307554Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:13.308112Z", "completed_at": "2021-02-10T18:05:14.297268Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Events_Overview') }}\r\n  ),\r\nDIM_EVENTS_OVERVIEW as (\r\n      select\r\n        ID,\r\n        DATE,\r\n        PROFILE,\r\n        EVENT_CATEGORY,\r\n        EVENT_VALUE,\r\n        TOTAL_EVENTS,\r\n        SESSIONS_WITH_EVENT,\r\n        EVENTS_PER_SESSION_WITH_EVENT,\r\n        AVG_EVENT_VALUE,\r\n        UNIQUE_EVENTS,\r\n        Source_type,\r\n        'D_EVENTS_OVERVIEW_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_EVENTS_OVERVIEW", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Events_Overview"], "unique_id": "model.sales_dataflo.Dim_Events_Overview", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Events_Overview.sql", "original_file_path": "ETL/Target/Tables/Dim_Events_Overview.sql", "name": "Dim_Events_Overview", "resource_type": "model", "alias": "Dim_Events_Overview", "checksum": {"name": "sha256", "checksum": "ef6ce5a271ebe61e0fb87e3e88e45828eec90a37ad2af9df292c8cf20299048f"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Stg_Events_Overview"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Events_Overview"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Events_Overview.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Events_Overview\n  ),\nDIM_EVENTS_OVERVIEW as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        EVENT_CATEGORY,\n        EVENT_VALUE,\n        TOTAL_EVENTS,\n        SESSIONS_WITH_EVENT,\n        EVENTS_PER_SESSION_WITH_EVENT,\n        AVG_EVENT_VALUE,\n        UNIQUE_EVENTS,\n        Source_type,\n        'D_EVENTS_OVERVIEW_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_EVENTS_OVERVIEW", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Events_Overview\n  ),\nDIM_EVENTS_OVERVIEW as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        EVENT_CATEGORY,\n        EVENT_VALUE,\n        TOTAL_EVENTS,\n        SESSIONS_WITH_EVENT,\n        EVENTS_PER_SESSION_WITH_EVENT,\n        AVG_EVENT_VALUE,\n        UNIQUE_EVENTS,\n        Source_type,\n        'D_EVENTS_OVERVIEW_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_EVENTS_OVERVIEW"}, "error": null, "status": "SUCCESS 1", "execution_time": 0.8609957695007324, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:14.389772Z", "completed_at": "2021-02-10T18:05:14.421794Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:14.422251Z", "completed_at": "2021-02-10T18:05:15.179462Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Goal_Conversions') }}\r\n  ),\r\nDIM_GOAL_CONVERSIONS as (\r\n      select\r\n        ID,\r\n        DATE,\r\n        PROFILE,\r\n        GOAL_COMPLETION_LOCATION,\r\n        GOAL_PREVIOUS_STEP_1,\r\n        GOAL_PREVIOUS_STEP_2,\r\n        GOAL_PREVIOUS_STEP_3,\r\n        GOAL_VALUE_ALL,\r\n        GOAL_COMPLETIONS_ALL,\r\n        GOAL_STARTS_ALL,\r\n        GOAL_CONVERSION_RATE_ALL,\r\n        GOAL_ABANDON_RATE_ALL,\r\n        GOAL_ABANDONS_ALL,\r\n        GOAL_VALUE_PER_SESSION,\r\n        Source_type,\r\n        'D_GOAL_CONVERSIONS_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_GOAL_CONVERSIONS", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Goal_Conversions"], "unique_id": "model.sales_dataflo.Dim_Goal_Conversions", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Goal_Conversions.sql", "original_file_path": "ETL/Target/Tables/Dim_Goal_Conversions.sql", "name": "Dim_Goal_Conversions", "resource_type": "model", "alias": "Dim_Goal_Conversions", "checksum": {"name": "sha256", "checksum": "34a7968b34805398fe742fa8b93d02ddbf8c2c430d88b90fb717bc4a8c6bff2d"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Stg_Goal_Conversions"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Goal_Conversions"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Goal_Conversions.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Goal_Conversions\n  ),\nDIM_GOAL_CONVERSIONS as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        GOAL_COMPLETION_LOCATION,\n        GOAL_PREVIOUS_STEP_1,\n        GOAL_PREVIOUS_STEP_2,\n        GOAL_PREVIOUS_STEP_3,\n        GOAL_VALUE_ALL,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_STARTS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        GOAL_ABANDON_RATE_ALL,\n        GOAL_ABANDONS_ALL,\n        GOAL_VALUE_PER_SESSION,\n        Source_type,\n        'D_GOAL_CONVERSIONS_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_GOAL_CONVERSIONS", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Goal_Conversions\n  ),\nDIM_GOAL_CONVERSIONS as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        GOAL_COMPLETION_LOCATION,\n        GOAL_PREVIOUS_STEP_1,\n        GOAL_PREVIOUS_STEP_2,\n        GOAL_PREVIOUS_STEP_3,\n        GOAL_VALUE_ALL,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_STARTS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        GOAL_ABANDON_RATE_ALL,\n        GOAL_ABANDONS_ALL,\n        GOAL_VALUE_PER_SESSION,\n        Source_type,\n        'D_GOAL_CONVERSIONS_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_GOAL_CONVERSIONS"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.0404155254364014, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:15.253355Z", "completed_at": "2021-02-10T18:05:15.281895Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:15.282314Z", "completed_at": "2021-02-10T18:05:16.178030Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Page_Tracking') }}\r\n  ),\r\nDIM_PAGE_TRACKING as (\r\n      select\r\n        ID,\r\n        DATE,\r\n        PROFILE,\r\n        PAGE_TITLE,\r\n        LANDING_PAGE_PATH,\r\n        PAGE_PATH,\r\n        EXIT_PAGE_PATH,\r\n        PAGE_VALUE,\r\n        EXIT_RATE,\r\n        TIME_ON_PAGE,\r\n        PAGEVIEWS_PER_SESSION,\r\n        UNIQUE_PAGEVIEWS,\r\n        ENTRANCE_RATE,\r\n        Source_type,\r\n        'D_PAGE_TRACKING_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_PAGE_TRACKING", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Page_Tracking"], "unique_id": "model.sales_dataflo.Dim_Page_Tracking", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Page_Tracking.sql", "original_file_path": "ETL/Target/Tables/Dim_Page_Tracking.sql", "name": "Dim_Page_Tracking", "resource_type": "model", "alias": "Dim_Page_Tracking", "checksum": {"name": "sha256", "checksum": "72494e0e1a38c6c9c30839ec8d3d485cf68b7dc34d8a8d84a3ac86b47ef7b944"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Stg_Page_Tracking"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Page_Tracking"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Page_Tracking.sql", "deferred": false, "compiled_sql": "\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Page_Tracking\n  ),\nDIM_PAGE_TRACKING as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        PAGE_TITLE,\n        LANDING_PAGE_PATH,\n        PAGE_PATH,\n        EXIT_PAGE_PATH,\n        PAGE_VALUE,\n        EXIT_RATE,\n        TIME_ON_PAGE,\n        PAGEVIEWS_PER_SESSION,\n        UNIQUE_PAGEVIEWS,\n        ENTRANCE_RATE,\n        Source_type,\n        'D_PAGE_TRACKING_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_PAGE_TRACKING", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Page_Tracking\n  ),\nDIM_PAGE_TRACKING as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        PAGE_TITLE,\n        LANDING_PAGE_PATH,\n        PAGE_PATH,\n        EXIT_PAGE_PATH,\n        PAGE_VALUE,\n        EXIT_RATE,\n        TIME_ON_PAGE,\n        PAGEVIEWS_PER_SESSION,\n        UNIQUE_PAGEVIEWS,\n        ENTRANCE_RATE,\n        Source_type,\n        'D_PAGE_TRACKING_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_PAGE_TRACKING"}, "error": null, "status": "SUCCESS 1", "execution_time": 0.8983497619628906, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:16.297996Z", "completed_at": "2021-02-10T18:05:16.331102Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:16.331501Z", "completed_at": "2021-02-10T18:05:17.129873Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Social_Media_Acquisitions') }}\r\n  ),\r\nDIM_SOCIAL_MEDIA_ACQUISITIONS as (\r\n      select\r\n        ID,\r\n        DATE,\r\n        PROFILE,\r\n        SOCIAL_NETWORK,\r\n        SESSIONS,\r\n        NEW_USERS,\r\n        AVG_SESSION_DURATION,\r\n        TRANSACTION_REVENUE,\r\n        PAGEVIEWS_PER_SESSION,\r\n        TRANSACTIONS,\r\n        BOUNCE_RATE,\r\n        PAGEVIEWS,\r\n        PERCENT_NEW_SESSIONS,\r\n        TRANSACTIONS_PER_SESSION,\r\n        Source_type,\r\n        'D_SOCIAL_MEDIA_ACQUISITIONS_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_SOCIAL_MEDIA_ACQUISITIONS", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Social_Media_Acquisitions"], "unique_id": "model.sales_dataflo.Dim_Social_Media_Acquisitions", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Social_Media_Acquisitions.sql", "original_file_path": "ETL/Target/Tables/Dim_Social_Media_Acquisitions.sql", "name": "Dim_Social_Media_Acquisitions", "resource_type": "model", "alias": "Dim_Social_Media_Acquisitions", "checksum": {"name": "sha256", "checksum": "718aa677ee941de2e336909b2196e526146bf75e9e722d213971c09f5a11d07a"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Stg_Social_Media_Acquisitions"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Social_Media_Acquisitions"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Social_Media_Acquisitions.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Social_Media_Acquisitions\n  ),\nDIM_SOCIAL_MEDIA_ACQUISITIONS as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        SOCIAL_NETWORK,\n        SESSIONS,\n        NEW_USERS,\n        AVG_SESSION_DURATION,\n        TRANSACTION_REVENUE,\n        PAGEVIEWS_PER_SESSION,\n        TRANSACTIONS,\n        BOUNCE_RATE,\n        PAGEVIEWS,\n        PERCENT_NEW_SESSIONS,\n        TRANSACTIONS_PER_SESSION,\n        Source_type,\n        'D_SOCIAL_MEDIA_ACQUISITIONS_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_SOCIAL_MEDIA_ACQUISITIONS", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Social_Media_Acquisitions\n  ),\nDIM_SOCIAL_MEDIA_ACQUISITIONS as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        SOCIAL_NETWORK,\n        SESSIONS,\n        NEW_USERS,\n        AVG_SESSION_DURATION,\n        TRANSACTION_REVENUE,\n        PAGEVIEWS_PER_SESSION,\n        TRANSACTIONS,\n        BOUNCE_RATE,\n        PAGEVIEWS,\n        PERCENT_NEW_SESSIONS,\n        TRANSACTIONS_PER_SESSION,\n        Source_type,\n        'D_SOCIAL_MEDIA_ACQUISITIONS_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_SOCIAL_MEDIA_ACQUISITIONS"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.154853105545044, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:17.199368Z", "completed_at": "2021-02-10T18:05:17.226201Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:17.226558Z", "completed_at": "2021-02-10T18:05:18.263328Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Adwords_Keyword') }}\r\n  ),\r\nDIM_ADWORDS_KEYWORD as (\r\n      select\r\n        ID,\r\n        DATE,\r\n        PROFILE,\r\n        KEYWORD,\r\n        GOAL_VALUE_ALL,\r\n        SESSIONS,\r\n        GOAL_COMPLETIONS_ALL,\r\n        PAGEVIEWS_PER_SESSION,\r\n        GOAL_CONVERSION_RATE_ALL,\r\n        USERS,\r\n        BOUNCE_RATE,\r\n        AD_CLICKS,\r\n        AD_COST,\r\n        CPC,\r\n        Source_type,\r\n        'D_ADWORDS_KEYWORD_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_ADWORDS_KEYWORD", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Adwords_Keyword"], "unique_id": "model.sales_dataflo.Dim_Adwords_Keyword", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Adwords_Keyword.sql", "original_file_path": "ETL/Target/Tables/Dim_Adwords_Keyword.sql", "name": "Dim_Adwords_Keyword", "resource_type": "model", "alias": "Dim_Adwords_Keyword", "checksum": {"name": "sha256", "checksum": "83ac8b85fb16292783c22d289c5ac8ce7977bb1b837f1f5f1caf514fe511488b"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Stg_Adwords_Keyword"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Adwords_Keyword"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Adwords_Keyword.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Adwords_Keyword\n  ),\nDIM_ADWORDS_KEYWORD as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        KEYWORD,\n        GOAL_VALUE_ALL,\n        SESSIONS,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        AD_CLICKS,\n        AD_COST,\n        CPC,\n        Source_type,\n        'D_ADWORDS_KEYWORD_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_ADWORDS_KEYWORD", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Adwords_Keyword\n  ),\nDIM_ADWORDS_KEYWORD as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        KEYWORD,\n        GOAL_VALUE_ALL,\n        SESSIONS,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        AD_CLICKS,\n        AD_COST,\n        CPC,\n        Source_type,\n        'D_ADWORDS_KEYWORD_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_ADWORDS_KEYWORD"}, "error": null, "status": "SUCCESS 1", "execution_time": 0.9511301517486572, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:18.356736Z", "completed_at": "2021-02-10T18:05:18.385492Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:18.385897Z", "completed_at": "2021-02-10T18:05:19.228967Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Geo_Network') }}\r\n  ),\r\nDIM_GEO_NETWORK as (\r\n      select\r\n        ID,\r\n        DATE,\r\n        PROFILE,\r\n        CONTINENT,\r\n        COUNTRY,\r\n        CITY,\r\n        METRO,\r\n        REGION,\r\n        NETWORK_LOCATION,\r\n        SESSIONS,\r\n        USERS,\r\n        Source_type,\r\n        'D_GEO_NETWORK_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_GEO_NETWORK", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Geo_Network"], "unique_id": "model.sales_dataflo.Dim_Geo_Network", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Geo_Network.sql", "original_file_path": "ETL/Target/Tables/Dim_Geo_Network.sql", "name": "Dim_Geo_Network", "resource_type": "model", "alias": "Dim_Geo_Network", "checksum": {"name": "sha256", "checksum": "9693117d1e0839c6b657813cb489603c22df7c53b50a88985e62651f5395ad17"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Stg_Geo_Network"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Geo_Network"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Geo_Network.sql", "deferred": false, "compiled_sql": "\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Geo_Network\n  ),\nDIM_GEO_NETWORK as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        CONTINENT,\n        COUNTRY,\n        CITY,\n        METRO,\n        REGION,\n        NETWORK_LOCATION,\n        SESSIONS,\n        USERS,\n        Source_type,\n        'D_GEO_NETWORK_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_GEO_NETWORK", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Geo_Network\n  ),\nDIM_GEO_NETWORK as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        CONTINENT,\n        COUNTRY,\n        CITY,\n        METRO,\n        REGION,\n        NETWORK_LOCATION,\n        SESSIONS,\n        USERS,\n        Source_type,\n        'D_GEO_NETWORK_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_GEO_NETWORK"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.0719423294067383, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:19.310411Z", "completed_at": "2021-02-10T18:05:19.341054Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:19.341471Z", "completed_at": "2021-02-10T18:05:20.299109Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Platform_Device') }}\r\n  ),\r\nDIM_PLATFORM_DEVICE as (\r\n      select\r\n        ID,\r\n        DATE,\r\n        PROFILE,\r\n        MOBILE_DEVICE_BRANDING,\r\n        DEVICE_CATEGORY,\r\n        MOBILE_DEVICE_MODEL,\r\n        MOBILE_INPUT_SELECTOR,\r\n        OPERATING_SYSTEM,\r\n        DATA_SOURCE,\r\n        GOAL_VALUE_ALL,\r\n        GOAL_COMPLETIONS_ALL,\r\n        GOAL_STARTS_ALL,\r\n        GOAL_CONVERSION_RATE_ALL,\r\n        GOAL_ABANDONS_ALL,\r\n        GOAL_VALUE_PER_SESSION,\r\n        Source_type,\r\n        'D_PLATFORM_DEVICE_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_PLATFORM_DEVICE", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Platform_Device"], "unique_id": "model.sales_dataflo.Dim_Platform_Device", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Platform_Device.sql", "original_file_path": "ETL/Target/Tables/Dim_Platform_Device.sql", "name": "Dim_Platform_Device", "resource_type": "model", "alias": "Dim_Platform_Device", "checksum": {"name": "sha256", "checksum": "ff936b12f7d0b28d544ee64863389287772f889373468a98fdc49ce452e4be2c"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Stg_Platform_Device"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Platform_Device"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Platform_Device.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Platform_Device\n  ),\nDIM_PLATFORM_DEVICE as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        MOBILE_DEVICE_BRANDING,\n        DEVICE_CATEGORY,\n        MOBILE_DEVICE_MODEL,\n        MOBILE_INPUT_SELECTOR,\n        OPERATING_SYSTEM,\n        DATA_SOURCE,\n        GOAL_VALUE_ALL,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_STARTS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        GOAL_ABANDONS_ALL,\n        GOAL_VALUE_PER_SESSION,\n        Source_type,\n        'D_PLATFORM_DEVICE_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_PLATFORM_DEVICE", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Platform_Device\n  ),\nDIM_PLATFORM_DEVICE as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        MOBILE_DEVICE_BRANDING,\n        DEVICE_CATEGORY,\n        MOBILE_DEVICE_MODEL,\n        MOBILE_INPUT_SELECTOR,\n        OPERATING_SYSTEM,\n        DATA_SOURCE,\n        GOAL_VALUE_ALL,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_STARTS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        GOAL_ABANDONS_ALL,\n        GOAL_VALUE_PER_SESSION,\n        Source_type,\n        'D_PLATFORM_DEVICE_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_PLATFORM_DEVICE"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.4606778621673584, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:20.385607Z", "completed_at": "2021-02-10T18:05:20.421511Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:20.421972Z", "completed_at": "2021-02-10T18:05:21.778157Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Session') }}\r\n  ),\r\nDIM_SOCIAL_MEDIA_ACQUISITIONS as (\r\n      select\r\n        ID,\r\n        DATE,\r\n        PROFILE,\r\n        SESSION_DURATION_BUCKET,\r\n        USER_TYPE,\r\n        HITS,\r\n        SESSIONS,\r\n        SESSIONS_PER_USER,\r\n        AVG_SESSION_DURATION,\r\n        BOUNCES,\r\n        SESSION_DURATION,\r\n        BOUNCE_RATE,\r\n        Source_type,\r\n        'D_SOCIAL_MEDIA_ACQUISITIONS_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_SOCIAL_MEDIA_ACQUISITIONS", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Session"], "unique_id": "model.sales_dataflo.Dim_Session", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Session.sql", "original_file_path": "ETL/Target/Tables/Dim_Session.sql", "name": "Dim_Session", "resource_type": "model", "alias": "Dim_Session", "checksum": {"name": "sha256", "checksum": "477ee6e61aebd81b4c4c72347545a00e8eef0f36f447cee00111720b231011e6"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Stg_Session"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Session"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Session.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Session\n  ),\nDIM_SOCIAL_MEDIA_ACQUISITIONS as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        SESSION_DURATION_BUCKET,\n        USER_TYPE,\n        HITS,\n        SESSIONS,\n        SESSIONS_PER_USER,\n        AVG_SESSION_DURATION,\n        BOUNCES,\n        SESSION_DURATION,\n        BOUNCE_RATE,\n        Source_type,\n        'D_SOCIAL_MEDIA_ACQUISITIONS_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_SOCIAL_MEDIA_ACQUISITIONS", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Session\n  ),\nDIM_SOCIAL_MEDIA_ACQUISITIONS as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        SESSION_DURATION_BUCKET,\n        USER_TYPE,\n        HITS,\n        SESSIONS,\n        SESSIONS_PER_USER,\n        AVG_SESSION_DURATION,\n        BOUNCES,\n        SESSION_DURATION,\n        BOUNCE_RATE,\n        Source_type,\n        'D_SOCIAL_MEDIA_ACQUISITIONS_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_SOCIAL_MEDIA_ACQUISITIONS"}, "error": null, "status": "SUCCESS 1", "execution_time": 0.8006463050842285, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:21.850653Z", "completed_at": "2021-02-10T18:05:21.889421Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:21.889791Z", "completed_at": "2021-02-10T18:05:22.576514Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Traffic') }}\r\n  ),\r\nDIM_TRAFFIC as (\r\n      select\r\n        ID,\r\n        DATE,\r\n        PROFILE,\r\n        PAGE_TITLE,\r\n        PAGEVIEWS,\r\n        AVG_TIME_ON_PAGE,\r\n        PAGE_VALUE,\r\n        UNIQUE_PAGEVIEWS,\r\n        EXIT_RATE,\r\n        ENTRANCES,\r\n        USERS,\r\n        BOUNCE_RATE, \r\n        Source_type,\r\n        'D_TRAFFIC_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_TRAFFIC", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Traffic"], "unique_id": "model.sales_dataflo.Dim_Traffic", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Traffic.sql", "original_file_path": "ETL/Target/Tables/Dim_Traffic.sql", "name": "Dim_Traffic", "resource_type": "model", "alias": "Dim_Traffic", "checksum": {"name": "sha256", "checksum": "f607dde57376454397edbb8065b68e2104cbb6bfbf05cf9649229cc81fbc780f"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Stg_Traffic"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Traffic"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Traffic.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Traffic\n  ),\nDIM_TRAFFIC as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        PAGE_TITLE,\n        PAGEVIEWS,\n        AVG_TIME_ON_PAGE,\n        PAGE_VALUE,\n        UNIQUE_PAGEVIEWS,\n        EXIT_RATE,\n        ENTRANCES,\n        USERS,\n        BOUNCE_RATE, \n        Source_type,\n        'D_TRAFFIC_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_TRAFFIC", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Traffic\n  ),\nDIM_TRAFFIC as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        PAGE_TITLE,\n        PAGEVIEWS,\n        AVG_TIME_ON_PAGE,\n        PAGE_VALUE,\n        UNIQUE_PAGEVIEWS,\n        EXIT_RATE,\n        ENTRANCES,\n        USERS,\n        BOUNCE_RATE, \n        Source_type,\n        'D_TRAFFIC_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_TRAFFIC"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.0309078693389893, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:22.655370Z", "completed_at": "2021-02-10T18:05:22.693295Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:22.693872Z", "completed_at": "2021-02-10T18:05:23.616580Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('Dim_Contact') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Views", "VW_Contact"], "unique_id": "model.sales_dataflo.VW_Contact", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Views/VW_Contact.sql", "original_file_path": "ETL/Target/Views/VW_Contact.sql", "name": "VW_Contact", "resource_type": "model", "alias": "VW_Contact", "checksum": {"name": "sha256", "checksum": "1c1f291bdb70ca35558ad27cde87581411af1580e9bf14144b75de2fd8954bb3"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Dim_Contact"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Dim_Contact"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Views/VW_Contact.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Contact", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Contact"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.0584015846252441, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:23.690439Z", "completed_at": "2021-02-10T18:05:23.723416Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:23.723980Z", "completed_at": "2021-02-10T18:05:24.665062Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('Dim_Address') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Views", "VW_Address"], "unique_id": "model.sales_dataflo.VW_Address", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Views/VW_Address.sql", "original_file_path": "ETL/Target/Views/VW_Address.sql", "name": "VW_Address", "resource_type": "model", "alias": "VW_Address", "checksum": {"name": "sha256", "checksum": "f0ebbb7edc50e98cad8153165e55fcdbbde9568c33a7923946d19c6559f0f298"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Dim_Address"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Dim_Address"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Views/VW_Address.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Address", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Address"}, "error": null, "status": "SUCCESS 1", "execution_time": 0.8803348541259766, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:24.751761Z", "completed_at": "2021-02-10T18:05:24.780565Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:24.781129Z", "completed_at": "2021-02-10T18:05:25.548518Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('Dim_Opportunity_Stage') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Views", "VW_Opportunity_Stage"], "unique_id": "model.sales_dataflo.VW_Opportunity_Stage", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Views/VW_Opportunity_Stage.sql", "original_file_path": "ETL/Target/Views/VW_Opportunity_Stage.sql", "name": "VW_Opportunity_Stage", "resource_type": "model", "alias": "VW_Opportunity_Stage", "checksum": {"name": "sha256", "checksum": "9a5f130aa5caca211e8f5d343234cb9c22dba59a9f534ac607e850f61aec7c18"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Dim_Opportunity_Stage"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Dim_Opportunity_Stage"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Views/VW_Opportunity_Stage.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity_Stage", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity_Stage"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.6193783283233643, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:25.636373Z", "completed_at": "2021-02-10T18:05:25.666006Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:25.666408Z", "completed_at": "2021-02-10T18:05:27.186780Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(\r\n    materialized=\"table\"\r\n) \r\n}}\r\n\r\n select entity_id,\r\n CONNECT_BY_ROOT source_Emp_id \"Manager\",\r\n CONNECT_BY_ROOT emp_full_nm \"Manager_Name\",\r\n LEVEL as hierarchy_level,\r\n source_Emp_id as employee_id,\r\n emp_full_nm as employee_Name,\r\n mngr_emp_id as Manager_id,\r\n emp_role_id ,\r\n emp_position_level,\r\n SYS_CONNECT_BY_PATH(emp_full_nm, '/') \"Hierarachy\"\r\n from  {{ ref('Dim_Employee') }}  \r\n START WITH mngr_emp_id is null\r\n CONNECT BY PRIOR employee_id = mngr_emp_id", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Employee_Hier"], "unique_id": "model.sales_dataflo.Dim_Employee_Hier", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Employee_Hier.sql", "original_file_path": "ETL/Target/Tables/Dim_Employee_Hier.sql", "name": "Dim_Employee_Hier", "resource_type": "model", "alias": "Dim_Employee_Hier", "checksum": {"name": "sha256", "checksum": "276e4444771eb4a208d224fec122a43e8fe284bd31789ccded08ae844426129f"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Dim_Employee"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Dim_Employee"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Employee_Hier.sql", "deferred": false, "compiled_sql": "\n\n select entity_id,\n CONNECT_BY_ROOT source_Emp_id \"Manager\",\n CONNECT_BY_ROOT emp_full_nm \"Manager_Name\",\n LEVEL as hierarchy_level,\n source_Emp_id as employee_id,\n emp_full_nm as employee_Name,\n mngr_emp_id as Manager_id,\n emp_role_id ,\n emp_position_level,\n SYS_CONNECT_BY_PATH(emp_full_nm, '/') \"Hierarachy\"\n from  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n START WITH mngr_emp_id is null\n CONNECT BY PRIOR employee_id = mngr_emp_id", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n select entity_id,\n CONNECT_BY_ROOT source_Emp_id \"Manager\",\n CONNECT_BY_ROOT emp_full_nm \"Manager_Name\",\n LEVEL as hierarchy_level,\n source_Emp_id as employee_id,\n emp_full_nm as employee_Name,\n mngr_emp_id as Manager_id,\n emp_role_id ,\n emp_position_level,\n SYS_CONNECT_BY_PATH(emp_full_nm, '/') \"Hierarachy\"\n from  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n START WITH mngr_emp_id is null\n CONNECT BY PRIOR employee_id = mngr_emp_id"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.181898832321167, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:27.258244Z", "completed_at": "2021-02-10T18:05:27.285615Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:27.286029Z", "completed_at": "2021-02-10T18:05:29.351766Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('Dim_Employee') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Views", "VW_Employee"], "unique_id": "model.sales_dataflo.VW_Employee", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Views/VW_Employee.sql", "original_file_path": "ETL/Target/Views/VW_Employee.sql", "name": "VW_Employee", "resource_type": "model", "alias": "VW_Employee", "checksum": {"name": "sha256", "checksum": "d3ce3a49096034105f23527148f02ffb69aed09f23971d3eb6ab61d7b0e82c23"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Dim_Employee"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Dim_Employee"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Views/VW_Employee.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee"}, "error": null, "status": "SUCCESS 1", "execution_time": 0.7707686424255371, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:29.591416Z", "completed_at": "2021-02-10T18:05:29.616609Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:29.616956Z", "completed_at": "2021-02-10T18:05:30.291096Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('Dim_Opportunity') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Views", "VW_Opportunity"], "unique_id": "model.sales_dataflo.VW_Opportunity", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Views/VW_Opportunity.sql", "original_file_path": "ETL/Target/Views/VW_Opportunity.sql", "name": "VW_Opportunity", "resource_type": "model", "alias": "VW_Opportunity", "checksum": {"name": "sha256", "checksum": "e1b79b8223f6a0be455932747ce223658ea532919586b62d101a4010995a0221"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Dim_Opportunity"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Dim_Opportunity"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Views/VW_Opportunity.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity"}, "error": null, "status": "SUCCESS 1", "execution_time": 0.7523951530456543, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:30.364706Z", "completed_at": "2021-02-10T18:05:30.391550Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:30.391880Z", "completed_at": "2021-02-10T18:05:31.046674Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('Dim_Lead') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Views", "VW_Lead"], "unique_id": "model.sales_dataflo.VW_Lead", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Views/VW_Lead.sql", "original_file_path": "ETL/Target/Views/VW_Lead.sql", "name": "VW_Lead", "resource_type": "model", "alias": "VW_Lead", "checksum": {"name": "sha256", "checksum": "62dcf4bff6ebf102e926c44b90ba9cbfd4404405f9c3146c53c79c18ccfa5320"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Dim_Lead"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Dim_Lead"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Views/VW_Lead.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.050614356994629, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:31.120795Z", "completed_at": "2021-02-10T18:05:31.153927Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:31.154399Z", "completed_at": "2021-02-10T18:05:32.084876Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('Dim_TimeFrame') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Views", "VW_TimeFrame"], "unique_id": "model.sales_dataflo.VW_TimeFrame", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Views/VW_TimeFrame.sql", "original_file_path": "ETL/Target/Views/VW_TimeFrame.sql", "name": "VW_TimeFrame", "resource_type": "model", "alias": "VW_TimeFrame", "checksum": {"name": "sha256", "checksum": "05c9ee70e7f7f4407cce06073f0f9ce1aa51daaa8f90ab2f1aaf4cbab5aa3359"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Dim_TimeFrame"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Dim_TimeFrame"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Views/VW_TimeFrame.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame"}, "error": null, "status": "SUCCESS 1", "execution_time": 0.8839254379272461, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:32.175755Z", "completed_at": "2021-02-10T18:05:32.225013Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:32.225599Z", "completed_at": "2021-02-10T18:05:32.948708Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(\r\n    materialized=\"table\"\r\n) \r\n}}\r\n{%- for metrics in [(run_metrics_history('upper(IS_WON) = '\"'\"'TRUE'\"'\"'', '1', '1','Dim_Opportunity'))                 \r\n                   ]  %}\r\n        (\r\n             {{ metrics }}\r\n        )\r\n\r\n        {% if not loop.last -%}\r\n            union all\r\n        {% endif -%}\r\n{%- endfor -%}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "test"], "unique_id": "model.sales_dataflo.test", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/test.sql", "original_file_path": "ETL/Target/Tables/test.sql", "name": "test", "resource_type": "model", "alias": "test", "checksum": {"name": "sha256", "checksum": "df2aaf6fb04e69dad8de564a5115c886e3cb0ee45d01c1a05b1880d67d2c677c"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Opportunity"]], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.run_metrics_history", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Opportunity"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/test.sql", "deferred": false, "compiled_sql": "\n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('1' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum( Amount  ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        ", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('1' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum( Amount  ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        "}, "error": null, "status": "SUCCESS 1", "execution_time": 6.303034782409668, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:33.062247Z", "completed_at": "2021-02-10T18:05:33.639290Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:33.639684Z", "completed_at": "2021-02-10T18:05:39.298487Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(\r\n    materialized=\"table\"\r\n) \r\n}}\r\n{%- for metrics in [(run_metrics_history('upper(IS_WON) = '\"'\"'TRUE'\"'\"'', '1', '1','Dim_Opportunity')),\r\n                    (run_metrics_history('upper(IS_WON) = '\"'\"'FALSE'\"'\"' and upper(IS_CLOSED) = '\"'\"'TRUE'\"'\"'', '10', '1','Dim_Opportunity')),\r\n                    (run_metrics_history('upper(lead_to_opp_flag) = '\"'\"'TRUE'\"'\"'', '3', '4','Dim_Lead')),\r\n                    (run_metrics_history('1 = 1', '4', '4','Dim_Lead')),\r\n                    (run_metrics_history('upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '23', '2','Dim_Opportunity')),\r\n                    (run_metrics_history('1 = 1', '27', '5','Dim_Account')),\r\n                    (run_metrics_history('1 = 1', '29', '6','Dim_Contact'))                    \r\n                   ]  %}\r\n        (\r\n             {{ metrics }}\r\n        )\r\n\r\n        {% if not loop.last -%}\r\n            union all\r\n        {% endif -%}\r\n{%- endfor -%}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Fact_Sales_History"], "unique_id": "model.sales_dataflo.Fact_Sales_History", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Fact_Sales_History.sql", "original_file_path": "ETL/Target/Tables/Fact_Sales_History.sql", "name": "Fact_Sales_History", "resource_type": "model", "alias": "Fact_Sales_History", "checksum": {"name": "sha256", "checksum": "0252286da929db5992779d03f00b9957be6f77d28e287414cf8854ad0ed25a06"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Opportunity"], ["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Opportunity"], ["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Lead"], ["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Lead"], ["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Opportunity"], ["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Account"], ["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Contact"]], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.run_metrics_history", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Opportunity", "model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Opportunity", "model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Lead", "model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Lead", "model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Opportunity", "model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Account", "model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Contact"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Fact_Sales_History.sql", "deferred": false, "compiled_sql": "\n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('1' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum( Amount  ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'FALSE' and upper(IS_CLOSED) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('10' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum( Amount  ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where upper(lead_to_opp_flag) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('3' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum( 0   ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('4' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum( 0   ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_CLOSED) = 'FALSE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('23' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum( Amount  ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('27' as number) as METRIC_ID,\n        cast('5' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum( 0   ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Contact  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('29' as number) as METRIC_ID,\n        cast('6' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum( 0   ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        ", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('1' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum( Amount  ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'FALSE' and upper(IS_CLOSED) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('10' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum( Amount  ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where upper(lead_to_opp_flag) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('3' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum( 0   ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('4' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum( 0   ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_CLOSED) = 'FALSE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('23' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum( Amount  ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('27' as number) as METRIC_ID,\n        cast('5' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum( 0   ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Contact  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('29' as number) as METRIC_ID,\n        cast('6' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum( 0   ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        "}, "error": null, "status": "SUCCESS 1", "execution_time": 34.13115930557251, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:05:39.369566Z", "completed_at": "2021-02-10T18:05:40.684024Z"}, {"name": "execute", "started_at": "2021-02-10T18:05:40.684438Z", "completed_at": "2021-02-10T18:06:13.427491Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(\r\n    materialized=\"table\"\r\n) \r\n}}\r\n{%- for metrics in [(run_metrics_segment_history('upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '5', '2','Dim_Opportunity','STAGE_NAME')),\r\n                    (run_metrics_segment_history('1 = 1', '7', '3','Dim_Lead','INDUSTRY')),\r\n                    (run_metrics_segment_history('upper(IS_WON) = '\"'\"'FALSE'\"'\"' and upper(IS_CLOSED) = '\"'\"'TRUE'\"'\"'', '11', '2','Dim_Opportunity','EMPLOYEE_ID')),\r\n                    (run_metrics_segment_history('upper(IS_WON) = '\"'\"'FALSE'\"'\"' and upper(IS_CLOSED) = '\"'\"'TRUE'\"'\"'', '14', '1','Dim_Opportunity','OPPORTUNITY_NAME')),\r\n                    (run_metrics_segment_history('1 = 1', '18', '3','Dim_Lead','LEAD_SOURCE')),\r\n\t\t\t\t\t(run_metrics_segment_history('1 = 1', '19', '3','Dim_Lead','STATUS')),\r\n                    (run_metrics_segment_history('upper(IS_WON) = '\"'\"'TRUE'\"'\"'', '22', '1','Dim_Opportunity','OPPORTUNITY_NAME')),\r\n\t\t\t\t\t(run_metrics_segment_history('upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '26', '1','Dim_Opportunity','OPPORTUNITY_NAME')),\r\n                    (run_metrics_segment_history('1 = 1', '28', '5','Dim_Account','EMPLOYEE_ID')),\r\n\t\t\t\t\t(run_metrics_segment_history('1 = 1', '30', '3','Dim_Lead','EMPLOYEE_ID')),\r\n                    (run_metrics_segment_history('1 = 1', '31', '3','Dim_Lead','LEAD_CONTACT_ADDRESS')),\r\n\t\t\t\t\t(run_metrics_segment_history('1 = 1', '32', '2','Dim_Opportunity','OPPORTUNITY_TYPE'))                                       \r\n                   ]  %}\r\n        (\r\n             {{ metrics }}\r\n        )\r\n\r\n        {% if not loop.last -%}\r\n            union all\r\n        {% endif -%}\r\n{%- endfor -%}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Fact_Sales_Segmented_History"], "unique_id": "model.sales_dataflo.Fact_Sales_Segmented_History", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Fact_Sales_Segmented_History.sql", "original_file_path": "ETL/Target/Tables/Fact_Sales_Segmented_History.sql", "name": "Fact_Sales_Segmented_History", "resource_type": "model", "alias": "Fact_Sales_Segmented_History", "checksum": {"name": "sha256", "checksum": "5b0050d6943b3c27db498b254972a1e953811fc813bc80efe6a510a92989127b"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Opportunity"], ["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Lead"], ["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Opportunity"], ["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Opportunity"], ["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Lead"], ["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Lead"], ["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Opportunity"], ["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Opportunity"], ["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Account"], ["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Lead"], ["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Lead"], ["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Opportunity"]], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.run_metrics_segment_history", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Opportunity", "model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Lead", "model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Opportunity", "model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Opportunity", "model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Lead", "model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Lead", "model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Opportunity", "model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Opportunity", "model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Account", "model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Lead", "model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Lead", "model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Opportunity"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Fact_Sales_Segmented_History.sql", "deferred": false, "compiled_sql": "\n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_CLOSED) = 'FALSE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('5' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(STAGE_NAME as varchar(1000)) As Segment_name,\n        sum( Amount  ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('7' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(INDUSTRY as varchar(1000)) As Segment_name,\n        sum( 0   ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'FALSE' and upper(IS_CLOSED) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('11' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(EMPLOYEE_ID as varchar(1000)) As Segment_name,\n        sum( Amount  ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'FALSE' and upper(IS_CLOSED) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('14' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(OPPORTUNITY_NAME as varchar(1000)) As Segment_name,\n        sum( Amount  ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('18' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(LEAD_SOURCE as varchar(1000)) As Segment_name,\n        sum( 0   ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('19' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(STATUS as varchar(1000)) As Segment_name,\n        sum( 0   ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('22' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(OPPORTUNITY_NAME as varchar(1000)) As Segment_name,\n        sum( Amount  ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_CLOSED) = 'FALSE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('26' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(OPPORTUNITY_NAME as varchar(1000)) As Segment_name,\n        sum( Amount  ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('28' as number) as METRIC_ID,\n        cast('5' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(EMPLOYEE_ID as varchar(1000)) As Segment_name,\n        sum( 0   ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('30' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(EMPLOYEE_ID as varchar(1000)) As Segment_name,\n        sum( 0   ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('31' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(LEAD_CONTACT_ADDRESS as varchar(1000)) As Segment_name,\n        sum( 0   ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('32' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(OPPORTUNITY_TYPE as varchar(1000)) As Segment_name,\n        sum( Amount  ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        ", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_CLOSED) = 'FALSE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('5' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(STAGE_NAME as varchar(1000)) As Segment_name,\n        sum( Amount  ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('7' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(INDUSTRY as varchar(1000)) As Segment_name,\n        sum( 0   ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'FALSE' and upper(IS_CLOSED) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('11' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(EMPLOYEE_ID as varchar(1000)) As Segment_name,\n        sum( Amount  ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'FALSE' and upper(IS_CLOSED) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('14' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(OPPORTUNITY_NAME as varchar(1000)) As Segment_name,\n        sum( Amount  ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('18' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(LEAD_SOURCE as varchar(1000)) As Segment_name,\n        sum( 0   ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('19' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(STATUS as varchar(1000)) As Segment_name,\n        sum( 0   ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('22' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(OPPORTUNITY_NAME as varchar(1000)) As Segment_name,\n        sum( Amount  ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_CLOSED) = 'FALSE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('26' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(OPPORTUNITY_NAME as varchar(1000)) As Segment_name,\n        sum( Amount  ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('28' as number) as METRIC_ID,\n        cast('5' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(EMPLOYEE_ID as varchar(1000)) As Segment_name,\n        sum( 0   ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('30' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(EMPLOYEE_ID as varchar(1000)) As Segment_name,\n        sum( 0   ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('31' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(LEAD_CONTACT_ADDRESS as varchar(1000)) As Segment_name,\n        sum( 0   ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        union all\n        \n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('32' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(OPPORTUNITY_TYPE as varchar(1000)) As Segment_name,\n        sum( Amount  ) as AMOUNT,\n        count(INITIAL_CREATE_DT)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , 'D' TimeFrame_Type,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n        )\n\n        "}, "error": null, "status": "SUCCESS 1", "execution_time": 63.69698190689087, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:06:13.504884Z", "completed_at": "2021-02-10T18:06:14.985250Z"}, {"name": "execute", "started_at": "2021-02-10T18:06:14.985647Z", "completed_at": "2021-02-10T18:07:17.109630Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('Dim_Account') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Views", "VW_Account"], "unique_id": "model.sales_dataflo.VW_Account", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Views/VW_Account.sql", "original_file_path": "ETL/Target/Views/VW_Account.sql", "name": "VW_Account", "resource_type": "model", "alias": "VW_Account", "checksum": {"name": "sha256", "checksum": "70b956dd282029fc4941e66a4f34ea75840506ff718fba1f48546f17b9017c1f"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Dim_Account"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Dim_Account"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Views/VW_Account.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.0436217784881592, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:07:17.204341Z", "completed_at": "2021-02-10T18:07:17.244876Z"}, {"name": "execute", "started_at": "2021-02-10T18:07:17.245268Z", "completed_at": "2021-02-10T18:07:18.158786Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('Dim_Campaign') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Views", "VW_Campaign"], "unique_id": "model.sales_dataflo.VW_Campaign", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Views/VW_Campaign.sql", "original_file_path": "ETL/Target/Views/VW_Campaign.sql", "name": "VW_Campaign", "resource_type": "model", "alias": "VW_Campaign", "checksum": {"name": "sha256", "checksum": "81a5fbb2705d231938ef8396d8391175aba3f01a1d5eda7b06c8cde05dca7dd0"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Dim_Campaign"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Dim_Campaign"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Views/VW_Campaign.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Campaign", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Campaign"}, "error": null, "status": "SUCCESS 1", "execution_time": 0.9312224388122559, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:07:18.250519Z", "completed_at": "2021-02-10T18:07:18.279593Z"}, {"name": "execute", "started_at": "2021-02-10T18:07:18.279919Z", "completed_at": "2021-02-10T18:07:19.105660Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "With Campaign AS(\r\n    select *  from {{ ref('Dim_Campaign') }}\r\n),Employee AS(\r\n    select *  from {{ ref('Dim_Employee') }}\r\n),Opportunity AS(\r\n\r\n select *  from {{ ref('Dim_Opportunity') }}\r\n\r\n ),lead AS(\r\n\r\n select *  from {{ ref('Dim_Lead') }}\r\n\r\n ),insight AS(\r\n\r\n    select \r\n      oppo.OPPORTUNITY_ID\r\n      ,oppo.OPPORTUNITY_NAME\r\n      ,oppo.OPPORTUNITY_TYPE\r\n      ,oppo.ACCOUNT_ID\r\n      ,oppo.EMPLOYEE_ID\r\n      ,oppo.SOURCE_ID as oppoSOURCE_ID\r\n      ,oppo.STAGE_ID\r\n      ,oppo.IS_WON\r\n      ,oppo.IS_CLOSED\r\n      ,oppo.STAGE_NAME as oppoSTAGE_NAME\r\n      ,oppo.FORECAST_CATEGORY\r\n      ,oppo.AMOUNT\r\n      ,oppo.AMOUNT_WITHOUT_DISC\r\n      ,oppo.EXPECTD_CLOUSER_DT\r\n      ,oppo.CONTACT_ID\r\n      ,oppo.CONTACT_NAME\r\n      ,oppo.CONTACT_NUMBER\r\n      ,oppo.CONTACT_EMAIL\r\n      ,oppo.CONTACT_ADDRESS\r\n      ,oppo.INITIAL_CREATE_DT as oppoINITIAL_CREATE_DT\r\n      ,oppo.LAST_UPDATED_DT\r\n      ,oppo.CLOSE_DATE\r\n      ,oppo.PROSPECT_DT\r\n      ,oppo.STAGE_CALC_ID\r\n      ,oppo.STAGE_START_DT\r\n      ,oppo.STAGE_END_DT\r\n      ,oppo.LEAD_LOST_REASON as oppoLEAD_LOST_REASON \r\n      ,oppo.COMPETITOR\r\n      ,oppo.ON_HOLD_FLAG\r\n      ,oppo.SUB_PRODUCT_ID\r\n      ,oppo.SUB_PRODUCT_NAME\r\n      ,oppo.PRD_AMOUNT_WITHOUT_DISC\r\n      ,oppo.PRD_DISCOUNT\r\n      ,oppo.ACTIVE_FLAG as oppoACTIVE_FLAG\r\n      ,oppo.DW_CURR_FLG\r\n      ,oppo.EFFCT_START_DATE\r\n      ,oppo.EFFCT_END_DATE\r\n      ,oppo.SOURCE_TYPE as oppoSOURCE_TYPE\r\n      ,oppo.DW_SESSION_NM\r\n      ,oppo.DW_INS_UPD_DTS\r\n\r\n      ,emp.EMPLOYEE_ID as empid\r\n      ,emp.SOURCE_EMP_ID\r\n      ,emp.ENTITY_ID\r\n      ,emp.ORG_NAME\r\n      ,emp.EMPLOYEE_CODE\r\n      ,emp.FIRST_NAME\r\n      ,emp.MIDDLE_NAME\r\n      ,emp.LAST_NAME\r\n      ,emp.EMP_FULL_NM\r\n      ,emp.EMP_ROLE_ID\r\n      ,emp.EMP_POSITION_LEVEL\r\n      ,emp.EMP_GENDER\r\n      ,emp.EMP_PHONE_NUMBER\r\n      ,emp.EMP_EMAIL\r\n      ,emp.SALES_BRANCH_ID\r\n      ,emp.SALES_BRANCH_NAME\r\n      ,emp.SALES_REGION_ID\r\n      ,emp.SALES_REGION_NAME\r\n      ,emp.SALES_ZONE_ID\r\n      ,emp.SALES_ZONE_NAME\r\n      ,emp.BUSINESS_UNIT_ID\r\n      ,emp.BUSINESS_UNIT_NAME\r\n      ,emp.EMP_CREATE_DT\r\n      ,emp.EMP_LAST_UPDATE_DT\r\n      ,emp.MNGR_EMP_ID\r\n      ,emp.MNGR_POSITION_LEVEL\r\n      ,emp.MNGR_ROLE_ID\r\n      ,emp.EMP_FINANCIAL_YEAR_START\r\n      ,emp.EMP_START_OF_WEEK\r\n      ,emp.WEEKLY_WORKING_DAYS\r\n      ,emp.EMP_ACTIVE\r\n      ,emp.DW_SESSION_NM as empDW_SESSION_NM\r\n      ,emp.DW_INS_UPD_DTS as empDW_INS_UPD_DTS\r\n\r\n      ,lead.LEAD_ID\r\n      ,lead.LEAD_SOURCE\r\n      ,lead.SOURCE_ID as leadSOURCE_ID\r\n      ,lead.LEAD_CONTACT_ADDRESS\r\n      ,lead.STATUS as leadSTATUS\r\n      ,lead.STAGE_NAME as leadSTAGE_NAME\r\n      ,lead.PRODUCT_ID\r\n      ,lead.LEAD_TO_OPP_FLAG\r\n      ,lead.LEAD_LOST_FLAG\r\n      ,lead.LEAD_CONVERTED_DATE\r\n      ,lead.CONVERTED_OPPORTUNITY_ID\r\n      ,lead.LEAD_LOST_DT\r\n      ,lead.LEAD_LOST_REASON\r\n      ,lead.INDUSTRY\r\n      ,lead.EMPLOYEE_ID as leadEMPLOYEE_ID\r\n      ,lead.INITIAL_CREATE_DT as leadINITIAL_CREATE_DT\r\n      ,lead.LEAD_LAST_MODIFIED_DATE\r\n      ,lead.SOURCE_TYPE as leadSOURCE_TYPE\r\n      ,lead.DW_SESSION_NM as leadDW_SESSION_NM\r\n      ,lead.DW_INS_UPD_DTS as leadDW_INS_UPD_DTS\r\n\r\n      ,camp.CAMPAIGN_ID\r\n      ,camp.CAMPAIGN_OWNER_ID\r\n      ,camp.CAMPAIGN_NAME\r\n      ,camp.ACTIVE_FLAG as campACTIVE_FLAG\r\n      ,camp.SOURCE_ID as campSOURCE_ID\r\n      ,camp.TYPE as campTYPE\r\n      ,camp.STATUS as campSTATUS\r\n      ,camp.START_DATE\r\n      ,camp.END_DATE\r\n      ,camp.EXPECTED_REVENUE\r\n      ,camp.BUDGETED_COST\r\n      ,camp.ACTUAL_COST\r\n      ,camp.EXPECTED_RESPONSE\r\n      ,camp.NUMBER_SENT\r\n      ,camp.NUMBER_OF_LEADS\r\n      ,camp.NUMBER_OF_CONVERTED_LEADS\r\n      ,camp.NUMBER_OF_CONTACTS\r\n      ,camp.NUMBER_OF_RESPONSES\r\n      ,camp.NUMBER_OF_OPPORTUNITIES\r\n      ,camp.NUMBER_OF_WON_OPPORTUNITIES\r\n      ,camp.AMOUNT_ALL_OPPORTUNITIES\r\n      ,camp.AMOUNT_WON_OPPORTUNITIES\r\n      ,camp.SOURCE_TYPE as campSOURCE_TYPE\r\n      ,camp.DW_SESSION_NM as campDW_SESSION_NM\r\n      ,camp.DW_INS_UPD_DTS as campDW_INS_UPD_DTS\r\n     \r\n    from  Opportunity as oppo\r\n    left join Employee as EMP on oppo.employee_id  =  EMP.source_Emp_id\r\n    left join lead on oppo.employee_id = lead.employee_id\r\n    left join Campaign as camp on oppo.EMPLOYEE_ID = camp.CAMPAIGN_OWNER_ID\r\n    \r\n\r\n\r\n )\r\nselect *  from insight --where CAMPAIGN_OWNER_ID ='0055g000000Y5auAAC' 0055g000000Y5auAAC", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo_ml_insights_data", "fqn": ["sales_dataflo", "ml_insights_data", "ml_insights_data"], "unique_id": "model.sales_dataflo.ml_insights_data", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "ml_insights_data/ml_insights_data.sql", "original_file_path": "ETL/ml_insights_data/ml_insights_data.sql", "name": "ml_insights_data", "resource_type": "model", "alias": "ml_insights_data", "checksum": {"name": "sha256", "checksum": "33abcdcdce7b91f8b7d626b0b18a91c56d9950dc38b1dc7b88c8df2213d491a6"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "ml_insights_data", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Dim_Campaign"], ["Dim_Employee"], ["Dim_Opportunity"], ["Dim_Lead"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Dim_Campaign", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Opportunity", "model.sales_dataflo.Dim_Lead"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/ml_insights_data/ml_insights_data.sql", "deferred": false, "compiled_sql": "With Campaign AS(\n    select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Campaign\n),Employee AS(\n    select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee\n),Opportunity AS(\n\n select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity\n\n ),lead AS(\n\n select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead\n\n ),insight AS(\n\n    select \n      oppo.OPPORTUNITY_ID\n      ,oppo.OPPORTUNITY_NAME\n      ,oppo.OPPORTUNITY_TYPE\n      ,oppo.ACCOUNT_ID\n      ,oppo.EMPLOYEE_ID\n      ,oppo.SOURCE_ID as oppoSOURCE_ID\n      ,oppo.STAGE_ID\n      ,oppo.IS_WON\n      ,oppo.IS_CLOSED\n      ,oppo.STAGE_NAME as oppoSTAGE_NAME\n      ,oppo.FORECAST_CATEGORY\n      ,oppo.AMOUNT\n      ,oppo.AMOUNT_WITHOUT_DISC\n      ,oppo.EXPECTD_CLOUSER_DT\n      ,oppo.CONTACT_ID\n      ,oppo.CONTACT_NAME\n      ,oppo.CONTACT_NUMBER\n      ,oppo.CONTACT_EMAIL\n      ,oppo.CONTACT_ADDRESS\n      ,oppo.INITIAL_CREATE_DT as oppoINITIAL_CREATE_DT\n      ,oppo.LAST_UPDATED_DT\n      ,oppo.CLOSE_DATE\n      ,oppo.PROSPECT_DT\n      ,oppo.STAGE_CALC_ID\n      ,oppo.STAGE_START_DT\n      ,oppo.STAGE_END_DT\n      ,oppo.LEAD_LOST_REASON as oppoLEAD_LOST_REASON \n      ,oppo.COMPETITOR\n      ,oppo.ON_HOLD_FLAG\n      ,oppo.SUB_PRODUCT_ID\n      ,oppo.SUB_PRODUCT_NAME\n      ,oppo.PRD_AMOUNT_WITHOUT_DISC\n      ,oppo.PRD_DISCOUNT\n      ,oppo.ACTIVE_FLAG as oppoACTIVE_FLAG\n      ,oppo.DW_CURR_FLG\n      ,oppo.EFFCT_START_DATE\n      ,oppo.EFFCT_END_DATE\n      ,oppo.SOURCE_TYPE as oppoSOURCE_TYPE\n      ,oppo.DW_SESSION_NM\n      ,oppo.DW_INS_UPD_DTS\n\n      ,emp.EMPLOYEE_ID as empid\n      ,emp.SOURCE_EMP_ID\n      ,emp.ENTITY_ID\n      ,emp.ORG_NAME\n      ,emp.EMPLOYEE_CODE\n      ,emp.FIRST_NAME\n      ,emp.MIDDLE_NAME\n      ,emp.LAST_NAME\n      ,emp.EMP_FULL_NM\n      ,emp.EMP_ROLE_ID\n      ,emp.EMP_POSITION_LEVEL\n      ,emp.EMP_GENDER\n      ,emp.EMP_PHONE_NUMBER\n      ,emp.EMP_EMAIL\n      ,emp.SALES_BRANCH_ID\n      ,emp.SALES_BRANCH_NAME\n      ,emp.SALES_REGION_ID\n      ,emp.SALES_REGION_NAME\n      ,emp.SALES_ZONE_ID\n      ,emp.SALES_ZONE_NAME\n      ,emp.BUSINESS_UNIT_ID\n      ,emp.BUSINESS_UNIT_NAME\n      ,emp.EMP_CREATE_DT\n      ,emp.EMP_LAST_UPDATE_DT\n      ,emp.MNGR_EMP_ID\n      ,emp.MNGR_POSITION_LEVEL\n      ,emp.MNGR_ROLE_ID\n      ,emp.EMP_FINANCIAL_YEAR_START\n      ,emp.EMP_START_OF_WEEK\n      ,emp.WEEKLY_WORKING_DAYS\n      ,emp.EMP_ACTIVE\n      ,emp.DW_SESSION_NM as empDW_SESSION_NM\n      ,emp.DW_INS_UPD_DTS as empDW_INS_UPD_DTS\n\n      ,lead.LEAD_ID\n      ,lead.LEAD_SOURCE\n      ,lead.SOURCE_ID as leadSOURCE_ID\n      ,lead.LEAD_CONTACT_ADDRESS\n      ,lead.STATUS as leadSTATUS\n      ,lead.STAGE_NAME as leadSTAGE_NAME\n      ,lead.PRODUCT_ID\n      ,lead.LEAD_TO_OPP_FLAG\n      ,lead.LEAD_LOST_FLAG\n      ,lead.LEAD_CONVERTED_DATE\n      ,lead.CONVERTED_OPPORTUNITY_ID\n      ,lead.LEAD_LOST_DT\n      ,lead.LEAD_LOST_REASON\n      ,lead.INDUSTRY\n      ,lead.EMPLOYEE_ID as leadEMPLOYEE_ID\n      ,lead.INITIAL_CREATE_DT as leadINITIAL_CREATE_DT\n      ,lead.LEAD_LAST_MODIFIED_DATE\n      ,lead.SOURCE_TYPE as leadSOURCE_TYPE\n      ,lead.DW_SESSION_NM as leadDW_SESSION_NM\n      ,lead.DW_INS_UPD_DTS as leadDW_INS_UPD_DTS\n\n      ,camp.CAMPAIGN_ID\n      ,camp.CAMPAIGN_OWNER_ID\n      ,camp.CAMPAIGN_NAME\n      ,camp.ACTIVE_FLAG as campACTIVE_FLAG\n      ,camp.SOURCE_ID as campSOURCE_ID\n      ,camp.TYPE as campTYPE\n      ,camp.STATUS as campSTATUS\n      ,camp.START_DATE\n      ,camp.END_DATE\n      ,camp.EXPECTED_REVENUE\n      ,camp.BUDGETED_COST\n      ,camp.ACTUAL_COST\n      ,camp.EXPECTED_RESPONSE\n      ,camp.NUMBER_SENT\n      ,camp.NUMBER_OF_LEADS\n      ,camp.NUMBER_OF_CONVERTED_LEADS\n      ,camp.NUMBER_OF_CONTACTS\n      ,camp.NUMBER_OF_RESPONSES\n      ,camp.NUMBER_OF_OPPORTUNITIES\n      ,camp.NUMBER_OF_WON_OPPORTUNITIES\n      ,camp.AMOUNT_ALL_OPPORTUNITIES\n      ,camp.AMOUNT_WON_OPPORTUNITIES\n      ,camp.SOURCE_TYPE as campSOURCE_TYPE\n      ,camp.DW_SESSION_NM as campDW_SESSION_NM\n      ,camp.DW_INS_UPD_DTS as campDW_INS_UPD_DTS\n     \n    from  Opportunity as oppo\n    left join Employee as EMP on oppo.employee_id  =  EMP.source_Emp_id\n    left join lead on oppo.employee_id = lead.employee_id\n    left join Campaign as camp on oppo.EMPLOYEE_ID = camp.CAMPAIGN_OWNER_ID\n    \n\n\n )\nselect *  from insight --where CAMPAIGN_OWNER_ID ='0055g000000Y5auAAC' 0055g000000Y5auAAC", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "With Campaign AS(\n    select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Campaign\n),Employee AS(\n    select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee\n),Opportunity AS(\n\n select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity\n\n ),lead AS(\n\n select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead\n\n ),insight AS(\n\n    select \n      oppo.OPPORTUNITY_ID\n      ,oppo.OPPORTUNITY_NAME\n      ,oppo.OPPORTUNITY_TYPE\n      ,oppo.ACCOUNT_ID\n      ,oppo.EMPLOYEE_ID\n      ,oppo.SOURCE_ID as oppoSOURCE_ID\n      ,oppo.STAGE_ID\n      ,oppo.IS_WON\n      ,oppo.IS_CLOSED\n      ,oppo.STAGE_NAME as oppoSTAGE_NAME\n      ,oppo.FORECAST_CATEGORY\n      ,oppo.AMOUNT\n      ,oppo.AMOUNT_WITHOUT_DISC\n      ,oppo.EXPECTD_CLOUSER_DT\n      ,oppo.CONTACT_ID\n      ,oppo.CONTACT_NAME\n      ,oppo.CONTACT_NUMBER\n      ,oppo.CONTACT_EMAIL\n      ,oppo.CONTACT_ADDRESS\n      ,oppo.INITIAL_CREATE_DT as oppoINITIAL_CREATE_DT\n      ,oppo.LAST_UPDATED_DT\n      ,oppo.CLOSE_DATE\n      ,oppo.PROSPECT_DT\n      ,oppo.STAGE_CALC_ID\n      ,oppo.STAGE_START_DT\n      ,oppo.STAGE_END_DT\n      ,oppo.LEAD_LOST_REASON as oppoLEAD_LOST_REASON \n      ,oppo.COMPETITOR\n      ,oppo.ON_HOLD_FLAG\n      ,oppo.SUB_PRODUCT_ID\n      ,oppo.SUB_PRODUCT_NAME\n      ,oppo.PRD_AMOUNT_WITHOUT_DISC\n      ,oppo.PRD_DISCOUNT\n      ,oppo.ACTIVE_FLAG as oppoACTIVE_FLAG\n      ,oppo.DW_CURR_FLG\n      ,oppo.EFFCT_START_DATE\n      ,oppo.EFFCT_END_DATE\n      ,oppo.SOURCE_TYPE as oppoSOURCE_TYPE\n      ,oppo.DW_SESSION_NM\n      ,oppo.DW_INS_UPD_DTS\n\n      ,emp.EMPLOYEE_ID as empid\n      ,emp.SOURCE_EMP_ID\n      ,emp.ENTITY_ID\n      ,emp.ORG_NAME\n      ,emp.EMPLOYEE_CODE\n      ,emp.FIRST_NAME\n      ,emp.MIDDLE_NAME\n      ,emp.LAST_NAME\n      ,emp.EMP_FULL_NM\n      ,emp.EMP_ROLE_ID\n      ,emp.EMP_POSITION_LEVEL\n      ,emp.EMP_GENDER\n      ,emp.EMP_PHONE_NUMBER\n      ,emp.EMP_EMAIL\n      ,emp.SALES_BRANCH_ID\n      ,emp.SALES_BRANCH_NAME\n      ,emp.SALES_REGION_ID\n      ,emp.SALES_REGION_NAME\n      ,emp.SALES_ZONE_ID\n      ,emp.SALES_ZONE_NAME\n      ,emp.BUSINESS_UNIT_ID\n      ,emp.BUSINESS_UNIT_NAME\n      ,emp.EMP_CREATE_DT\n      ,emp.EMP_LAST_UPDATE_DT\n      ,emp.MNGR_EMP_ID\n      ,emp.MNGR_POSITION_LEVEL\n      ,emp.MNGR_ROLE_ID\n      ,emp.EMP_FINANCIAL_YEAR_START\n      ,emp.EMP_START_OF_WEEK\n      ,emp.WEEKLY_WORKING_DAYS\n      ,emp.EMP_ACTIVE\n      ,emp.DW_SESSION_NM as empDW_SESSION_NM\n      ,emp.DW_INS_UPD_DTS as empDW_INS_UPD_DTS\n\n      ,lead.LEAD_ID\n      ,lead.LEAD_SOURCE\n      ,lead.SOURCE_ID as leadSOURCE_ID\n      ,lead.LEAD_CONTACT_ADDRESS\n      ,lead.STATUS as leadSTATUS\n      ,lead.STAGE_NAME as leadSTAGE_NAME\n      ,lead.PRODUCT_ID\n      ,lead.LEAD_TO_OPP_FLAG\n      ,lead.LEAD_LOST_FLAG\n      ,lead.LEAD_CONVERTED_DATE\n      ,lead.CONVERTED_OPPORTUNITY_ID\n      ,lead.LEAD_LOST_DT\n      ,lead.LEAD_LOST_REASON\n      ,lead.INDUSTRY\n      ,lead.EMPLOYEE_ID as leadEMPLOYEE_ID\n      ,lead.INITIAL_CREATE_DT as leadINITIAL_CREATE_DT\n      ,lead.LEAD_LAST_MODIFIED_DATE\n      ,lead.SOURCE_TYPE as leadSOURCE_TYPE\n      ,lead.DW_SESSION_NM as leadDW_SESSION_NM\n      ,lead.DW_INS_UPD_DTS as leadDW_INS_UPD_DTS\n\n      ,camp.CAMPAIGN_ID\n      ,camp.CAMPAIGN_OWNER_ID\n      ,camp.CAMPAIGN_NAME\n      ,camp.ACTIVE_FLAG as campACTIVE_FLAG\n      ,camp.SOURCE_ID as campSOURCE_ID\n      ,camp.TYPE as campTYPE\n      ,camp.STATUS as campSTATUS\n      ,camp.START_DATE\n      ,camp.END_DATE\n      ,camp.EXPECTED_REVENUE\n      ,camp.BUDGETED_COST\n      ,camp.ACTUAL_COST\n      ,camp.EXPECTED_RESPONSE\n      ,camp.NUMBER_SENT\n      ,camp.NUMBER_OF_LEADS\n      ,camp.NUMBER_OF_CONVERTED_LEADS\n      ,camp.NUMBER_OF_CONTACTS\n      ,camp.NUMBER_OF_RESPONSES\n      ,camp.NUMBER_OF_OPPORTUNITIES\n      ,camp.NUMBER_OF_WON_OPPORTUNITIES\n      ,camp.AMOUNT_ALL_OPPORTUNITIES\n      ,camp.AMOUNT_WON_OPPORTUNITIES\n      ,camp.SOURCE_TYPE as campSOURCE_TYPE\n      ,camp.DW_SESSION_NM as campDW_SESSION_NM\n      ,camp.DW_INS_UPD_DTS as campDW_INS_UPD_DTS\n     \n    from  Opportunity as oppo\n    left join Employee as EMP on oppo.employee_id  =  EMP.source_Emp_id\n    left join lead on oppo.employee_id = lead.employee_id\n    left join Campaign as camp on oppo.EMPLOYEE_ID = camp.CAMPAIGN_OWNER_ID\n    \n\n\n )\nselect *  from insight --where CAMPAIGN_OWNER_ID ='0055g000000Y5auAAC' 0055g000000Y5auAAC"}, "error": null, "status": "SUCCESS 1", "execution_time": 7.074978590011597, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:07:19.184425Z", "completed_at": "2021-02-10T18:07:19.236543Z"}, {"name": "execute", "started_at": "2021-02-10T18:07:19.237017Z", "completed_at": "2021-02-10T18:07:25.889241Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(\r\n    materialized=\"table\"\r\n) \r\n}}\r\n{%- for metrics in [(run_ns_metrics('1 = 1', '139', '10','Dim_Session','Sum(SESSIONS_PER_USER)')) ,  \r\n                    (run_ns_metrics('1 = 1', '140', '10','Dim_Channel_Traffic','Sum(SESSIONS)')) , \r\n                    (run_ns_metrics('1 = 1', '141', '10','Dim_Social_Media_Acquisitions','Sum(PERCENT_NEW_SESSIONS)')) , \r\n                    (run_ns_metrics('1 = 1', '142', '10','Dim_Social_Media_Acquisitions','Sum(NEW_USERS)')),   \r\n                    (run_ns_metrics('1 = 1', '143', '10','Dim_Social_Media_Acquisitions','Sum(PAGEVIEWS)')),\r\n                    (run_ns_metrics('1 = 1', '144', '10','Dim_Page_Tracking','Sum(PAGEVIEWS_PER_SESSION)')), \r\n                    (run_ns_metrics('1 = 1', '145', '10','Dim_Session','Sum(BOUNCE_RATE)')),  \r\n                    (run_ns_metrics('1 = 1', '147', '10','Dim_Social_Media_Acquisitions','Sum(AVG_SESSION_DURATION)')), \r\n                    (run_ns_metrics('1 = 1', '151', '10','Dim_Goal_Conversions','Sum(GOAL_COMPLETIONS_ALL)')),\r\n                    (run_ns_metrics('1 = 1', '152', '10','Dim_Goal_Conversions','Sum(GOAL_CONVERSION_RATE_ALL)')),   \r\n                    (run_ns_metrics('1 = 1', '158', '10','Dim_Social_Media_Acquisitions','Sum(TRANSACTIONS_PER_SESSION)')),\r\n                    (run_ns_metrics('1 = 1', '163', '10','Dim_Events_Overview','Sum(TOTAL_EVENTS)')),\r\n                    (run_ns_metrics('1 = 1', '164', '10','Dim_Social_Media_Acquisitions','Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)')),                    \r\n                    (run_ns_metrics('1 = 1', '166', '10','Dim_Page_Tracking','sum(TIME_ON_PAGE)')),\r\n                    (run_ns_metrics('1 = 1', '167', '10','Dim_Page_Tracking','sum(UNIQUE_PAGEVIEWS)')),\r\n                   ]  %}\r\n        (\r\n             {{ metrics }}\r\n        )\r\n\r\n        {% if not loop.last -%}\r\n            union all\r\n        {% endif -%}\r\n{%- endfor -%}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Fact_Marketing"], "unique_id": "model.sales_dataflo.Fact_Marketing", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Fact_Marketing.sql", "original_file_path": "ETL/Target/Tables/Fact_Marketing.sql", "name": "Fact_Marketing", "resource_type": "model", "alias": "Fact_Marketing", "checksum": {"name": "sha256", "checksum": "5783af739d1631a63be27afe12d60a8dead1f7a0e73c833b9aea4889ee0ca1db"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Dim_Session"], ["Dim_Channel_Traffic"], ["Dim_Social_Media_Acquisitions"], ["Dim_Social_Media_Acquisitions"], ["Dim_Social_Media_Acquisitions"], ["Dim_Page_Tracking"], ["Dim_Session"], ["Dim_Social_Media_Acquisitions"], ["Dim_Goal_Conversions"], ["Dim_Goal_Conversions"], ["Dim_Social_Media_Acquisitions"], ["Dim_Events_Overview"], ["Dim_Social_Media_Acquisitions"], ["Dim_Page_Tracking"], ["Dim_Page_Tracking"]], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.run_ns_metrics", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Dim_Session", "model.sales_dataflo.Dim_Channel_Traffic", "model.sales_dataflo.Dim_Social_Media_Acquisitions", "model.sales_dataflo.Dim_Social_Media_Acquisitions", "model.sales_dataflo.Dim_Social_Media_Acquisitions", "model.sales_dataflo.Dim_Page_Tracking", "model.sales_dataflo.Dim_Session", "model.sales_dataflo.Dim_Social_Media_Acquisitions", "model.sales_dataflo.Dim_Goal_Conversions", "model.sales_dataflo.Dim_Goal_Conversions", "model.sales_dataflo.Dim_Social_Media_Acquisitions", "model.sales_dataflo.Dim_Events_Overview", "model.sales_dataflo.Dim_Social_Media_Acquisitions", "model.sales_dataflo.Dim_Page_Tracking", "model.sales_dataflo.Dim_Page_Tracking"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Fact_Marketing.sql", "deferred": false, "compiled_sql": "\n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Session  Where 1 = 1 ) \n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS_PER_USER)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('140' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('141' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PERCENT_NEW_SESSIONS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('142' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(NEW_USERS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('143' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('144' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Session  Where 1 = 1 ) \n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('145' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(BOUNCE_RATE)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('147' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(AVG_SESSION_DURATION)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('151' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('152' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_CONVERSION_RATE_ALL)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('158' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS_PER_SESSION)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Events_Overview  Where 1 = 1 )           \n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('163' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TOTAL_EVENTS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('164' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('166' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(TIME_ON_PAGE)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('167' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(UNIQUE_PAGEVIEWS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        ", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Session  Where 1 = 1 ) \n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS_PER_USER)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('140' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('141' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PERCENT_NEW_SESSIONS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('142' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(NEW_USERS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('143' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('144' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Session  Where 1 = 1 ) \n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('145' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(BOUNCE_RATE)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('147' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(AVG_SESSION_DURATION)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('151' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('152' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_CONVERSION_RATE_ALL)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('158' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS_PER_SESSION)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Events_Overview  Where 1 = 1 )           \n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('163' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TOTAL_EVENTS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('164' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('166' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(TIME_ON_PAGE)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('167' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(UNIQUE_PAGEVIEWS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        "}, "error": null, "status": "SUCCESS 1", "execution_time": 3.454014539718628, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:07:26.261939Z", "completed_at": "2021-02-10T18:07:26.335714Z"}, {"name": "execute", "started_at": "2021-02-10T18:07:26.336120Z", "completed_at": "2021-02-10T18:07:29.642583Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(\r\n    materialized=\"table\"\r\n) \r\n}}\r\n{%- for metrics in [(run_metrics('1 = 1', '93', '10','Dim_Platform_Device','DEVICE_CATEGORY','Count(*)')) ,  \r\n                    (run_metrics('1 = 1', '94', '10','Dim_Channel_Traffic','CHANNEL_GROUPING','Sum(SESSIONS)')) , \r\n                    (run_metrics('1 = 1', '95', '10','Dim_Social_Media_Acquisitions','SOCIAL_NETWORK','Count(*)')) , \r\n                    (run_metrics('1 = 1', '99', '10','Dim_Channel_Traffic','CHANNEL_GROUPING','Sum(SESSIONS)')),   \r\n                    (run_metrics('upper(KEYWORD)='\"'\"'ORGANIC'\"'\"'', '101', '10','Dim_Adwords_Keyword','KEYWORD','Sum(SESSIONS)')),\r\n                    (run_metrics('1 = 1', '102', '10','Dim_Channel_Traffic','CHANNEL_GROUPING','Sum(GOAL_COMPLETIONS_ALL)')), \r\n                    (run_metrics('1 = 1', '108', '10','Dim_Goal_Conversions','GOAL_COMPLETION_LOCATION','Sum(GOAL_COMPLETIONS_ALL)')),  \r\n                    (run_metrics('upper(KEYWORD)='\"'\"'PAID'\"'\"'', '109', '10','Dim_Adwords_Keyword','KEYWORD','Sum(SESSIONS)')), \r\n                    (run_metrics('1 = 1', '110', '10','Dim_Channel_Traffic','CHANNEL_GROUPING','Sum(GOAL_VALUE_ALL)')),\r\n                    (run_metrics('1 = 1', '112', '10','Dim_Goal_Conversions','GOAL_COMPLETION_LOCATION','Sum(GOAL_VALUE_ALL)')),   \r\n                    (run_metrics('1 = 1', '114', '10','Dim_Page_Tracking','LANDING_PAGE_PATH','Sum(PAGEVIEWS_PER_SESSION)')),\r\n                    (run_metrics('1 = 1', '115', '10','Dim_Traffic','PAGE_TITLE','Count(*)')),\r\n                    (run_metrics('1 = 1', '120', '10','Dim_Geo_Network','NETWORK_LOCATION','Sum(SESSIONS)')),                    \r\n                    (run_metrics('1 = 1', '125', '10','Dim_Channel_Traffic','CHANNEL_GROUPING','sum(USERS)')),\r\n                    (run_metrics('1 = 1', '130', '10','Dim_Social_Media_Acquisitions','NEW_USERS','sum(PAGEVIEWS)')),\r\n                    (run_metrics('1 = 1', '131', '10','Dim_Events_Overview','EVENT_CATEGORY','sum(SESSIONS_WITH_EVENT)')),\r\n                    (run_metrics('upper(CHANNEL_GROUPING)='\"'\"'ORGANIC'\"'\"'', '139', '10','Dim_Channel_Traffic','USERS','Sum(SESSIONS)'))                  \r\n                   ]  %}\r\n        (\r\n             {{ metrics }}\r\n        )\r\n\r\n        {% if not loop.last -%}\r\n            union all\r\n        {% endif -%}\r\n{%- endfor -%}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Fact_Marketing_Segmented"], "unique_id": "model.sales_dataflo.Fact_Marketing_Segmented", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Fact_Marketing_Segmented.sql", "original_file_path": "ETL/Target/Tables/Fact_Marketing_Segmented.sql", "name": "Fact_Marketing_Segmented", "resource_type": "model", "alias": "Fact_Marketing_Segmented", "checksum": {"name": "sha256", "checksum": "caa0663b2878af0d066b40000e44a7f779301a3d07e712b7b06533254f4b43bf"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Dim_Platform_Device"], ["Dim_Channel_Traffic"], ["Dim_Social_Media_Acquisitions"], ["Dim_Channel_Traffic"], ["Dim_Adwords_Keyword"], ["Dim_Channel_Traffic"], ["Dim_Goal_Conversions"], ["Dim_Adwords_Keyword"], ["Dim_Channel_Traffic"], ["Dim_Goal_Conversions"], ["Dim_Page_Tracking"], ["Dim_Traffic"], ["Dim_Geo_Network"], ["Dim_Channel_Traffic"], ["Dim_Social_Media_Acquisitions"], ["Dim_Events_Overview"], ["Dim_Channel_Traffic"]], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.run_metrics", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Dim_Platform_Device", "model.sales_dataflo.Dim_Channel_Traffic", "model.sales_dataflo.Dim_Social_Media_Acquisitions", "model.sales_dataflo.Dim_Channel_Traffic", "model.sales_dataflo.Dim_Adwords_Keyword", "model.sales_dataflo.Dim_Channel_Traffic", "model.sales_dataflo.Dim_Goal_Conversions", "model.sales_dataflo.Dim_Adwords_Keyword", "model.sales_dataflo.Dim_Channel_Traffic", "model.sales_dataflo.Dim_Goal_Conversions", "model.sales_dataflo.Dim_Page_Tracking", "model.sales_dataflo.Dim_Traffic", "model.sales_dataflo.Dim_Geo_Network", "model.sales_dataflo.Dim_Channel_Traffic", "model.sales_dataflo.Dim_Social_Media_Acquisitions", "model.sales_dataflo.Dim_Events_Overview", "model.sales_dataflo.Dim_Channel_Traffic"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Fact_Marketing_Segmented.sql", "deferred": false, "compiled_sql": "\n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Platform_Device  Where 1 = 1 )   \n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('93' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(DEVICE_CATEGORY as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('94' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('95' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(SOCIAL_NETWORK as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('99' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Adwords_Keyword  Where upper(KEYWORD)='ORGANIC' )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('101' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('102' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('108' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Adwords_Keyword  Where upper(KEYWORD)='PAID' )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('109' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('110' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('112' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('114' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(LANDING_PAGE_PATH as varchar(1000)) As Segment_name,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Traffic  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('115' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(PAGE_TITLE as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Geo_Network  Where 1 = 1 ) \n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('120' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(NETWORK_LOCATION as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('125' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        sum(USERS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('130' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(NEW_USERS as varchar(1000)) As Segment_name,\n        sum(PAGEVIEWS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Events_Overview  Where 1 = 1 )           \n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('131' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(EVENT_CATEGORY as varchar(1000)) As Segment_name,\n        sum(SESSIONS_WITH_EVENT)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where upper(CHANNEL_GROUPING)='ORGANIC' )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(USERS as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        ", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Platform_Device  Where 1 = 1 )   \n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('93' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(DEVICE_CATEGORY as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('94' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('95' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(SOCIAL_NETWORK as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('99' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Adwords_Keyword  Where upper(KEYWORD)='ORGANIC' )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('101' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('102' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('108' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Adwords_Keyword  Where upper(KEYWORD)='PAID' )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('109' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('110' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('112' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('114' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(LANDING_PAGE_PATH as varchar(1000)) As Segment_name,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Traffic  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('115' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(PAGE_TITLE as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Geo_Network  Where 1 = 1 ) \n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('120' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(NETWORK_LOCATION as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('125' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        sum(USERS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('130' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(NEW_USERS as varchar(1000)) As Segment_name,\n        sum(PAGEVIEWS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Events_Overview  Where 1 = 1 )           \n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('131' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(EVENT_CATEGORY as varchar(1000)) As Segment_name,\n        sum(SESSIONS_WITH_EVENT)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        union all\n        \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where upper(CHANNEL_GROUPING)='ORGANIC' )\n \n,Metrics_Calc AS(\n    SELECT\n        Date AS Report_Dt,\n        --hourly_slot,\n        Source_type  AS entity_code,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        cast(USERS as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n         group by\n        Report_Dt,\n        entity_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name\n        )\n SELECT Report_Dt, entity_code, METRIC_ID,METRIC_CATEGORY_ID, Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID\n        )\n\n        "}, "error": null, "status": "SUCCESS 1", "execution_time": 3.456618547439575, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:07:29.718555Z", "completed_at": "2021-02-10T18:07:29.788677Z"}, {"name": "execute", "started_at": "2021-02-10T18:07:29.789042Z", "completed_at": "2021-02-10T18:07:33.092001Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(\r\n    materialized=\"table\"\r\n) \r\n}}\r\n{%- for metrics in [(fact_table(\"to_date('01/01/2017', 'dd/mm/yyyy')\",\"to_date('31/12/2018', 'dd/mm/yyyy')\"))                \r\n                   ]  %}\r\n        (\r\n             {{ metrics }}\r\n        )\r\n\r\n        {% if not loop.last -%}\r\n            union all\r\n        {% endif -%}\r\n{%- endfor -%}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Fact_Sales"], "unique_id": "model.sales_dataflo.Fact_Sales", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Fact_Sales.sql", "original_file_path": "ETL/Target/Tables/Fact_Sales.sql", "name": "Fact_Sales", "resource_type": "model", "alias": "Fact_Sales", "checksum": {"name": "sha256", "checksum": "b14500be00f3f7d5c04159c7c4d2f3ad97a42ecad6cde47e0e7de4335223a64b"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Dim_TimeFrame"], ["Fact_Sales_History"]], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.fact_table", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Fact_Sales_History"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Fact_Sales.sql", "deferred": false, "compiled_sql": "\n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Fact_Sales_History\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n        employee_code AS employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n        employee_code AS employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day        \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n        employee_code AS employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day        \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n        employee_code AS employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day        \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n        employee_code AS employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day        \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type\n        )\n\n        ", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n        (\n             with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Fact_Sales_History\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n        employee_code AS employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n        employee_code AS employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day        \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n        employee_code AS employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day        \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n        employee_code AS employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day        \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n        employee_code AS employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day        \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type\n        )\n\n        "}, "error": null, "status": "SUCCESS 1", "execution_time": 472.6847083568573, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:07:33.177782Z", "completed_at": "2021-02-10T18:07:33.812413Z"}, {"name": "execute", "started_at": "2021-02-10T18:07:33.812819Z", "completed_at": "2021-02-10T18:15:25.791253Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(\r\n    materialized=\"table\"\r\n) \r\n}}\r\n\r\nwith date_range as \r\n(\r\n    {{ dbt_utils.date_spine(\r\n        datepart=\"day\",\r\n        start_date=\"to_date('01/01/2017', 'dd/mm/yyyy')\",\r\n        end_date=\"to_date('31/12/2018', 'dd/mm/yyyy')\"\r\n       )\r\n    }}\r\n),\r\n timeframe as (\r\n  select * from {{ ref('Dim_TimeFrame') }} \r\n  join date_range \r\n  on TimeFrameID = date_range.date_day\r\n  ),  \r\nSource AS\r\n( SELECT * FROM  {{ ref('Fact_Sales_Segmented_History') }}\r\n),\r\nMetrics_Calc AS(\r\n    SELECT\r\n        TimeFrameID as Report_Date,\r\n        entity_code  AS entity_id,\r\n        employee_code AS employee_id,\r\n        METRIC_ID,\r\n        METRIC_CATEGORY_ID,\r\n        Segment_Name,\r\n        'D' as TimeFrame_Type,\r\n        sum(AMOUNT) as AMOUNT,\r\n        sum(count) as COUNT,  \r\n        Source.DW_SESSION_NM,\r\n        Source.DW_INS_UPD_DTS\r\n    from Source \r\n        join timeframe \r\n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type\r\n        join date_range\r\n        on TimeFrameID = date_range.date_day\r\n    group by\r\n        Report_Date,\r\n        entity_id,\r\n        employee_id,\r\n        METRIC_ID,\r\n        METRIC_CATEGORY_ID,\r\n        Segment_Name,\r\n        TimeFrame_Type,\r\n        Source.DW_SESSION_NM,\r\n        Source.DW_INS_UPD_DTS\r\n     Union\r\n        SELECT\r\n        TimeFrameID as Report_Date,\r\n        entity_code  AS entity_id,\r\n        employee_code AS employee_id,\r\n        METRIC_ID,\r\n        METRIC_CATEGORY_ID,\r\n        Segment_Name,\r\n        'W' as TimeFrame_Type,\r\n        sum(AMOUNT) as AMOUNT,\r\n        sum(count) as COUNT,  \r\n        Source.DW_SESSION_NM,\r\n        Source.DW_INS_UPD_DTS\r\n    from Source \r\n        join timeframe \r\n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\r\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\r\n        join date_range\r\n        on TimeFrameID = date_range.date_day        \r\n    group by\r\n        Report_Date,\r\n        entity_id,\r\n        employee_id,\r\n        METRIC_ID,\r\n        METRIC_CATEGORY_ID,\r\n        Segment_Name,\r\n        TimeFrame_Type,\r\n        Source.DW_SESSION_NM,\r\n        Source.DW_INS_UPD_DTS\r\n     Union\r\n        SELECT\r\n        TimeFrameID as Report_Date,\r\n        entity_code  AS entity_id,\r\n        employee_code AS employee_id,\r\n        METRIC_ID,\r\n        METRIC_CATEGORY_ID,\r\n        Segment_Name,\r\n        'M' as TimeFrame_Type,\r\n        sum(AMOUNT) as AMOUNT,\r\n        sum(count) as COUNT,  \r\n        Source.DW_SESSION_NM,\r\n        Source.DW_INS_UPD_DTS\r\n    from Source \r\n        join timeframe \r\n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\r\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\r\n        join date_range\r\n        on TimeFrameID = date_range.date_day        \r\n    group by\r\n        Report_Date,\r\n        entity_id,\r\n        employee_id,\r\n        METRIC_ID,\r\n        METRIC_CATEGORY_ID,\r\n        Segment_Name,\r\n        TimeFrame_Type,\r\n        Source.DW_SESSION_NM,\r\n        Source.DW_INS_UPD_DTS\r\n     Union\r\n        SELECT\r\n        TimeFrameID as Report_Date,\r\n        entity_code  AS entity_id,\r\n        employee_code AS employee_id,\r\n        METRIC_ID,\r\n        METRIC_CATEGORY_ID,\r\n        Segment_Name,\r\n        'Q' as TimeFrame_Type,\r\n        sum(AMOUNT) as AMOUNT,\r\n        sum(count) as COUNT,  \r\n        Source.DW_SESSION_NM,\r\n        Source.DW_INS_UPD_DTS\r\n    from Source \r\n        join timeframe \r\n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\r\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\r\n        join date_range\r\n        on TimeFrameID = date_range.date_day        \r\n    group by\r\n        Report_Date,\r\n        entity_id,\r\n        employee_id,\r\n        METRIC_ID,\r\n        METRIC_CATEGORY_ID,\r\n        Segment_Name,\r\n        TimeFrame_Type,\r\n        Source.DW_SESSION_NM,\r\n        Source.DW_INS_UPD_DTS\r\n     Union\r\n        SELECT\r\n        TimeFrameID as Report_Date,\r\n        entity_code  AS entity_id,\r\n        employee_code AS employee_id,\r\n        METRIC_ID,\r\n        METRIC_CATEGORY_ID,\r\n        Segment_Name,\r\n        'Y' as TimeFrame_Type,\r\n        sum(AMOUNT) as AMOUNT,\r\n        sum(count) as COUNT,  \r\n        Source.DW_SESSION_NM,\r\n        Source.DW_INS_UPD_DTS\r\n    from Source \r\n        join timeframe \r\n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\r\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\r\n        join date_range\r\n        on TimeFrameID = date_range.date_day        \r\n    group by\r\n        Report_Date,\r\n        entity_id,\r\n        employee_id,\r\n        METRIC_ID,\r\n        METRIC_CATEGORY_ID,\r\n        Segment_Name,\r\n        TimeFrame_Type,\r\n        Source.DW_SESSION_NM,\r\n        Source.DW_INS_UPD_DTS                        \r\n )\r\n \r\nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \r\n        nvl(AMOUNT/decode(count,0,1,count),0) as Average,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\r\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Fact_Sales_Segmented"], "unique_id": "model.sales_dataflo.Fact_Sales_Segmented", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Fact_Sales_Segmented.sql", "original_file_path": "ETL/Target/Tables/Fact_Sales_Segmented.sql", "name": "Fact_Sales_Segmented", "resource_type": "model", "alias": "Fact_Sales_Segmented", "checksum": {"name": "sha256", "checksum": "6f6d36a89e12e622d33a93a06aa4a97471b27e0dd7b9938fef52231b2f63c61d"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["Dim_TimeFrame"], ["Fact_Sales_Segmented_History"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.date_spine", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Fact_Sales_Segmented_History"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Fact_Sales_Segmented.sql", "deferred": false, "compiled_sql": "\n\nwith date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Fact_Sales_Segmented_History\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n        employee_code AS employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n        employee_code AS employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day        \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n        employee_code AS employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day        \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n        employee_code AS employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day        \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n        employee_code AS employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day        \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 729\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/12/2018', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Fact_Sales_Segmented_History\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n        employee_code AS employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n        employee_code AS employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day        \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n        employee_code AS employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day        \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n        employee_code AS employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day        \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n        employee_code AS employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day        \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type"}, "error": null, "status": "SUCCESS 1", "execution_time": 1011.9522681236267, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-10T18:15:25.865657Z", "completed_at": "2021-02-10T18:15:26.605714Z"}, {"name": "execute", "started_at": "2021-02-10T18:15:26.606125Z", "completed_at": "2021-02-10T18:32:17.737368Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2021-02-10T18:32:18.648103Z", "elapsed_time": 1780.8215117454529}