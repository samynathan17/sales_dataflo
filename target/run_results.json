{"logs": [], "results": [{"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'Account_ID'\r\n      )\r\n}}\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Account') }}\r\n  ),\r\nDIM_ACCOUNT as (\r\n      select\r\n        Account_ID,\r\n        NAME Account_Name,\r\n        TYPE Account_Type,\r\n        Source_ID,\r\n        IS_DELETED Active_Flag,\r\n        --ACCOUNT_NUMBER AS ACCOUNT_NUMBER,\r\n        INDUSTRY INDUSTRY,\r\n        ANNUAL_REVENUE AS ANNUAL_REVENUE,\r\n        OWNER_ID AS Employee_ID,\r\n        CREATED_DATE as INITIAL_CREATE_DT,\r\n        Source_type Source_type,\r\n        'D_ACCOUNT_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_ACCOUNT", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Sales", "Dim_Account"], "unique_id": "model.sales_dataflo.Dim_Account", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Sales/Dim_Account.sql", "original_file_path": "ETL/Target/Tables/Sales/Dim_Account.sql", "name": "Dim_Account", "resource_type": "model", "alias": "Dim_Account", "checksum": {"name": "sha256", "checksum": "5c9a54ff16f32f3b0144c362ea79e616ec51a340221117f4b4524bde77b6dba0"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert", "unique_key": "Account_ID"}, "tags": [], "refs": [["Stg_Account"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_Account"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Sales/Dim_Account.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Account\n  ),\nDIM_ACCOUNT as (\n      select\n        Account_ID,\n        NAME Account_Name,\n        TYPE Account_Type,\n        Source_ID,\n        IS_DELETED Active_Flag,\n        --ACCOUNT_NUMBER AS ACCOUNT_NUMBER,\n        INDUSTRY INDUSTRY,\n        ANNUAL_REVENUE AS ANNUAL_REVENUE,\n        OWNER_ID AS Employee_ID,\n        CREATED_DATE as INITIAL_CREATE_DT,\n        Source_type Source_type,\n        'D_ACCOUNT_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_ACCOUNT", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Account\n  ),\nDIM_ACCOUNT as (\n      select\n        Account_ID,\n        NAME Account_Name,\n        TYPE Account_Type,\n        Source_ID,\n        IS_DELETED Active_Flag,\n        --ACCOUNT_NUMBER AS ACCOUNT_NUMBER,\n        INDUSTRY INDUSTRY,\n        ANNUAL_REVENUE AS ANNUAL_REVENUE,\n        OWNER_ID AS Employee_ID,\n        CREATED_DATE as INITIAL_CREATE_DT,\n        Source_type Source_type,\n        'D_ACCOUNT_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_ACCOUNT"}, "error": null, "status": "SUCCESS 191439", "execution_time": 7.466007471084595, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:25:26.309348Z", "completed_at": "2021-05-25T04:25:26.346085Z"}, {"name": "execute", "started_at": "2021-05-25T04:25:26.346497Z", "completed_at": "2021-05-25T04:25:33.351613Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'contact_id'\r\n      )\r\n}}\r\n\r\nWITH contacts AS (\r\n       select * from {{ ref('Stg_Contact') }} \r\n    ),\r\nDim_Contact as(\r\n      SELECT \r\n        contact_id, \r\n        contacts.salutation AS salutation, \r\n        contacts.NAME AS contact_name, \r\n        contacts.last_name AS last_name, \r\n        contacts.first_name AS first_name, \r\n        contacts.phone AS contact_number, \r\n        contacts.mobile_phone AS mobile_phone, \r\n        contacts.home_phone AS home_phone, \r\n        contacts.email AS contact_email, \r\n        source_id, \r\n        contacts.department AS department, \r\n        contacts.lead_source AS lead_source, \r\n        null AS organization_id, \r\n        contacts.owner_ID AS employee_id, \r\n        contacts.account_id AS account_id, \r\n        NULL AS contact_age_group, \r\n        NULL AS contact_income, \r\n        NULL AS dependent, \r\n        NULL AS contact_type, \r\n        contacts.IS_DELETED AS active,\r\n        CREATED_DATE as INITIAL_CREATE_DT,\r\n        Source_type AS Source_type,\r\n        'D_CONTACT_DIM_LOAD' AS dw_session_nm, \r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n     FROM \r\n       contacts\r\n    )    \r\n    \r\nselect * from Dim_Contact", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Sales", "Dim_Contact"], "unique_id": "model.sales_dataflo.Dim_Contact", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Sales/Dim_Contact.sql", "original_file_path": "ETL/Target/Tables/Sales/Dim_Contact.sql", "name": "Dim_Contact", "resource_type": "model", "alias": "Dim_Contact", "checksum": {"name": "sha256", "checksum": "341432165bb39279b7efc0ed816593192585e3f2d1b29790dcc2254e2b845d5c"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert", "unique_key": "contact_id"}, "tags": [], "refs": [["Stg_Contact"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_Contact"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Sales/Dim_Contact.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH contacts AS (\n       select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Contact \n    ),\nDim_Contact as(\n      SELECT \n        contact_id, \n        contacts.salutation AS salutation, \n        contacts.NAME AS contact_name, \n        contacts.last_name AS last_name, \n        contacts.first_name AS first_name, \n        contacts.phone AS contact_number, \n        contacts.mobile_phone AS mobile_phone, \n        contacts.home_phone AS home_phone, \n        contacts.email AS contact_email, \n        source_id, \n        contacts.department AS department, \n        contacts.lead_source AS lead_source, \n        null AS organization_id, \n        contacts.owner_ID AS employee_id, \n        contacts.account_id AS account_id, \n        NULL AS contact_age_group, \n        NULL AS contact_income, \n        NULL AS dependent, \n        NULL AS contact_type, \n        contacts.IS_DELETED AS active,\n        CREATED_DATE as INITIAL_CREATE_DT,\n        Source_type AS Source_type,\n        'D_CONTACT_DIM_LOAD' AS dw_session_nm, \n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n     FROM \n       contacts\n    )    \n    \nselect * from Dim_Contact", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH contacts AS (\n       select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Contact \n    ),\nDim_Contact as(\n      SELECT \n        contact_id, \n        contacts.salutation AS salutation, \n        contacts.NAME AS contact_name, \n        contacts.last_name AS last_name, \n        contacts.first_name AS first_name, \n        contacts.phone AS contact_number, \n        contacts.mobile_phone AS mobile_phone, \n        contacts.home_phone AS home_phone, \n        contacts.email AS contact_email, \n        source_id, \n        contacts.department AS department, \n        contacts.lead_source AS lead_source, \n        null AS organization_id, \n        contacts.owner_ID AS employee_id, \n        contacts.account_id AS account_id, \n        NULL AS contact_age_group, \n        NULL AS contact_income, \n        NULL AS dependent, \n        NULL AS contact_type, \n        contacts.IS_DELETED AS active,\n        CREATED_DATE as INITIAL_CREATE_DT,\n        Source_type AS Source_type,\n        'D_CONTACT_DIM_LOAD' AS dw_session_nm, \n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n     FROM \n       contacts\n    )    \n    \nselect * from Dim_Contact"}, "error": null, "status": "SUCCESS 919360", "execution_time": 13.75521469116211, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:25:33.777964Z", "completed_at": "2021-05-25T04:25:33.804545Z"}, {"name": "execute", "started_at": "2021-05-25T04:25:33.804936Z", "completed_at": "2021-05-25T04:25:47.106703Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'employee_id'\r\n      )\r\n}}\r\n(With user AS(\r\n    select *  from {{ ref('Stg_User') }}\r\n),usr_role AS(\r\n    select *  from {{ ref('Stg_User_Role') }}\r\n),Dim_Employee AS(\r\n SELECT\r\n   cast(user.Source_ID || user.Source_type as varchar(100)) AS employee_id,\r\n   cast(user.Source_ID as varchar(100)) AS source_Emp_id,\r\n   user.Source_type AS Entity_id, \r\n   Null AS org_name,\r\n   NULL AS employee_code,\r\n   FIRST_NAME AS first_name,\r\n   NULL AS middle_name,\r\n   LAST_NAME AS last_name,\r\n   NULL AS emp_full_nm,\r\n   NULL AS emp_role_id,\r\n   NULL AS emp_position_level,\r\n   NULL  AS emp_gender,\r\n   NULL AS emp_phone_number,\r\n   EMAIL AS emp_email,\r\n   NULL AS sales_branch_id,\r\n   NULL AS sales_branch_name,\r\n   NULL AS sales_region_id,\r\n   NULL AS sales_region_name,\r\n   NULL AS sales_zone_id,\r\n   NULL AS sales_zone_name,\r\n   NULL AS business_unit_id,\r\n   NULL AS business_unit_name,\r\n   NULL AS emp_create_dt,\r\n   NULL AS emp_last_update_dt,\r\n   NULL AS mngr_emp_id,\r\n   NULL AS mngr_position_level,\r\n   NULL AS mngr_role_id,\r\n   NULL AS emp_financial_year_start,\r\n   NULL AS emp_start_of_week,\r\n   NULL AS Weekly_working_days,\r\n   IS_ACTIVE AS  emp_active,\r\n   'D_EMPLOYEE_DIM_LOAD' AS DW_SESSION_NM,\r\n   {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n  FROM\r\n      user left join usr_role  on user.USER_ROLE_ID = usr_role.Source_ID\r\n      and user.source_type = usr_role.source_type\r\n)\r\n\r\nselect * from Dim_Employee)\r\n\r\nunion all\r\n\r\n(With user AS(\r\n    select *  from {{ ref('Stg_Owner') }}\r\n),Dim_Employee AS(\r\n SELECT\r\n   cast(Source_OWNER_ID || Source_type  as varchar(100)) AS employee_id,\r\n   cast (Source_OWNER_ID as varchar(100)) AS source_Emp_id,\r\n   Source_type AS Entity_id, \r\n   Null AS org_name,\r\n   NULL AS employee_code,\r\n   FIRST_NAME AS first_name,\r\n   NULL AS middle_name,\r\n   LAST_NAME AS last_name,\r\n   NULL AS emp_full_nm,\r\n   NULL AS emp_role_id,\r\n   NULL AS emp_position_level,\r\n   NULL  AS emp_gender,\r\n   NULL AS emp_phone_number,\r\n   EMAIL AS emp_email,\r\n   NULL AS sales_branch_id,\r\n   NULL AS sales_branch_name,\r\n   NULL AS sales_region_id,\r\n   NULL AS sales_region_name,\r\n   NULL AS sales_zone_id,\r\n   NULL AS sales_zone_name,\r\n   NULL AS business_unit_id,\r\n   NULL AS business_unit_name,\r\n   NULL AS emp_create_dt,\r\n   NULL AS emp_last_update_dt,\r\n   NULL AS mngr_emp_id,\r\n   NULL AS mngr_position_level,\r\n   NULL AS mngr_role_id,\r\n   NULL AS emp_financial_year_start,\r\n   NULL AS emp_start_of_week,\r\n   NULL AS Weekly_working_days,\r\n   IS_ACTIVE AS  emp_active,\r\n   'D_EMPLOYEE_DIM_LOAD' AS DW_SESSION_NM,\r\n   {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n  FROM\r\n      user\r\n)\r\n\r\nselect * from Dim_Employee)", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Sales", "Dim_Employee"], "unique_id": "model.sales_dataflo.Dim_Employee", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Sales/Dim_Employee.sql", "original_file_path": "ETL/Target/Tables/Sales/Dim_Employee.sql", "name": "Dim_Employee", "resource_type": "model", "alias": "Dim_Employee", "checksum": {"name": "sha256", "checksum": "2e4b00a6415c7c9ea535596165361a87932d08eb834ac25988ba3fc4c133a280"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert", "unique_key": "employee_id"}, "tags": [], "refs": [["Stg_User"], ["Stg_User_Role"], ["Stg_Owner"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_User", "model.sales_dataflo.Stg_User_Role", "model.sales_dataflo.Stg_Owner"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Sales/Dim_Employee.sql", "deferred": false, "compiled_sql": "\n\n\n(With user AS(\n    select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_User\n),usr_role AS(\n    select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_User_Role\n),Dim_Employee AS(\n SELECT\n   cast(user.Source_ID || user.Source_type as varchar(100)) AS employee_id,\n   cast(user.Source_ID as varchar(100)) AS source_Emp_id,\n   user.Source_type AS Entity_id, \n   Null AS org_name,\n   NULL AS employee_code,\n   FIRST_NAME AS first_name,\n   NULL AS middle_name,\n   LAST_NAME AS last_name,\n   NULL AS emp_full_nm,\n   NULL AS emp_role_id,\n   NULL AS emp_position_level,\n   NULL  AS emp_gender,\n   NULL AS emp_phone_number,\n   EMAIL AS emp_email,\n   NULL AS sales_branch_id,\n   NULL AS sales_branch_name,\n   NULL AS sales_region_id,\n   NULL AS sales_region_name,\n   NULL AS sales_zone_id,\n   NULL AS sales_zone_name,\n   NULL AS business_unit_id,\n   NULL AS business_unit_name,\n   NULL AS emp_create_dt,\n   NULL AS emp_last_update_dt,\n   NULL AS mngr_emp_id,\n   NULL AS mngr_position_level,\n   NULL AS mngr_role_id,\n   NULL AS emp_financial_year_start,\n   NULL AS emp_start_of_week,\n   NULL AS Weekly_working_days,\n   IS_ACTIVE AS  emp_active,\n   'D_EMPLOYEE_DIM_LOAD' AS DW_SESSION_NM,\n   \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n  FROM\n      user left join usr_role  on user.USER_ROLE_ID = usr_role.Source_ID\n      and user.source_type = usr_role.source_type\n)\n\nselect * from Dim_Employee)\n\nunion all\n\n(With user AS(\n    select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Owner\n),Dim_Employee AS(\n SELECT\n   cast(Source_OWNER_ID || Source_type  as varchar(100)) AS employee_id,\n   cast (Source_OWNER_ID as varchar(100)) AS source_Emp_id,\n   Source_type AS Entity_id, \n   Null AS org_name,\n   NULL AS employee_code,\n   FIRST_NAME AS first_name,\n   NULL AS middle_name,\n   LAST_NAME AS last_name,\n   NULL AS emp_full_nm,\n   NULL AS emp_role_id,\n   NULL AS emp_position_level,\n   NULL  AS emp_gender,\n   NULL AS emp_phone_number,\n   EMAIL AS emp_email,\n   NULL AS sales_branch_id,\n   NULL AS sales_branch_name,\n   NULL AS sales_region_id,\n   NULL AS sales_region_name,\n   NULL AS sales_zone_id,\n   NULL AS sales_zone_name,\n   NULL AS business_unit_id,\n   NULL AS business_unit_name,\n   NULL AS emp_create_dt,\n   NULL AS emp_last_update_dt,\n   NULL AS mngr_emp_id,\n   NULL AS mngr_position_level,\n   NULL AS mngr_role_id,\n   NULL AS emp_financial_year_start,\n   NULL AS emp_start_of_week,\n   NULL AS Weekly_working_days,\n   IS_ACTIVE AS  emp_active,\n   'D_EMPLOYEE_DIM_LOAD' AS DW_SESSION_NM,\n   \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n  FROM\n      user\n)\n\nselect * from Dim_Employee)", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n(With user AS(\n    select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_User\n),usr_role AS(\n    select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_User_Role\n),Dim_Employee AS(\n SELECT\n   cast(user.Source_ID || user.Source_type as varchar(100)) AS employee_id,\n   cast(user.Source_ID as varchar(100)) AS source_Emp_id,\n   user.Source_type AS Entity_id, \n   Null AS org_name,\n   NULL AS employee_code,\n   FIRST_NAME AS first_name,\n   NULL AS middle_name,\n   LAST_NAME AS last_name,\n   NULL AS emp_full_nm,\n   NULL AS emp_role_id,\n   NULL AS emp_position_level,\n   NULL  AS emp_gender,\n   NULL AS emp_phone_number,\n   EMAIL AS emp_email,\n   NULL AS sales_branch_id,\n   NULL AS sales_branch_name,\n   NULL AS sales_region_id,\n   NULL AS sales_region_name,\n   NULL AS sales_zone_id,\n   NULL AS sales_zone_name,\n   NULL AS business_unit_id,\n   NULL AS business_unit_name,\n   NULL AS emp_create_dt,\n   NULL AS emp_last_update_dt,\n   NULL AS mngr_emp_id,\n   NULL AS mngr_position_level,\n   NULL AS mngr_role_id,\n   NULL AS emp_financial_year_start,\n   NULL AS emp_start_of_week,\n   NULL AS Weekly_working_days,\n   IS_ACTIVE AS  emp_active,\n   'D_EMPLOYEE_DIM_LOAD' AS DW_SESSION_NM,\n   \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n  FROM\n      user left join usr_role  on user.USER_ROLE_ID = usr_role.Source_ID\n      and user.source_type = usr_role.source_type\n)\n\nselect * from Dim_Employee)\n\nunion all\n\n(With user AS(\n    select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Owner\n),Dim_Employee AS(\n SELECT\n   cast(Source_OWNER_ID || Source_type  as varchar(100)) AS employee_id,\n   cast (Source_OWNER_ID as varchar(100)) AS source_Emp_id,\n   Source_type AS Entity_id, \n   Null AS org_name,\n   NULL AS employee_code,\n   FIRST_NAME AS first_name,\n   NULL AS middle_name,\n   LAST_NAME AS last_name,\n   NULL AS emp_full_nm,\n   NULL AS emp_role_id,\n   NULL AS emp_position_level,\n   NULL  AS emp_gender,\n   NULL AS emp_phone_number,\n   EMAIL AS emp_email,\n   NULL AS sales_branch_id,\n   NULL AS sales_branch_name,\n   NULL AS sales_region_id,\n   NULL AS sales_region_name,\n   NULL AS sales_zone_id,\n   NULL AS sales_zone_name,\n   NULL AS business_unit_id,\n   NULL AS business_unit_name,\n   NULL AS emp_create_dt,\n   NULL AS emp_last_update_dt,\n   NULL AS mngr_emp_id,\n   NULL AS mngr_position_level,\n   NULL AS mngr_role_id,\n   NULL AS emp_financial_year_start,\n   NULL AS emp_start_of_week,\n   NULL AS Weekly_working_days,\n   IS_ACTIVE AS  emp_active,\n   'D_EMPLOYEE_DIM_LOAD' AS DW_SESSION_NM,\n   \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n  FROM\n      user\n)\n\nselect * from Dim_Employee)"}, "error": null, "status": "SUCCESS 3540", "execution_time": 5.171178817749023, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:25:47.537639Z", "completed_at": "2021-05-25T04:25:47.569304Z"}, {"name": "execute", "started_at": "2021-05-25T04:25:47.569700Z", "completed_at": "2021-05-25T04:25:52.282329Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'lead_id'\r\n      )\r\n}}\r\n\r\n    WITH lead AS (\r\n       select *  from {{ ref('Stg_Lead') }} \r\n    ),opportunity as(\r\n        select *  from {{ ref('Stg_Opportunity') }} \r\n    ),Dim_Lead as(\r\n    SELECT\r\n        lead_id,\r\n        lead.LEAD_SOURCE AS LEAD_SOURCE,\r\n        lead.source_id as Source_ID,\r\n        concat(lead.street,' ',lead.city,' ',lead.state,' ',lead.postal_code,' ',lead.country) AS lead_contact_address,\r\n        lead.country AS country,\r\n        lead.TITLE AS TITLE,\r\n        lead.STATUS AS STATUS,\r\n        opportunity.STAGE_NAME AS STAGE_NAME,\r\n        NULL AS product_id,\r\n        NULL AS campaign_id,\r\n        lead.IS_CONVERTED AS lead_to_opp_flag,\r\n        NULL AS lead_lost_flag,\r\n        lead.CONVERTED_DATE AS lead_CONVERTED_DATE,\r\n        lead.CONVERTED_OPPORTUNITY_ID AS CONVERTED_OPPORTUNITY_ID,\r\n        NULL AS lead_lost_dt,\r\n        NULL AS lead_lost_reason,\r\n        lead.ANNUAL_REVENUE,\r\n        lead.NUMBER_OF_EMPLOYEES,\r\n        lead.INDUSTRY AS Industry,\r\n        LEAD.owner_id AS employee_id,\r\n        lead.CREATED_DATE as INITIAL_CREATE_DT,\r\n        lead.LAST_MODIFIED_DATE as lead_LAST_MODIFIED_DATE,\r\n        lead.Source_type AS Source_type,\r\n        'D_LEAD_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n        FROM\r\n          lead left join opportunity on lead.CONVERTED_OPPORTUNITY_ID = opportunity.Source_ID \r\n          and lead.Source_type = opportunity.Source_type\r\n    )    \r\n \r\nselect * from Dim_Lead", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Sales", "Dim_Lead"], "unique_id": "model.sales_dataflo.Dim_Lead", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Sales/Dim_Lead.sql", "original_file_path": "ETL/Target/Tables/Sales/Dim_Lead.sql", "name": "Dim_Lead", "resource_type": "model", "alias": "Dim_Lead", "checksum": {"name": "sha256", "checksum": "eb4c484769d0ce506e54a6b1868c54b7dfd8516271ca8c82b04b4072f26e1c8a"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert", "unique_key": "lead_id"}, "tags": [], "refs": [["Stg_Lead"], ["Stg_Opportunity"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_Lead", "model.sales_dataflo.Stg_Opportunity"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Sales/Dim_Lead.sql", "deferred": false, "compiled_sql": "\n\n\n\n    WITH lead AS (\n       select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Lead \n    ),opportunity as(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity \n    ),Dim_Lead as(\n    SELECT\n        lead_id,\n        lead.LEAD_SOURCE AS LEAD_SOURCE,\n        lead.source_id as Source_ID,\n        concat(lead.street,' ',lead.city,' ',lead.state,' ',lead.postal_code,' ',lead.country) AS lead_contact_address,\n        lead.country AS country,\n        lead.TITLE AS TITLE,\n        lead.STATUS AS STATUS,\n        opportunity.STAGE_NAME AS STAGE_NAME,\n        NULL AS product_id,\n        NULL AS campaign_id,\n        lead.IS_CONVERTED AS lead_to_opp_flag,\n        NULL AS lead_lost_flag,\n        lead.CONVERTED_DATE AS lead_CONVERTED_DATE,\n        lead.CONVERTED_OPPORTUNITY_ID AS CONVERTED_OPPORTUNITY_ID,\n        NULL AS lead_lost_dt,\n        NULL AS lead_lost_reason,\n        lead.ANNUAL_REVENUE,\n        lead.NUMBER_OF_EMPLOYEES,\n        lead.INDUSTRY AS Industry,\n        LEAD.owner_id AS employee_id,\n        lead.CREATED_DATE as INITIAL_CREATE_DT,\n        lead.LAST_MODIFIED_DATE as lead_LAST_MODIFIED_DATE,\n        lead.Source_type AS Source_type,\n        'D_LEAD_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n        FROM\n          lead left join opportunity on lead.CONVERTED_OPPORTUNITY_ID = opportunity.Source_ID \n          and lead.Source_type = opportunity.Source_type\n    )    \n \nselect * from Dim_Lead", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n    WITH lead AS (\n       select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Lead \n    ),opportunity as(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity \n    ),Dim_Lead as(\n    SELECT\n        lead_id,\n        lead.LEAD_SOURCE AS LEAD_SOURCE,\n        lead.source_id as Source_ID,\n        concat(lead.street,' ',lead.city,' ',lead.state,' ',lead.postal_code,' ',lead.country) AS lead_contact_address,\n        lead.country AS country,\n        lead.TITLE AS TITLE,\n        lead.STATUS AS STATUS,\n        opportunity.STAGE_NAME AS STAGE_NAME,\n        NULL AS product_id,\n        NULL AS campaign_id,\n        lead.IS_CONVERTED AS lead_to_opp_flag,\n        NULL AS lead_lost_flag,\n        lead.CONVERTED_DATE AS lead_CONVERTED_DATE,\n        lead.CONVERTED_OPPORTUNITY_ID AS CONVERTED_OPPORTUNITY_ID,\n        NULL AS lead_lost_dt,\n        NULL AS lead_lost_reason,\n        lead.ANNUAL_REVENUE,\n        lead.NUMBER_OF_EMPLOYEES,\n        lead.INDUSTRY AS Industry,\n        LEAD.owner_id AS employee_id,\n        lead.CREATED_DATE as INITIAL_CREATE_DT,\n        lead.LAST_MODIFIED_DATE as lead_LAST_MODIFIED_DATE,\n        lead.Source_type AS Source_type,\n        'D_LEAD_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n        FROM\n          lead left join opportunity on lead.CONVERTED_OPPORTUNITY_ID = opportunity.Source_ID \n          and lead.Source_type = opportunity.Source_type\n    )    \n \nselect * from Dim_Lead"}, "error": null, "status": "SUCCESS 551062", "execution_time": 9.99954080581665, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:25:52.711375Z", "completed_at": "2021-05-25T04:25:52.738880Z"}, {"name": "execute", "started_at": "2021-05-25T04:25:52.739175Z", "completed_at": "2021-05-25T04:26:02.283596Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n)\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'opportunity_id'\r\n      )\r\n}}\r\n(\r\nWITH OPPORTUNITY AS (\r\n       select *  from {{ ref('Stg_Opportunity') }}  \r\n    ),contact AS(\r\n        select *  from {{ ref('Stg_Contact') }}    \r\n    ),\r\n    emp AS(\r\n        select *  from {{ ref('Stg_User') }}    \r\n    ),\r\n    OPPORTUNITY_STAGE AS(\r\n        select *  from {{ ref('Stg_Opportunity_Stage') }}   \r\n    )\r\n    ,Dim_Opportunity as(\r\n    SELECT\r\n        cast ( opportunity_id as varchar(100)) AS opportunity_id,\r\n        OPPORTUNITY.NAME AS opportunity_NAME,\r\n        OPPORTUNITY.TYPE AS opportunity_Type, \r\n        cast ( OPPORTUNITY.ACCOUNT_ID as varchar(50)) AS ACCOUNT_ID,        \r\n        cast ( OPPORTUNITY.OWNER_ID  as varchar(50)) AS employee_id,\r\n        cast ( OPPORTUNITY.Source_id as varchar(50)) AS Source_id,\r\n        OPPORTUNITY_STAGE.SORT_ORDER AS stage_id,\r\n        OPPORTUNITY.IS_WON AS IS_WON,\r\n        OPPORTUNITY.IS_CLOSED AS IS_CLOSED,\r\n        OPPORTUNITY.stage_name AS stage_name,\r\n        --   OPPORTUNITY.PROBABILITY as PROBABILITY,        \r\n        OPPORTUNITY.FORECAST_CATEGORY AS FORECAST_CATEGORY,\r\n        OPPORTUNITY.AMOUNT AS AMOUNT,\r\n        OPPORTUNITY.CURRENCY_ISO_CODE as Transactional_Currency,\r\n        1 as Exch_Rate,\r\n        Reporting_Currency as Reporting_Currency,\r\n        NULL AS amount_without_disc,\r\n        NULL AS expectd_Clouser_Dt,\r\n        OPPORTUNITY.CONTACT_ID AS Contact_id,\r\n        contact.NAME AS contact_name,\r\n        contact.PHONE AS contact_number,\r\n        contact.EMAIL AS contact_email,\r\n        contact.MAILING_STREET AS contact_address,\r\n        OPPORTUNITY.CREATED_DATE AS initial_create_dt,\r\n        OPPORTUNITY.LAST_MODIFIED_DATE AS last_updated_dt,\r\n        OPPORTUNITY.CLOSE_DATE AS CLOSE_DATE,\r\n        NULL AS prospect_Dt,\r\n        NULL AS stage_calc_id,\r\n        OPPORTUNITY_STAGE.CREATED_DATE AS stage_start_dt,\r\n        NULL AS stage_end_dt,        \r\n        NULL AS lead_lost_reason,\r\n        NULL AS competitor,\r\n        NULL AS on_hold_flag,\r\n        NULL AS sub_product_id,\r\n        NULL AS sub_product_name,\r\n        NULL AS prd_amount_without_disc,\r\n        NULL AS prd_discount,\r\n        OPPORTUNITY.IS_DELETED AS active_flag,\r\n        NULL AS DW_CURR_FLG,\r\n        NULL AS EFFCT_START_DATE,\r\n        NULL AS EFFCT_END_DATE,\r\n        OPPORTUNITY.Source_type AS Source_type,\r\n        'D_OPPORTUNITY_DIM_LOAD'  AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS\r\n      FROM\r\n        OPPORTUNITY \r\n        left join emp on OPPORTUNITY.OWNER_ID  =  emp.Source_ID and emp.Source_type = OPPORTUNITY.Source_type \r\n        left join contact on emp.contact_id  =  contact.Source_ID and contact.Source_type = OPPORTUNITY.Source_type\r\n        left join OPPORTUNITY_STAGE on OPPORTUNITY.stage_name = OPPORTUNITY_STAGE.MASTER_LABEL \r\n        and OPPORTUNITY_STAGE.Source_type = OPPORTUNITY.Source_type\r\n    ) \r\nselect * from Dim_Opportunity )   \r\n\r\nunion all\r\n(WITH OPPORTUNITY AS (\r\n       select *  from {{ ref('Stg_Deal') }}  \r\n    ),\r\n    emp AS(\r\n        select *  from {{ ref('Stg_Owner') }}    \r\n    ),\r\n    OPPORTUNITY_STG AS(\r\n        select *  from {{ ref('Stg_Deal_Stage') }}    \r\n    ),\r\n    OPPORTUNITY_PIPELINE_STAGE AS(\r\n        select *  from {{ ref('Stg_Deal_Pipeline_Stage') }}   \r\n    )\r\n    ,Dim_Opportunity as(\r\n    SELECT\r\n        cast (OPPORTUNITY.DEAL_ID as varchar(100)) as opportunity_id,\r\n        OPPORTUNITY.PROPERTY_DEALNAME AS opportunity_NAME,\r\n        NULL AS opportunity_Type, \r\n        NULL AS ACCOUNT_ID,        \r\n        cast (OPPORTUNITY.OWNER_ID as varchar(50)) AS employee_id,\r\n        cast (OPPORTUNITY.Source_DEAL_ID as varchar(50)) AS Source_id,\r\n        OPPORTUNITY_PIPELINE_STAGE.DISPLAY_ORDER AS stage_id,\r\n        case when Upper(DEAL_PIPELINE_STAGE_ID) like '%CLOSED%WON%' then 'TRUE'\r\n        when Upper(DEAL_PIPELINE_STAGE_ID) like '%CLOSED%LOS%' then 'FALSE'\r\n        else NULL end as IS_WON,\r\n        OPPORTUNITY.PROPERTY_HS_IS_CLOSED AS IS_CLOSED,\r\n        OPPORTUNITY.DEAL_PIPELINE_STAGE_ID AS stage_name,\r\n        --   OPPORTUNITY.PROBABILITY as PROBABILITY,        \r\n        NULL AS FORECAST_CATEGORY,\r\n        OPPORTUNITY.PROPERTY_AMOUNT AS AMOUNT,\r\n        NULL as Transactional_Currency,\r\n        Null as Exch_Rate,\r\n        NULL as Reporting_Currency,\r\n        NULL AS amount_without_disc,\r\n        NULL AS expectd_Clouser_Dt,\r\n        NULL AS Contact_id,\r\n        NULL AS contact_name,\r\n        NULL AS contact_number,\r\n        NULL AS contact_email,\r\n        NULL AS contact_address,\r\n        OPPORTUNITY.PROPERTY_CREATEDATE AS initial_create_dt,\r\n        NULL AS last_updated_dt,\r\n        OPPORTUNITY.PROPERTY_CLOSEDATE AS CLOSE_DATE,\r\n        NULL AS prospect_Dt,\r\n        NULL AS stage_calc_id,\r\n        OPPORTUNITY.PROPERTY_HS_CREATEDATE AS stage_start_dt,\r\n        NULL AS stage_end_dt,        \r\n        NULL AS lead_lost_reason,\r\n        OPPORTUNITY_STG.Source  AS competitor,\r\n        NULL AS on_hold_flag,\r\n        NULL AS sub_product_id,\r\n        NULL AS sub_product_name,\r\n        NULL AS prd_amount_without_disc,\r\n        NULL AS prd_discount,\r\n        NULL AS active_flag,\r\n        NULL AS DW_CURR_FLG,\r\n        NULL AS EFFCT_START_DATE,\r\n        NULL AS EFFCT_END_DATE,\r\n        OPPORTUNITY.Source_type AS Source_type,\r\n        'D_OPPORTUNITY_DIM_LOAD'  AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS  \r\n      FROM\r\n        OPPORTUNITY \r\n        left join emp on OPPORTUNITY.Owner_id  =  emp.Source_OWNER_ID and emp.Source_type = OPPORTUNITY.Source_type\r\n        left join OPPORTUNITY_PIPELINE_STAGE on OPPORTUNITY.DEAL_PIPELINE_STAGE_ID = OPPORTUNITY_PIPELINE_STAGE.SOURCE_STAGE_ID \r\n        and OPPORTUNITY_PIPELINE_STAGE.Source_type = OPPORTUNITY.Source_type\r\n        left join OPPORTUNITY_STG on OPPORTUNITY_STG.SOURCE_DEAL_ID = OPPORTUNITY.Source_DEAL_ID \r\n        and OPPORTUNITY_STG.Source_type = OPPORTUNITY.Source_type and OPPORTUNITY.DEAL_PIPELINE_STAGE_ID = OPPORTUNITY_STG.VALUE\r\n    )  \r\nselect * from Dim_Opportunity )", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Sales", "Dim_Opportunity"], "unique_id": "model.sales_dataflo.Dim_Opportunity", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Sales/Dim_Opportunity.sql", "original_file_path": "ETL/Target/Tables/Sales/Dim_Opportunity.sql", "name": "Dim_Opportunity", "resource_type": "model", "alias": "Dim_Opportunity", "checksum": {"name": "sha256", "checksum": "0cb9a0cec7f1a74989f66eab9132c0f15d41d1337567159f6f523f864f2a0c06"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert", "unique_key": "opportunity_id"}, "tags": [], "refs": [["Stg_Opportunity"], ["Stg_Contact"], ["Stg_User"], ["Stg_Opportunity_Stage"], ["Stg_Deal"], ["Stg_Owner"], ["Stg_Deal_Stage"], ["Stg_Deal_Pipeline_Stage"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_Opportunity", "model.sales_dataflo.Stg_Contact", "model.sales_dataflo.Stg_User", "model.sales_dataflo.Stg_Opportunity_Stage", "model.sales_dataflo.Stg_Deal", "model.sales_dataflo.Stg_Owner", "model.sales_dataflo.Stg_Deal_Stage", "model.sales_dataflo.Stg_Deal_Pipeline_Stage"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Sales/Dim_Opportunity.sql", "deferred": false, "compiled_sql": "\n\n\n(\nWITH OPPORTUNITY AS (\n       select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity  \n    ),contact AS(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Contact    \n    ),\n    emp AS(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_User    \n    ),\n    OPPORTUNITY_STAGE AS(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity_Stage   \n    )\n    ,Dim_Opportunity as(\n    SELECT\n        cast ( opportunity_id as varchar(100)) AS opportunity_id,\n        OPPORTUNITY.NAME AS opportunity_NAME,\n        OPPORTUNITY.TYPE AS opportunity_Type, \n        cast ( OPPORTUNITY.ACCOUNT_ID as varchar(50)) AS ACCOUNT_ID,        \n        cast ( OPPORTUNITY.OWNER_ID  as varchar(50)) AS employee_id,\n        cast ( OPPORTUNITY.Source_id as varchar(50)) AS Source_id,\n        OPPORTUNITY_STAGE.SORT_ORDER AS stage_id,\n        OPPORTUNITY.IS_WON AS IS_WON,\n        OPPORTUNITY.IS_CLOSED AS IS_CLOSED,\n        OPPORTUNITY.stage_name AS stage_name,\n        --   OPPORTUNITY.PROBABILITY as PROBABILITY,        \n        OPPORTUNITY.FORECAST_CATEGORY AS FORECAST_CATEGORY,\n        OPPORTUNITY.AMOUNT AS AMOUNT,\n        OPPORTUNITY.CURRENCY_ISO_CODE as Transactional_Currency,\n        1 as Exch_Rate,\n        Reporting_Currency as Reporting_Currency,\n        NULL AS amount_without_disc,\n        NULL AS expectd_Clouser_Dt,\n        OPPORTUNITY.CONTACT_ID AS Contact_id,\n        contact.NAME AS contact_name,\n        contact.PHONE AS contact_number,\n        contact.EMAIL AS contact_email,\n        contact.MAILING_STREET AS contact_address,\n        OPPORTUNITY.CREATED_DATE AS initial_create_dt,\n        OPPORTUNITY.LAST_MODIFIED_DATE AS last_updated_dt,\n        OPPORTUNITY.CLOSE_DATE AS CLOSE_DATE,\n        NULL AS prospect_Dt,\n        NULL AS stage_calc_id,\n        OPPORTUNITY_STAGE.CREATED_DATE AS stage_start_dt,\n        NULL AS stage_end_dt,        \n        NULL AS lead_lost_reason,\n        NULL AS competitor,\n        NULL AS on_hold_flag,\n        NULL AS sub_product_id,\n        NULL AS sub_product_name,\n        NULL AS prd_amount_without_disc,\n        NULL AS prd_discount,\n        OPPORTUNITY.IS_DELETED AS active_flag,\n        NULL AS DW_CURR_FLG,\n        NULL AS EFFCT_START_DATE,\n        NULL AS EFFCT_END_DATE,\n        OPPORTUNITY.Source_type AS Source_type,\n        'D_OPPORTUNITY_DIM_LOAD'  AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS\n      FROM\n        OPPORTUNITY \n        left join emp on OPPORTUNITY.OWNER_ID  =  emp.Source_ID and emp.Source_type = OPPORTUNITY.Source_type \n        left join contact on emp.contact_id  =  contact.Source_ID and contact.Source_type = OPPORTUNITY.Source_type\n        left join OPPORTUNITY_STAGE on OPPORTUNITY.stage_name = OPPORTUNITY_STAGE.MASTER_LABEL \n        and OPPORTUNITY_STAGE.Source_type = OPPORTUNITY.Source_type\n    ) \nselect * from Dim_Opportunity )   \n\nunion all\n(WITH OPPORTUNITY AS (\n       select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Deal  \n    ),\n    emp AS(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Owner    \n    ),\n    OPPORTUNITY_STG AS(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Deal_Stage    \n    ),\n    OPPORTUNITY_PIPELINE_STAGE AS(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Deal_Pipeline_Stage   \n    )\n    ,Dim_Opportunity as(\n    SELECT\n        cast (OPPORTUNITY.DEAL_ID as varchar(100)) as opportunity_id,\n        OPPORTUNITY.PROPERTY_DEALNAME AS opportunity_NAME,\n        NULL AS opportunity_Type, \n        NULL AS ACCOUNT_ID,        \n        cast (OPPORTUNITY.OWNER_ID as varchar(50)) AS employee_id,\n        cast (OPPORTUNITY.Source_DEAL_ID as varchar(50)) AS Source_id,\n        OPPORTUNITY_PIPELINE_STAGE.DISPLAY_ORDER AS stage_id,\n        case when Upper(DEAL_PIPELINE_STAGE_ID) like '%CLOSED%WON%' then 'TRUE'\n        when Upper(DEAL_PIPELINE_STAGE_ID) like '%CLOSED%LOS%' then 'FALSE'\n        else NULL end as IS_WON,\n        OPPORTUNITY.PROPERTY_HS_IS_CLOSED AS IS_CLOSED,\n        OPPORTUNITY.DEAL_PIPELINE_STAGE_ID AS stage_name,\n        --   OPPORTUNITY.PROBABILITY as PROBABILITY,        \n        NULL AS FORECAST_CATEGORY,\n        OPPORTUNITY.PROPERTY_AMOUNT AS AMOUNT,\n        NULL as Transactional_Currency,\n        Null as Exch_Rate,\n        NULL as Reporting_Currency,\n        NULL AS amount_without_disc,\n        NULL AS expectd_Clouser_Dt,\n        NULL AS Contact_id,\n        NULL AS contact_name,\n        NULL AS contact_number,\n        NULL AS contact_email,\n        NULL AS contact_address,\n        OPPORTUNITY.PROPERTY_CREATEDATE AS initial_create_dt,\n        NULL AS last_updated_dt,\n        OPPORTUNITY.PROPERTY_CLOSEDATE AS CLOSE_DATE,\n        NULL AS prospect_Dt,\n        NULL AS stage_calc_id,\n        OPPORTUNITY.PROPERTY_HS_CREATEDATE AS stage_start_dt,\n        NULL AS stage_end_dt,        \n        NULL AS lead_lost_reason,\n        OPPORTUNITY_STG.Source  AS competitor,\n        NULL AS on_hold_flag,\n        NULL AS sub_product_id,\n        NULL AS sub_product_name,\n        NULL AS prd_amount_without_disc,\n        NULL AS prd_discount,\n        NULL AS active_flag,\n        NULL AS DW_CURR_FLG,\n        NULL AS EFFCT_START_DATE,\n        NULL AS EFFCT_END_DATE,\n        OPPORTUNITY.Source_type AS Source_type,\n        'D_OPPORTUNITY_DIM_LOAD'  AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS  \n      FROM\n        OPPORTUNITY \n        left join emp on OPPORTUNITY.Owner_id  =  emp.Source_OWNER_ID and emp.Source_type = OPPORTUNITY.Source_type\n        left join OPPORTUNITY_PIPELINE_STAGE on OPPORTUNITY.DEAL_PIPELINE_STAGE_ID = OPPORTUNITY_PIPELINE_STAGE.SOURCE_STAGE_ID \n        and OPPORTUNITY_PIPELINE_STAGE.Source_type = OPPORTUNITY.Source_type\n        left join OPPORTUNITY_STG on OPPORTUNITY_STG.SOURCE_DEAL_ID = OPPORTUNITY.Source_DEAL_ID \n        and OPPORTUNITY_STG.Source_type = OPPORTUNITY.Source_type and OPPORTUNITY.DEAL_PIPELINE_STAGE_ID = OPPORTUNITY_STG.VALUE\n    )  \nselect * from Dim_Opportunity )", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n(\nWITH OPPORTUNITY AS (\n       select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity  \n    ),contact AS(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Contact    \n    ),\n    emp AS(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_User    \n    ),\n    OPPORTUNITY_STAGE AS(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity_Stage   \n    )\n    ,Dim_Opportunity as(\n    SELECT\n        cast ( opportunity_id as varchar(100)) AS opportunity_id,\n        OPPORTUNITY.NAME AS opportunity_NAME,\n        OPPORTUNITY.TYPE AS opportunity_Type, \n        cast ( OPPORTUNITY.ACCOUNT_ID as varchar(50)) AS ACCOUNT_ID,        \n        cast ( OPPORTUNITY.OWNER_ID  as varchar(50)) AS employee_id,\n        cast ( OPPORTUNITY.Source_id as varchar(50)) AS Source_id,\n        OPPORTUNITY_STAGE.SORT_ORDER AS stage_id,\n        OPPORTUNITY.IS_WON AS IS_WON,\n        OPPORTUNITY.IS_CLOSED AS IS_CLOSED,\n        OPPORTUNITY.stage_name AS stage_name,\n        --   OPPORTUNITY.PROBABILITY as PROBABILITY,        \n        OPPORTUNITY.FORECAST_CATEGORY AS FORECAST_CATEGORY,\n        OPPORTUNITY.AMOUNT AS AMOUNT,\n        OPPORTUNITY.CURRENCY_ISO_CODE as Transactional_Currency,\n        1 as Exch_Rate,\n        Reporting_Currency as Reporting_Currency,\n        NULL AS amount_without_disc,\n        NULL AS expectd_Clouser_Dt,\n        OPPORTUNITY.CONTACT_ID AS Contact_id,\n        contact.NAME AS contact_name,\n        contact.PHONE AS contact_number,\n        contact.EMAIL AS contact_email,\n        contact.MAILING_STREET AS contact_address,\n        OPPORTUNITY.CREATED_DATE AS initial_create_dt,\n        OPPORTUNITY.LAST_MODIFIED_DATE AS last_updated_dt,\n        OPPORTUNITY.CLOSE_DATE AS CLOSE_DATE,\n        NULL AS prospect_Dt,\n        NULL AS stage_calc_id,\n        OPPORTUNITY_STAGE.CREATED_DATE AS stage_start_dt,\n        NULL AS stage_end_dt,        \n        NULL AS lead_lost_reason,\n        NULL AS competitor,\n        NULL AS on_hold_flag,\n        NULL AS sub_product_id,\n        NULL AS sub_product_name,\n        NULL AS prd_amount_without_disc,\n        NULL AS prd_discount,\n        OPPORTUNITY.IS_DELETED AS active_flag,\n        NULL AS DW_CURR_FLG,\n        NULL AS EFFCT_START_DATE,\n        NULL AS EFFCT_END_DATE,\n        OPPORTUNITY.Source_type AS Source_type,\n        'D_OPPORTUNITY_DIM_LOAD'  AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS\n      FROM\n        OPPORTUNITY \n        left join emp on OPPORTUNITY.OWNER_ID  =  emp.Source_ID and emp.Source_type = OPPORTUNITY.Source_type \n        left join contact on emp.contact_id  =  contact.Source_ID and contact.Source_type = OPPORTUNITY.Source_type\n        left join OPPORTUNITY_STAGE on OPPORTUNITY.stage_name = OPPORTUNITY_STAGE.MASTER_LABEL \n        and OPPORTUNITY_STAGE.Source_type = OPPORTUNITY.Source_type\n    ) \nselect * from Dim_Opportunity )   \n\nunion all\n(WITH OPPORTUNITY AS (\n       select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Deal  \n    ),\n    emp AS(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Owner    \n    ),\n    OPPORTUNITY_STG AS(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Deal_Stage    \n    ),\n    OPPORTUNITY_PIPELINE_STAGE AS(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Deal_Pipeline_Stage   \n    )\n    ,Dim_Opportunity as(\n    SELECT\n        cast (OPPORTUNITY.DEAL_ID as varchar(100)) as opportunity_id,\n        OPPORTUNITY.PROPERTY_DEALNAME AS opportunity_NAME,\n        NULL AS opportunity_Type, \n        NULL AS ACCOUNT_ID,        \n        cast (OPPORTUNITY.OWNER_ID as varchar(50)) AS employee_id,\n        cast (OPPORTUNITY.Source_DEAL_ID as varchar(50)) AS Source_id,\n        OPPORTUNITY_PIPELINE_STAGE.DISPLAY_ORDER AS stage_id,\n        case when Upper(DEAL_PIPELINE_STAGE_ID) like '%CLOSED%WON%' then 'TRUE'\n        when Upper(DEAL_PIPELINE_STAGE_ID) like '%CLOSED%LOS%' then 'FALSE'\n        else NULL end as IS_WON,\n        OPPORTUNITY.PROPERTY_HS_IS_CLOSED AS IS_CLOSED,\n        OPPORTUNITY.DEAL_PIPELINE_STAGE_ID AS stage_name,\n        --   OPPORTUNITY.PROBABILITY as PROBABILITY,        \n        NULL AS FORECAST_CATEGORY,\n        OPPORTUNITY.PROPERTY_AMOUNT AS AMOUNT,\n        NULL as Transactional_Currency,\n        Null as Exch_Rate,\n        NULL as Reporting_Currency,\n        NULL AS amount_without_disc,\n        NULL AS expectd_Clouser_Dt,\n        NULL AS Contact_id,\n        NULL AS contact_name,\n        NULL AS contact_number,\n        NULL AS contact_email,\n        NULL AS contact_address,\n        OPPORTUNITY.PROPERTY_CREATEDATE AS initial_create_dt,\n        NULL AS last_updated_dt,\n        OPPORTUNITY.PROPERTY_CLOSEDATE AS CLOSE_DATE,\n        NULL AS prospect_Dt,\n        NULL AS stage_calc_id,\n        OPPORTUNITY.PROPERTY_HS_CREATEDATE AS stage_start_dt,\n        NULL AS stage_end_dt,        \n        NULL AS lead_lost_reason,\n        OPPORTUNITY_STG.Source  AS competitor,\n        NULL AS on_hold_flag,\n        NULL AS sub_product_id,\n        NULL AS sub_product_name,\n        NULL AS prd_amount_without_disc,\n        NULL AS prd_discount,\n        NULL AS active_flag,\n        NULL AS DW_CURR_FLG,\n        NULL AS EFFCT_START_DATE,\n        NULL AS EFFCT_END_DATE,\n        OPPORTUNITY.Source_type AS Source_type,\n        'D_OPPORTUNITY_DIM_LOAD'  AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS  \n      FROM\n        OPPORTUNITY \n        left join emp on OPPORTUNITY.Owner_id  =  emp.Source_OWNER_ID and emp.Source_type = OPPORTUNITY.Source_type\n        left join OPPORTUNITY_PIPELINE_STAGE on OPPORTUNITY.DEAL_PIPELINE_STAGE_ID = OPPORTUNITY_PIPELINE_STAGE.SOURCE_STAGE_ID \n        and OPPORTUNITY_PIPELINE_STAGE.Source_type = OPPORTUNITY.Source_type\n        left join OPPORTUNITY_STG on OPPORTUNITY_STG.SOURCE_DEAL_ID = OPPORTUNITY.Source_DEAL_ID \n        and OPPORTUNITY_STG.Source_type = OPPORTUNITY.Source_type and OPPORTUNITY.DEAL_PIPELINE_STAGE_ID = OPPORTUNITY_STG.VALUE\n    )  \nselect * from Dim_Opportunity )"}, "error": null, "status": "SUCCESS 39412", "execution_time": 6.84834623336792, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:26:02.713562Z", "completed_at": "2021-05-25T04:26:02.773866Z"}, {"name": "execute", "started_at": "2021-05-25T04:26:02.774262Z", "completed_at": "2021-05-25T04:26:09.132046Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "--depends_on: {{ ref('Stg_Period') }}\r\n--depends_on: {{ ref('Dim_Calendar') }}\r\n\r\n{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Entity_Schema')~ \".\" ~ var('V_Sales')~\" where DATASOURCE_TYPE in ('SF','HS') and READY_TO_PROCESS = 'TRUE'\", \"ENTITY_DATASORUCE_NAME||'#'||DATASOURCE_TYPE\")%}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{ config(\r\n    materialized=\"table\"\r\n) \r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n\r\n{% if V_SF_Schema != 'X' %} \r\n{% set schema_nm,entity_typ = V_SF_Schema.split('#') %}\r\n{% else %}\r\n{% set entity_typ = 'X' %}\r\n{% endif %}\r\n\r\n {% if  entity_typ == 'SF'  %}  \r\n(with year_data as \r\n(\r\n    select * from {{ ref('Stg_Period') }} \r\n    where type ='Year'\r\n    and source_type = '{{ schema_nm}}'\r\n),\r\nqutr_data as \r\n(\r\n    select * from {{ ref('Stg_Period') }} \r\n    where type ='Quarter'\r\n    and source_type = '{{ schema_nm}}'\r\n),\r\n Dates AS \r\n(\r\n    SELECT * FROM {{ ref('Dim_Calendar') }}\r\n)   \r\nselect\r\n    d.Calendar_ID AS TimeFrameID,\r\n    'D' as TimeFrameType,\r\n    d.Calendar_ID as calendar_id,\r\n    d.cldr_date as day_start,\r\n    d.cldr_date as day_end,\r\n    d.week_start_date as week_Start,\r\n    d.week_end_date as week_end,\r\n    'W' || d.cldr_week_num as week_num,\r\n    d.cldr_mnth_strt_dt as month_start,\r\n    d.cldr_mnth_end_dt as month_end, \r\n    upper(d.month_name) as month_name,\r\n     'Q' || s.number as qutr_number,\r\n    s.start_date as quarter_start,\r\n    s.end_date as quarter_end,\r\n    cast(right(y.FULLY_QUALIFIED_LABEL,4) as integer) as year,\r\n    y.start_date as year_start,\r\n    y.end_date as year_end,\r\n    case when Calendar_ID = d.week_end_date then 'TRUE' else 'FALSE' end as Weekend_FLag,\r\n    case when Calendar_ID = d.cldr_mnth_end_dt then 'TRUE' else 'FALSE' end as  Monthend_FLag,\r\n    case when Calendar_ID = s.end_date then 'TRUE' else 'FALSE' end as  Quarterend_FLag,\r\n    case when Calendar_ID = y.end_date then 'TRUE' else 'FALSE' end as  Yearend_FLag,\r\n    upper('{{ schema_nm }}') as Source_type,\r\n    'D_TIMEFRAME_DIM_LOAD' AS DW_SESSION_NM,\r\n    {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS     \r\nfrom\r\n    dates d\r\n    left join qutr_data s\r\n    on d.cldr_date between s.start_date and s.end_date\r\n    left join year_data y\r\n    on d.cldr_date between y.start_date and y.end_date\r\norder by 2)\r\n {% elif  entity_typ == 'HS'  %} \r\n (with  Dates AS \r\n(\r\n    SELECT * FROM {{ ref('Dim_Calendar') }}\r\n)   \r\nselect\r\n    d.Calendar_ID AS TimeFrameID,\r\n    'D' as TimeFrameType,\r\n    d.Calendar_ID as calendar_id,\r\n    d.cldr_date as day_start,\r\n    d.cldr_date as day_end,\r\n    d.week_start_date as week_Start,\r\n    d.week_end_date as week_end,\r\n    'W' || d.cldr_week_num as week_num,\r\n    d.cldr_mnth_strt_dt as month_start,\r\n    d.cldr_mnth_end_dt as month_end, \r\n    d.month_name as month_name,\r\n    cldr_qtr as qutr_number,\r\n    d.cldr_qtr_strt_dt as quarter_start,\r\n    d.cldr_qtr_end_dt as quarter_end,\r\n    cast(d.year as integer) as year,\r\n    d.cldr_year_start_dt as year_start,\r\n    d.cldr_year_end_dt as year_end,\r\n    case when Calendar_ID = d.week_end_date then 'TRUE' else 'FALSE' end as Weekend_FLag,\r\n    case when Calendar_ID = d.cldr_mnth_end_dt then 'TRUE' else 'FALSE' end as  Monthend_FLag,\r\n    case when Calendar_ID = d.cldr_qtr_end_dt then 'TRUE' else 'FALSE' end as  Quarterend_FLag,\r\n    case when Calendar_ID = d.cldr_year_end_dt then 'TRUE' else 'FALSE' end as  Yearend_FLag,\r\n    '{{ schema_nm }}' as Source_type,\r\n    'D_TIMEFRAME_DIM_LOAD' AS DW_SESSION_NM,\r\n    {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS     \r\nfrom\r\n    dates d\r\n order by 2)\r\n\r\n{% endif %}\r\n{% if loop.nextitem is defined %}\r\n            UNION ALL\r\n        {% endif %}\r\n\r\n{% endfor %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Sales", "Dim_TimeFrame"], "unique_id": "model.sales_dataflo.Dim_TimeFrame", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Sales/Dim_TimeFrame.sql", "original_file_path": "ETL/Target/Tables/Sales/Dim_TimeFrame.sql", "name": "Dim_TimeFrame", "resource_type": "model", "alias": "Dim_TimeFrame", "checksum": {"name": "sha256", "checksum": "05e642bc88a6d641e9febd46342b03dd9d47e303b85115359f5c8047bb3b499b"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Period"], ["Dim_Calendar"]], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_Period", "model.sales_dataflo.Dim_Calendar"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Sales/Dim_TimeFrame.sql", "deferred": false, "compiled_sql": "--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Period\n--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n\n\n\n\n\n\n\n\n\n \n\n\n\n   \n(with year_data as \n(\n    select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Period \n    where type ='Year'\n    and source_type = 'SF_RKLIVE_06012021'\n),\nqutr_data as \n(\n    select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Period \n    where type ='Quarter'\n    and source_type = 'SF_RKLIVE_06012021'\n),\n Dates AS \n(\n    SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n)   \nselect\n    d.Calendar_ID AS TimeFrameID,\n    'D' as TimeFrameType,\n    d.Calendar_ID as calendar_id,\n    d.cldr_date as day_start,\n    d.cldr_date as day_end,\n    d.week_start_date as week_Start,\n    d.week_end_date as week_end,\n    'W' || d.cldr_week_num as week_num,\n    d.cldr_mnth_strt_dt as month_start,\n    d.cldr_mnth_end_dt as month_end, \n    upper(d.month_name) as month_name,\n     'Q' || s.number as qutr_number,\n    s.start_date as quarter_start,\n    s.end_date as quarter_end,\n    cast(right(y.FULLY_QUALIFIED_LABEL,4) as integer) as year,\n    y.start_date as year_start,\n    y.end_date as year_end,\n    case when Calendar_ID = d.week_end_date then 'TRUE' else 'FALSE' end as Weekend_FLag,\n    case when Calendar_ID = d.cldr_mnth_end_dt then 'TRUE' else 'FALSE' end as  Monthend_FLag,\n    case when Calendar_ID = s.end_date then 'TRUE' else 'FALSE' end as  Quarterend_FLag,\n    case when Calendar_ID = y.end_date then 'TRUE' else 'FALSE' end as  Yearend_FLag,\n    upper('SF_RKLIVE_06012021') as Source_type,\n    'D_TIMEFRAME_DIM_LOAD' AS DW_SESSION_NM,\n    \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS     \nfrom\n    dates d\n    left join qutr_data s\n    on d.cldr_date between s.start_date and s.end_date\n    left join year_data y\n    on d.cldr_date between y.start_date and y.end_date\norder by 2)\n \n\n            UNION ALL\n        \n\n\n\n \n\n\n\n  \n (with  Dates AS \n(\n    SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n)   \nselect\n    d.Calendar_ID AS TimeFrameID,\n    'D' as TimeFrameType,\n    d.Calendar_ID as calendar_id,\n    d.cldr_date as day_start,\n    d.cldr_date as day_end,\n    d.week_start_date as week_Start,\n    d.week_end_date as week_end,\n    'W' || d.cldr_week_num as week_num,\n    d.cldr_mnth_strt_dt as month_start,\n    d.cldr_mnth_end_dt as month_end, \n    d.month_name as month_name,\n    cldr_qtr as qutr_number,\n    d.cldr_qtr_strt_dt as quarter_start,\n    d.cldr_qtr_end_dt as quarter_end,\n    cast(d.year as integer) as year,\n    d.cldr_year_start_dt as year_start,\n    d.cldr_year_end_dt as year_end,\n    case when Calendar_ID = d.week_end_date then 'TRUE' else 'FALSE' end as Weekend_FLag,\n    case when Calendar_ID = d.cldr_mnth_end_dt then 'TRUE' else 'FALSE' end as  Monthend_FLag,\n    case when Calendar_ID = d.cldr_qtr_end_dt then 'TRUE' else 'FALSE' end as  Quarterend_FLag,\n    case when Calendar_ID = d.cldr_year_end_dt then 'TRUE' else 'FALSE' end as  Yearend_FLag,\n    'HS_RKLIVE_01042021' as Source_type,\n    'D_TIMEFRAME_DIM_LOAD' AS DW_SESSION_NM,\n    \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS     \nfrom\n    dates d\n order by 2)\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Period\n--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n\n\n\n\n\n\n\n\n\n \n\n\n\n   \n(with year_data as \n(\n    select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Period \n    where type ='Year'\n    and source_type = 'SF_RKLIVE_06012021'\n),\nqutr_data as \n(\n    select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Period \n    where type ='Quarter'\n    and source_type = 'SF_RKLIVE_06012021'\n),\n Dates AS \n(\n    SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n)   \nselect\n    d.Calendar_ID AS TimeFrameID,\n    'D' as TimeFrameType,\n    d.Calendar_ID as calendar_id,\n    d.cldr_date as day_start,\n    d.cldr_date as day_end,\n    d.week_start_date as week_Start,\n    d.week_end_date as week_end,\n    'W' || d.cldr_week_num as week_num,\n    d.cldr_mnth_strt_dt as month_start,\n    d.cldr_mnth_end_dt as month_end, \n    upper(d.month_name) as month_name,\n     'Q' || s.number as qutr_number,\n    s.start_date as quarter_start,\n    s.end_date as quarter_end,\n    cast(right(y.FULLY_QUALIFIED_LABEL,4) as integer) as year,\n    y.start_date as year_start,\n    y.end_date as year_end,\n    case when Calendar_ID = d.week_end_date then 'TRUE' else 'FALSE' end as Weekend_FLag,\n    case when Calendar_ID = d.cldr_mnth_end_dt then 'TRUE' else 'FALSE' end as  Monthend_FLag,\n    case when Calendar_ID = s.end_date then 'TRUE' else 'FALSE' end as  Quarterend_FLag,\n    case when Calendar_ID = y.end_date then 'TRUE' else 'FALSE' end as  Yearend_FLag,\n    upper('SF_RKLIVE_06012021') as Source_type,\n    'D_TIMEFRAME_DIM_LOAD' AS DW_SESSION_NM,\n    \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS     \nfrom\n    dates d\n    left join qutr_data s\n    on d.cldr_date between s.start_date and s.end_date\n    left join year_data y\n    on d.cldr_date between y.start_date and y.end_date\norder by 2)\n \n\n            UNION ALL\n        \n\n\n\n \n\n\n\n  \n (with  Dates AS \n(\n    SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n)   \nselect\n    d.Calendar_ID AS TimeFrameID,\n    'D' as TimeFrameType,\n    d.Calendar_ID as calendar_id,\n    d.cldr_date as day_start,\n    d.cldr_date as day_end,\n    d.week_start_date as week_Start,\n    d.week_end_date as week_end,\n    'W' || d.cldr_week_num as week_num,\n    d.cldr_mnth_strt_dt as month_start,\n    d.cldr_mnth_end_dt as month_end, \n    d.month_name as month_name,\n    cldr_qtr as qutr_number,\n    d.cldr_qtr_strt_dt as quarter_start,\n    d.cldr_qtr_end_dt as quarter_end,\n    cast(d.year as integer) as year,\n    d.cldr_year_start_dt as year_start,\n    d.cldr_year_end_dt as year_end,\n    case when Calendar_ID = d.week_end_date then 'TRUE' else 'FALSE' end as Weekend_FLag,\n    case when Calendar_ID = d.cldr_mnth_end_dt then 'TRUE' else 'FALSE' end as  Monthend_FLag,\n    case when Calendar_ID = d.cldr_qtr_end_dt then 'TRUE' else 'FALSE' end as  Quarterend_FLag,\n    case when Calendar_ID = d.cldr_year_end_dt then 'TRUE' else 'FALSE' end as  Yearend_FLag,\n    'HS_RKLIVE_01042021' as Source_type,\n    'D_TIMEFRAME_DIM_LOAD' AS DW_SESSION_NM,\n    \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS     \nfrom\n    dates d\n order by 2)\n\n\n\n\n"}, "error": null, "status": "SUCCESS 1", "execution_time": 3.136693239212036, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:26:09.564560Z", "completed_at": "2021-05-25T04:26:10.819898Z"}, {"name": "execute", "started_at": "2021-05-25T04:26:10.820304Z", "completed_at": "2021-05-25T04:26:12.281177Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with base as (\r\n\r\n    select *\r\n    from {{ ref('Stg_Account_History') }}\r\n\r\n), fields as (\r\n\r\n    select \r\n        id as account_id,\r\n        last_modified_time as last_modified_at,\r\n        created_time as created_at,\r\n        name as account_name,\r\n        currency,\r\n        cast(version_tag as numeric) as version_tag\r\n    from base\r\n\r\n), valid_dates as (\r\n\r\n    select \r\n        *,\r\n        case \r\n            when row_number() over (partition by account_id order by version_tag) = 1 then created_at\r\n            else last_modified_at\r\n        end as valid_from,\r\n        lead(last_modified_at) over (partition by account_id order by version_tag) as valid_to\r\n    from fields\r\n\r\n), surrogate_key as (\r\n\r\n    select \r\n        *,\r\n        {{ dbt_utils.surrogate_key(['account_id','version_tag']) }} as account_version_id\r\n    from valid_dates\r\n\r\n)\r\n\r\nselect *\r\nfrom surrogate_key", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Ads", "Dim_Account_History"], "unique_id": "model.sales_dataflo.Dim_Account_History", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Ads/Dim_Account_History.Sql", "original_file_path": "ETL/Target/Tables/Ads/Dim_Account_History.Sql", "name": "Dim_Account_History", "resource_type": "model", "alias": "Dim_Account_History", "checksum": {"name": "sha256", "checksum": "f629cbb4d4018f8a088efe079d3681ddc348342a41b62a5becd43b8dcbe9dd5a"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Account_History"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Account_History"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Ads/Dim_Account_History.Sql", "deferred": false, "compiled_sql": "with base as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Account_History\n\n), fields as (\n\n    select \n        id as account_id,\n        last_modified_time as last_modified_at,\n        created_time as created_at,\n        name as account_name,\n        currency,\n        cast(version_tag as numeric) as version_tag\n    from base\n\n), valid_dates as (\n\n    select \n        *,\n        case \n            when row_number() over (partition by account_id order by version_tag) = 1 then created_at\n            else last_modified_at\n        end as valid_from,\n        lead(last_modified_at) over (partition by account_id order by version_tag) as valid_to\n    from fields\n\n), surrogate_key as (\n\n    select \n        *,\n        md5(cast(\n    \n    coalesce(cast(account_id as \n    varchar\n), '') || '-' || coalesce(cast(version_tag as \n    varchar\n), '')\n\n as \n    varchar\n)) as account_version_id\n    from valid_dates\n\n)\n\nselect *\nfrom surrogate_key", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with base as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Account_History\n\n), fields as (\n\n    select \n        id as account_id,\n        last_modified_time as last_modified_at,\n        created_time as created_at,\n        name as account_name,\n        currency,\n        cast(version_tag as numeric) as version_tag\n    from base\n\n), valid_dates as (\n\n    select \n        *,\n        case \n            when row_number() over (partition by account_id order by version_tag) = 1 then created_at\n            else last_modified_at\n        end as valid_from,\n        lead(last_modified_at) over (partition by account_id order by version_tag) as valid_to\n    from fields\n\n), surrogate_key as (\n\n    select \n        *,\n        md5(cast(\n    \n    coalesce(cast(account_id as \n    varchar\n), '') || '-' || coalesce(cast(version_tag as \n    varchar\n), '')\n\n as \n    varchar\n)) as account_version_id\n    from valid_dates\n\n)\n\nselect *\nfrom surrogate_key"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.4092283248901367, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:26:12.703729Z", "completed_at": "2021-05-25T04:26:12.747609Z"}, {"name": "execute", "started_at": "2021-05-25T04:26:12.747991Z", "completed_at": "2021-05-25T04:26:14.689346Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with base as (\r\n\r\n    select *\r\n    from {{ ref('Stg_Campaign_Group_History') }}\r\n\r\n), fields as (\r\n\r\n    select \r\n        id as campaign_group_id,\r\n        last_modified_time as last_modified_at,\r\n        account_id,\r\n        created_time as created_at,\r\n        name as campaign_group_name\r\n    from base\r\n\r\n), valid_dates as (\r\n\r\n    select \r\n        *,\r\n        case \r\n            when row_number() over (partition by campaign_group_id order by last_modified_at) = 1 then created_at\r\n            else last_modified_at\r\n        end as valid_from,\r\n        lead(last_modified_at) over (partition by campaign_group_id order by last_modified_at) as valid_to\r\n    from fields\r\n\r\n), surrogate_key as (\r\n\r\n    select \r\n        *,\r\n        {{ dbt_utils.surrogate_key(['campaign_group_id','last_modified_at']) }} as campaign_group_version_id\r\n    from valid_dates\r\n\r\n)\r\n\r\nselect *\r\nfrom surrogate_key", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Ads", "Dim_Campaign_Group_History"], "unique_id": "model.sales_dataflo.Dim_Campaign_Group_History", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Ads/Dim_Campaign_Group_History.sql", "original_file_path": "ETL/Target/Tables/Ads/Dim_Campaign_Group_History.sql", "name": "Dim_Campaign_Group_History", "resource_type": "model", "alias": "Dim_Campaign_Group_History", "checksum": {"name": "sha256", "checksum": "9c859ee22a2c6496bda59d0cf65792615b10842211465b5226885106b975dbf3"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Campaign_Group_History"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Campaign_Group_History"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Ads/Dim_Campaign_Group_History.sql", "deferred": false, "compiled_sql": "with base as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Campaign_Group_History\n\n), fields as (\n\n    select \n        id as campaign_group_id,\n        last_modified_time as last_modified_at,\n        account_id,\n        created_time as created_at,\n        name as campaign_group_name\n    from base\n\n), valid_dates as (\n\n    select \n        *,\n        case \n            when row_number() over (partition by campaign_group_id order by last_modified_at) = 1 then created_at\n            else last_modified_at\n        end as valid_from,\n        lead(last_modified_at) over (partition by campaign_group_id order by last_modified_at) as valid_to\n    from fields\n\n), surrogate_key as (\n\n    select \n        *,\n        md5(cast(\n    \n    coalesce(cast(campaign_group_id as \n    varchar\n), '') || '-' || coalesce(cast(last_modified_at as \n    varchar\n), '')\n\n as \n    varchar\n)) as campaign_group_version_id\n    from valid_dates\n\n)\n\nselect *\nfrom surrogate_key", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with base as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Campaign_Group_History\n\n), fields as (\n\n    select \n        id as campaign_group_id,\n        last_modified_time as last_modified_at,\n        account_id,\n        created_time as created_at,\n        name as campaign_group_name\n    from base\n\n), valid_dates as (\n\n    select \n        *,\n        case \n            when row_number() over (partition by campaign_group_id order by last_modified_at) = 1 then created_at\n            else last_modified_at\n        end as valid_from,\n        lead(last_modified_at) over (partition by campaign_group_id order by last_modified_at) as valid_to\n    from fields\n\n), surrogate_key as (\n\n    select \n        *,\n        md5(cast(\n    \n    coalesce(cast(campaign_group_id as \n    varchar\n), '') || '-' || coalesce(cast(last_modified_at as \n    varchar\n), '')\n\n as \n    varchar\n)) as campaign_group_version_id\n    from valid_dates\n\n)\n\nselect *\nfrom surrogate_key"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.5303421020507812, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:26:15.115478Z", "completed_at": "2021-05-25T04:26:15.153593Z"}, {"name": "execute", "started_at": "2021-05-25T04:26:15.153979Z", "completed_at": "2021-05-25T04:26:17.225020Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with base as (\r\n\r\n    select *\r\n    from {{ ref('Stg_Campaign_History') }}\r\n), fields as (\r\n\r\n    select \r\n        id as campaign_id,\r\n        last_modified_time as last_modified_at,\r\n        account_id,\r\n        campaign_group_id,\r\n        created_time as created_at,\r\n        name as campaign_name,\r\n        cast(version_tag as numeric) as version_tag\r\n    from base\r\n\r\n), valid_dates as (\r\n\r\n    select \r\n        *,\r\n        case \r\n            when row_number() over (partition by campaign_id order by version_tag) = 1 then created_at\r\n            else last_modified_at\r\n        end as valid_from,\r\n        lead(last_modified_at) over (partition by campaign_id order by version_tag) as valid_to\r\n    from fields\r\n\r\n), surrogate_key as (\r\n\r\n    select \r\n        *,\r\n        {{ dbt_utils.surrogate_key(['campaign_id','version_tag']) }} as campaign_version_id\r\n    from valid_dates\r\n\r\n)\r\n\r\nselect *\r\nfrom surrogate_key", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Ads", "Dim_Campaign_History"], "unique_id": "model.sales_dataflo.Dim_Campaign_History", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Ads/Dim_Campaign_History.sql", "original_file_path": "ETL/Target/Tables/Ads/Dim_Campaign_History.sql", "name": "Dim_Campaign_History", "resource_type": "model", "alias": "Dim_Campaign_History", "checksum": {"name": "sha256", "checksum": "14e8f72e8322ead1dd1dc000809b67e10c954ecb8d9040f060644d8d28c7fa65"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Campaign_History"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Campaign_History"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Ads/Dim_Campaign_History.sql", "deferred": false, "compiled_sql": "with base as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Campaign_History\n), fields as (\n\n    select \n        id as campaign_id,\n        last_modified_time as last_modified_at,\n        account_id,\n        campaign_group_id,\n        created_time as created_at,\n        name as campaign_name,\n        cast(version_tag as numeric) as version_tag\n    from base\n\n), valid_dates as (\n\n    select \n        *,\n        case \n            when row_number() over (partition by campaign_id order by version_tag) = 1 then created_at\n            else last_modified_at\n        end as valid_from,\n        lead(last_modified_at) over (partition by campaign_id order by version_tag) as valid_to\n    from fields\n\n), surrogate_key as (\n\n    select \n        *,\n        md5(cast(\n    \n    coalesce(cast(campaign_id as \n    varchar\n), '') || '-' || coalesce(cast(version_tag as \n    varchar\n), '')\n\n as \n    varchar\n)) as campaign_version_id\n    from valid_dates\n\n)\n\nselect *\nfrom surrogate_key", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with base as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Campaign_History\n), fields as (\n\n    select \n        id as campaign_id,\n        last_modified_time as last_modified_at,\n        account_id,\n        campaign_group_id,\n        created_time as created_at,\n        name as campaign_name,\n        cast(version_tag as numeric) as version_tag\n    from base\n\n), valid_dates as (\n\n    select \n        *,\n        case \n            when row_number() over (partition by campaign_id order by version_tag) = 1 then created_at\n            else last_modified_at\n        end as valid_from,\n        lead(last_modified_at) over (partition by campaign_id order by version_tag) as valid_to\n    from fields\n\n), surrogate_key as (\n\n    select \n        *,\n        md5(cast(\n    \n    coalesce(cast(campaign_id as \n    varchar\n), '') || '-' || coalesce(cast(version_tag as \n    varchar\n), '')\n\n as \n    varchar\n)) as campaign_version_id\n    from valid_dates\n\n)\n\nselect *\nfrom surrogate_key"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.3778748512268066, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:26:17.648394Z", "completed_at": "2021-05-25T04:26:17.676240Z"}, {"name": "execute", "started_at": "2021-05-25T04:26:17.676661Z", "completed_at": "2021-05-25T04:26:19.606111Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with base as (\r\n\r\n    select *\r\n    from {{ ref('Stg_Creative_History') }}\r\n\r\n), fields as (\r\n\r\n    select\r\n        id as creative_id,\r\n        last_modified_time as last_modified_at,\r\n        created_time as created_at,\r\n        campaign_id,\r\n        type as creative_type,\r\n        cast(version_tag as numeric) as version_tag,\r\n        status as creative_status,\r\n        click_uri\r\n    from base\r\n\r\n), url_fields as (\r\n\r\n    select \r\n        *,\r\n        {{ dbt_utils.split_part('click_uri', \"'?'\", 1) }} as base_url,\r\n        {{ dbt_utils.get_url_host('click_uri') }} as url_host,\r\n        '/' || {{ dbt_utils.get_url_path('click_uri') }} as url_path,\r\n        {{ dbt_utils.get_url_parameter('click_uri', 'utm_source') }} as utm_source,\r\n        {{ dbt_utils.get_url_parameter('click_uri', 'utm_medium') }} as utm_medium,\r\n        {{ dbt_utils.get_url_parameter('click_uri', 'utm_campaign') }} as utm_campaign,\r\n        {{ dbt_utils.get_url_parameter('click_uri', 'utm_content') }} as utm_content,\r\n        {{ dbt_utils.get_url_parameter('click_uri', 'utm_term') }} as utm_term\r\n    from fields\r\n\r\n), valid_dates as (\r\n\r\n    select \r\n        *,\r\n        case \r\n            when row_number() over (partition by creative_id order by version_tag) = 1 then created_at\r\n            else last_modified_at\r\n        end as valid_from,\r\n        lead(last_modified_at) over (partition by creative_id order by version_tag) as valid_to\r\n    from url_fields\r\n\r\n), surrogate_key as (\r\n\r\n    select \r\n        *,\r\n        {{ dbt_utils.surrogate_key(['creative_id','version_tag']) }} as creative_version_id\r\n    from valid_dates\r\n\r\n)\r\n\r\nselect *\r\nfrom surrogate_key", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Ads", "Dim_Creative_History"], "unique_id": "model.sales_dataflo.Dim_Creative_History", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Ads/Dim_Creative_History.sql", "original_file_path": "ETL/Target/Tables/Ads/Dim_Creative_History.sql", "name": "Dim_Creative_History", "resource_type": "model", "alias": "Dim_Creative_History", "checksum": {"name": "sha256", "checksum": "d412ad728695416889e818e40e6afab941d19693f362cb894c5f0af3c11712a6"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Creative_History"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.split_part", "macro.dbt_utils.get_url_host", "macro.dbt_utils.get_url_path", "macro.dbt_utils.get_url_parameter", "macro.dbt_utils.surrogate_key", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Creative_History"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Ads/Dim_Creative_History.sql", "deferred": false, "compiled_sql": "with base as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Creative_History\n\n), fields as (\n\n    select\n        id as creative_id,\n        last_modified_time as last_modified_at,\n        created_time as created_at,\n        campaign_id,\n        type as creative_type,\n        cast(version_tag as numeric) as version_tag,\n        status as creative_status,\n        click_uri\n    from base\n\n), url_fields as (\n\n    select \n        *,\n        \n  \n\n    split_part(\n        click_uri,\n        '?',\n        1\n        )\n\n\n as base_url,\n        \n  \n    try_cast(\n  \n\n    split_part(\n        \n  \n\n    split_part(\n        \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n    \n\n\n,\n        'https://',\n        ''\n    )\n    \n\n\n,\n        '/',\n        1\n        )\n\n\n,\n        '?',\n        1\n        )\n\n\n as \n    varchar\n)\n\n as url_host,\n        '/' || \n  \n    try_cast(\n  \n\n    split_part(\n        \n\n    case when \n    \n    length(\n        \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n    \n\n\n,\n        'https://',\n        ''\n    )\n    \n\n\n\n    )\n-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n    \n\n\n,\n        'https://',\n        ''\n    )\n    \n\n\n\n    )\n, 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n    \n\n\n,\n        'https://',\n        ''\n    )\n    \n\n\n\n    )\n - 1\n            ) = 0 \n        then ''\n    else \n        right(\n            \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n    \n\n\n,\n        'https://',\n        ''\n    )\n    \n\n\n,\n            \n    \n    length(\n        \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n    \n\n\n,\n        'https://',\n        ''\n    )\n    \n\n\n\n    )\n-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n    \n\n\n,\n        'https://',\n        ''\n    )\n    \n\n\n\n    )\n, 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n    \n\n\n,\n        'https://',\n        ''\n    )\n    \n\n\n\n    )\n - 1\n            )\n        )\n    end\n,\n        '?',\n        1\n        )\n\n\n as \n    varchar\n)\n\n as url_path,\n        nullif(\n  \n\n    split_part(\n        \n  \n\n    split_part(\n        click_uri,\n        'utm_source=',\n        2\n        )\n\n\n,\n        '&',\n        1\n        )\n\n\n,'') as utm_source,\n        nullif(\n  \n\n    split_part(\n        \n  \n\n    split_part(\n        click_uri,\n        'utm_medium=',\n        2\n        )\n\n\n,\n        '&',\n        1\n        )\n\n\n,'') as utm_medium,\n        nullif(\n  \n\n    split_part(\n        \n  \n\n    split_part(\n        click_uri,\n        'utm_campaign=',\n        2\n        )\n\n\n,\n        '&',\n        1\n        )\n\n\n,'') as utm_campaign,\n        nullif(\n  \n\n    split_part(\n        \n  \n\n    split_part(\n        click_uri,\n        'utm_content=',\n        2\n        )\n\n\n,\n        '&',\n        1\n        )\n\n\n,'') as utm_content,\n        nullif(\n  \n\n    split_part(\n        \n  \n\n    split_part(\n        click_uri,\n        'utm_term=',\n        2\n        )\n\n\n,\n        '&',\n        1\n        )\n\n\n,'') as utm_term\n    from fields\n\n), valid_dates as (\n\n    select \n        *,\n        case \n            when row_number() over (partition by creative_id order by version_tag) = 1 then created_at\n            else last_modified_at\n        end as valid_from,\n        lead(last_modified_at) over (partition by creative_id order by version_tag) as valid_to\n    from url_fields\n\n), surrogate_key as (\n\n    select \n        *,\n        md5(cast(\n    \n    coalesce(cast(creative_id as \n    varchar\n), '') || '-' || coalesce(cast(version_tag as \n    varchar\n), '')\n\n as \n    varchar\n)) as creative_version_id\n    from valid_dates\n\n)\n\nselect *\nfrom surrogate_key", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with base as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Creative_History\n\n), fields as (\n\n    select\n        id as creative_id,\n        last_modified_time as last_modified_at,\n        created_time as created_at,\n        campaign_id,\n        type as creative_type,\n        cast(version_tag as numeric) as version_tag,\n        status as creative_status,\n        click_uri\n    from base\n\n), url_fields as (\n\n    select \n        *,\n        \n  \n\n    split_part(\n        click_uri,\n        '?',\n        1\n        )\n\n\n as base_url,\n        \n  \n    try_cast(\n  \n\n    split_part(\n        \n  \n\n    split_part(\n        \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n    \n\n\n,\n        'https://',\n        ''\n    )\n    \n\n\n,\n        '/',\n        1\n        )\n\n\n,\n        '?',\n        1\n        )\n\n\n as \n    varchar\n)\n\n as url_host,\n        '/' || \n  \n    try_cast(\n  \n\n    split_part(\n        \n\n    case when \n    \n    length(\n        \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n    \n\n\n,\n        'https://',\n        ''\n    )\n    \n\n\n\n    )\n-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n    \n\n\n,\n        'https://',\n        ''\n    )\n    \n\n\n\n    )\n, 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n    \n\n\n,\n        'https://',\n        ''\n    )\n    \n\n\n\n    )\n - 1\n            ) = 0 \n        then ''\n    else \n        right(\n            \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n    \n\n\n,\n        'https://',\n        ''\n    )\n    \n\n\n,\n            \n    \n    length(\n        \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n    \n\n\n,\n        'https://',\n        ''\n    )\n    \n\n\n\n    )\n-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n    \n\n\n,\n        'https://',\n        ''\n    )\n    \n\n\n\n    )\n, 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n    \n\n\n,\n        'https://',\n        ''\n    )\n    \n\n\n\n    )\n - 1\n            )\n        )\n    end\n,\n        '?',\n        1\n        )\n\n\n as \n    varchar\n)\n\n as url_path,\n        nullif(\n  \n\n    split_part(\n        \n  \n\n    split_part(\n        click_uri,\n        'utm_source=',\n        2\n        )\n\n\n,\n        '&',\n        1\n        )\n\n\n,'') as utm_source,\n        nullif(\n  \n\n    split_part(\n        \n  \n\n    split_part(\n        click_uri,\n        'utm_medium=',\n        2\n        )\n\n\n,\n        '&',\n        1\n        )\n\n\n,'') as utm_medium,\n        nullif(\n  \n\n    split_part(\n        \n  \n\n    split_part(\n        click_uri,\n        'utm_campaign=',\n        2\n        )\n\n\n,\n        '&',\n        1\n        )\n\n\n,'') as utm_campaign,\n        nullif(\n  \n\n    split_part(\n        \n  \n\n    split_part(\n        click_uri,\n        'utm_content=',\n        2\n        )\n\n\n,\n        '&',\n        1\n        )\n\n\n,'') as utm_content,\n        nullif(\n  \n\n    split_part(\n        \n  \n\n    split_part(\n        click_uri,\n        'utm_term=',\n        2\n        )\n\n\n,\n        '&',\n        1\n        )\n\n\n,'') as utm_term\n    from fields\n\n), valid_dates as (\n\n    select \n        *,\n        case \n            when row_number() over (partition by creative_id order by version_tag) = 1 then created_at\n            else last_modified_at\n        end as valid_from,\n        lead(last_modified_at) over (partition by creative_id order by version_tag) as valid_to\n    from url_fields\n\n), surrogate_key as (\n\n    select \n        *,\n        md5(cast(\n    \n    coalesce(cast(creative_id as \n    varchar\n), '') || '-' || coalesce(cast(version_tag as \n    varchar\n), '')\n\n as \n    varchar\n)) as creative_version_id\n    from valid_dates\n\n)\n\nselect *\nfrom surrogate_key"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.561800718307495, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:26:20.028895Z", "completed_at": "2021-05-25T04:26:20.066073Z"}, {"name": "execute", "started_at": "2021-05-25T04:26:20.066438Z", "completed_at": "2021-05-25T04:26:22.171047Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with base as (\r\n\r\n    select * \r\n    from {{ ref('Stg_Account_History_FB') }}\r\n\r\n),\r\n\r\nfields_xf as (\r\n    \r\n    select \r\n        id as account_id,\r\n        name as account_name,\r\n        row_number() over (partition by id order by _fivetran_synced desc) = 1 as is_most_recent_record\r\n    from base\r\n\r\n)\r\n\r\nselect * from fields_xf", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Ads", "Dim_Account_History_FB"], "unique_id": "model.sales_dataflo.Dim_Account_History_FB", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Ads/Dim_Account_History_FB.sql", "original_file_path": "ETL/Target/Tables/Ads/Dim_Account_History_FB.sql", "name": "Dim_Account_History_FB", "resource_type": "model", "alias": "Dim_Account_History_FB", "checksum": {"name": "sha256", "checksum": "6ad2df6dca20d618550c37a769ba2a1070e3ae158f6446da84d21968a732eecf"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Account_History_FB"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Account_History_FB"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Ads/Dim_Account_History_FB.sql", "deferred": false, "compiled_sql": "with base as (\n\n    select * \n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Account_History_FB\n\n),\n\nfields_xf as (\n    \n    select \n        id as account_id,\n        name as account_name,\n        row_number() over (partition by id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from base\n\n)\n\nselect * from fields_xf", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with base as (\n\n    select * \n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Account_History_FB\n\n),\n\nfields_xf as (\n    \n    select \n        id as account_id,\n        name as account_name,\n        row_number() over (partition by id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from base\n\n)\n\nselect * from fields_xf"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.356670618057251, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:26:22.593290Z", "completed_at": "2021-05-25T04:26:22.618349Z"}, {"name": "execute", "started_at": "2021-05-25T04:26:22.618703Z", "completed_at": "2021-05-25T04:26:24.529935Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with base as (\r\n\r\n    select * \r\n    from {{ ref('Stg_Ad_History') }}\r\n\r\n),\r\n\r\nfields_xf as (\r\n    \r\n    select \r\n        id as ad_id,\r\n        account_id,\r\n        ad_set_id,\r\n        campaign_id,\r\n        creative_id,\r\n        name as ad_name,\r\n        row_number() over (partition by id order by _fivetran_synced desc) = 1 as is_most_recent_record\r\n    from base\r\n\r\n)\r\n\r\nselect * from fields_xf", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Ads", "Dim_Ad_History"], "unique_id": "model.sales_dataflo.Dim_Ad_History", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Ads/Dim_Ad_History.sql", "original_file_path": "ETL/Target/Tables/Ads/Dim_Ad_History.sql", "name": "Dim_Ad_History", "resource_type": "model", "alias": "Dim_Ad_History", "checksum": {"name": "sha256", "checksum": "17a7c78fa121b15e1dc8d2a9613c8d66588a16b755aa266e3fa7711a8f4f55f4"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Ad_History"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Ad_History"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Ads/Dim_Ad_History.sql", "deferred": false, "compiled_sql": "with base as (\n\n    select * \n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Ad_History\n\n),\n\nfields_xf as (\n    \n    select \n        id as ad_id,\n        account_id,\n        ad_set_id,\n        campaign_id,\n        creative_id,\n        name as ad_name,\n        row_number() over (partition by id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from base\n\n)\n\nselect * from fields_xf", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with base as (\n\n    select * \n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Ad_History\n\n),\n\nfields_xf as (\n    \n    select \n        id as ad_id,\n        account_id,\n        ad_set_id,\n        campaign_id,\n        creative_id,\n        name as ad_name,\n        row_number() over (partition by id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from base\n\n)\n\nselect * from fields_xf"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.308992862701416, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:26:24.952512Z", "completed_at": "2021-05-25T04:26:24.980138Z"}, {"name": "execute", "started_at": "2021-05-25T04:26:24.980505Z", "completed_at": "2021-05-25T04:26:26.841627Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with base as (\r\n\r\n    select * \r\n    from {{ ref('Stg_Ad_Set_History') }}\r\n\r\n),\r\n\r\nfields_xf as (\r\n    \r\n    select \r\n        ad_set_id,\r\n        account_id,\r\n        campaign_id,\r\n        ad_set_name,\r\n        row_number() over (partition by ad_set_id order by _fivetran_synced desc) = 1 as is_most_recent_record\r\n    from base\r\n\r\n)\r\n\r\nselect * from fields_xf", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Ads", "Dim_Ad_Set_History"], "unique_id": "model.sales_dataflo.Dim_Ad_Set_History", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Ads/Dim_Ad_Set_History.sql", "original_file_path": "ETL/Target/Tables/Ads/Dim_Ad_Set_History.sql", "name": "Dim_Ad_Set_History", "resource_type": "model", "alias": "Dim_Ad_Set_History", "checksum": {"name": "sha256", "checksum": "ffe24297fd860fb78bad566e42e719d78e58023b7e2c073b14803b29d147cf03"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Ad_Set_History"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Ad_Set_History"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Ads/Dim_Ad_Set_History.sql", "deferred": false, "compiled_sql": "with base as (\n\n    select * \n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Ad_Set_History\n\n),\n\nfields_xf as (\n    \n    select \n        ad_set_id,\n        account_id,\n        campaign_id,\n        ad_set_name,\n        row_number() over (partition by ad_set_id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from base\n\n)\n\nselect * from fields_xf", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with base as (\n\n    select * \n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Ad_Set_History\n\n),\n\nfields_xf as (\n    \n    select \n        ad_set_id,\n        account_id,\n        campaign_id,\n        ad_set_name,\n        row_number() over (partition by ad_set_id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from base\n\n)\n\nselect * from fields_xf"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.3707449436187744, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:26:27.264025Z", "completed_at": "2021-05-25T04:26:27.289140Z"}, {"name": "execute", "started_at": "2021-05-25T04:26:27.289526Z", "completed_at": "2021-05-25T04:26:29.209109Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with base as (\r\n\r\n    select * \r\n    from {{ ref('Stg_Campaign_History_FB') }}\r\n\r\n),\r\n\r\nfields_xf as (\r\n    \r\n    select \r\n        campaign_id,\r\n        account_id,\r\n        name as campaign_name,\r\n        row_number() over (partition by campaign_id order by _fivetran_synced desc) = 1 as is_most_recent_record\r\n    from base\r\n\r\n)\r\n\r\nselect * from fields_xf", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Ads", "Dim_Campaign_History_FB"], "unique_id": "model.sales_dataflo.Dim_Campaign_History_FB", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Ads/Dim_Campaign_History_FB.sql", "original_file_path": "ETL/Target/Tables/Ads/Dim_Campaign_History_FB.sql", "name": "Dim_Campaign_History_FB", "resource_type": "model", "alias": "Dim_Campaign_History_FB", "checksum": {"name": "sha256", "checksum": "709a3d818cfc1b92a29e28bf8bbb9054c5313fc431da0e77fa04e588546cbc7d"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Campaign_History_FB"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Campaign_History_FB"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Ads/Dim_Campaign_History_FB.sql", "deferred": false, "compiled_sql": "with base as (\n\n    select * \n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Campaign_History_FB\n\n),\n\nfields_xf as (\n    \n    select \n        campaign_id,\n        account_id,\n        name as campaign_name,\n        row_number() over (partition by campaign_id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from base\n\n)\n\nselect * from fields_xf", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with base as (\n\n    select * \n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Campaign_History_FB\n\n),\n\nfields_xf as (\n    \n    select \n        campaign_id,\n        account_id,\n        name as campaign_name,\n        row_number() over (partition by campaign_id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from base\n\n)\n\nselect * from fields_xf"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.513934850692749, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:26:29.639060Z", "completed_at": "2021-05-25T04:26:29.672841Z"}, {"name": "execute", "started_at": "2021-05-25T04:26:29.673372Z", "completed_at": "2021-05-25T04:26:31.728010Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with base as (\r\n\r\n    select * \r\n    from {{ ref('Stg_Creative_History_FB') }}\r\n\r\n),\r\n\r\nfields_xf as (\r\n    \r\n    select \r\n        _fivetran_id,\r\n        creative_id,\r\n        account_id,\r\n        creative_name,\r\n        page_link,\r\n        template_page_link,\r\n        url_tags,\r\n        asset_feed_spec_link_urls,\r\n        object_story_link_data_child_attachments,\r\n        object_story_link_data_caption, \r\n        object_story_link_data_description, \r\n        object_story_link_data_link, \r\n        object_story_link_data_message,\r\n        template_app_link_spec_ios,\r\n        template_app_link_spec_ipad,\r\n        template_app_link_spec_android,\r\n        template_app_link_spec_iphone,\r\n        row_number() over (partition by creative_id order by _fivetran_synced desc) = 1 as is_most_recent_record\r\n    from base\r\n    \r\n)\r\n\r\nselect * from fields_xf", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Ads", "Dim_Creative_History_FB"], "unique_id": "model.sales_dataflo.Dim_Creative_History_FB", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Ads/Dim_Creative_History_FB.sql", "original_file_path": "ETL/Target/Tables/Ads/Dim_Creative_History_FB.sql", "name": "Dim_Creative_History_FB", "resource_type": "model", "alias": "Dim_Creative_History_FB", "checksum": {"name": "sha256", "checksum": "8111231830c210cabd9ded78bf2da43ef62335509e0d75195893fb11ee9448f8"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Creative_History_FB"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Creative_History_FB"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Ads/Dim_Creative_History_FB.sql", "deferred": false, "compiled_sql": "with base as (\n\n    select * \n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Creative_History_FB\n\n),\n\nfields_xf as (\n    \n    select \n        _fivetran_id,\n        creative_id,\n        account_id,\n        creative_name,\n        page_link,\n        template_page_link,\n        url_tags,\n        asset_feed_spec_link_urls,\n        object_story_link_data_child_attachments,\n        object_story_link_data_caption, \n        object_story_link_data_description, \n        object_story_link_data_link, \n        object_story_link_data_message,\n        template_app_link_spec_ios,\n        template_app_link_spec_ipad,\n        template_app_link_spec_android,\n        template_app_link_spec_iphone,\n        row_number() over (partition by creative_id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from base\n    \n)\n\nselect * from fields_xf", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with base as (\n\n    select * \n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Creative_History_FB\n\n),\n\nfields_xf as (\n    \n    select \n        _fivetran_id,\n        creative_id,\n        account_id,\n        creative_name,\n        page_link,\n        template_page_link,\n        url_tags,\n        asset_feed_spec_link_urls,\n        object_story_link_data_child_attachments,\n        object_story_link_data_caption, \n        object_story_link_data_description, \n        object_story_link_data_link, \n        object_story_link_data_message,\n        template_app_link_spec_ios,\n        template_app_link_spec_ipad,\n        template_app_link_spec_android,\n        template_app_link_spec_iphone,\n        row_number() over (partition by creative_id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from base\n    \n)\n\nselect * from fields_xf"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.4939398765563965, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:26:32.155440Z", "completed_at": "2021-05-25T04:26:32.184457Z"}, {"name": "execute", "started_at": "2021-05-25T04:26:32.184864Z", "completed_at": "2021-05-25T04:26:34.229964Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with base as (\r\n\r\n    select *\r\n    from {{ ref('Stg_Final_URL_Performance')}}\r\n\r\n), fields as (\r\n\r\n    select\r\n        cast(DATE as date) as date_day,\r\n        account_name,\r\n        external_customer_id as account_id,\r\n        campaign_name,\r\n        cast(campaign_id as {{ dbt_utils.type_string() }}) as campaign_id,\r\n        ad_group_name,\r\n        cast(ad_group_id as {{ dbt_utils.type_string() }}) as ad_group_id,\r\n        coalesce(clicks, 0) as clicks,\r\n        coalesce(impressions, 0) as impressions,\r\n        coalesce(cost, 0) as spend,\r\n        Source_Type as Platform\r\n    from base\r\n\r\n)\r\n\r\nselect *\r\nfrom fields", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_GA_Ads"], "unique_id": "model.sales_dataflo.Dim_GA_Ads", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_GA_Ads.sql", "original_file_path": "ETL/Target/Tables/Dim_GA_Ads.sql", "name": "Dim_GA_Ads", "resource_type": "model", "alias": "Dim_GA_Ads", "checksum": {"name": "sha256", "checksum": "d67393da0c7ce2f872be9d754b24fa3fde05ccf2ff1f0f4f077e49556d3f07f1"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Final_URL_Performance"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.type_string", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Final_URL_Performance"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_GA_Ads.sql", "deferred": false, "compiled_sql": "with base as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Final_URL_Performance\n\n), fields as (\n\n    select\n        cast(DATE as date) as date_day,\n        account_name,\n        external_customer_id as account_id,\n        campaign_name,\n        cast(campaign_id as \n    varchar\n) as campaign_id,\n        ad_group_name,\n        cast(ad_group_id as \n    varchar\n) as ad_group_id,\n        coalesce(clicks, 0) as clicks,\n        coalesce(impressions, 0) as impressions,\n        coalesce(cost, 0) as spend,\n        Source_Type as Platform\n    from base\n\n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with base as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Final_URL_Performance\n\n), fields as (\n\n    select\n        cast(DATE as date) as date_day,\n        account_name,\n        external_customer_id as account_id,\n        campaign_name,\n        cast(campaign_id as \n    varchar\n) as campaign_id,\n        ad_group_name,\n        cast(ad_group_id as \n    varchar\n) as ad_group_id,\n        coalesce(clicks, 0) as clicks,\n        coalesce(impressions, 0) as impressions,\n        coalesce(cost, 0) as spend,\n        Source_Type as Platform\n    from base\n\n)\n\nselect *\nfrom fields"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.3345935344696045, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:26:34.651980Z", "completed_at": "2021-05-25T04:26:34.678970Z"}, {"name": "execute", "started_at": "2021-05-25T04:26:34.679353Z", "completed_at": "2021-05-25T04:26:36.564649Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Session') }}\r\n  ),\r\nDIM_SOCIAL_MEDIA_ACQUISITIONS as (\r\n      select\r\n        ID,\r\n        DATE,\r\n        PROFILE,\r\n        SESSION_DURATION_BUCKET,\r\n        USER_TYPE,\r\n        HITS,\r\n        SESSIONS,\r\n        SESSIONS_PER_USER,\r\n        AVG_SESSION_DURATION,\r\n        BOUNCES,\r\n        SESSION_DURATION,\r\n        BOUNCE_RATE,\r\n        Source_type,\r\n        'D_SOCIAL_MEDIA_ACQUISITIONS_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_SOCIAL_MEDIA_ACQUISITIONS", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "GA", "Dim_Session"], "unique_id": "model.sales_dataflo.Dim_Session", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/GA/Dim_Session.sql", "original_file_path": "ETL/Target/Tables/GA/Dim_Session.sql", "name": "Dim_Session", "resource_type": "model", "alias": "Dim_Session", "checksum": {"name": "sha256", "checksum": "477ee6e61aebd81b4c4c72347545a00e8eef0f36f447cee00111720b231011e6"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Session"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Session"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/GA/Dim_Session.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Session\n  ),\nDIM_SOCIAL_MEDIA_ACQUISITIONS as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        SESSION_DURATION_BUCKET,\n        USER_TYPE,\n        HITS,\n        SESSIONS,\n        SESSIONS_PER_USER,\n        AVG_SESSION_DURATION,\n        BOUNCES,\n        SESSION_DURATION,\n        BOUNCE_RATE,\n        Source_type,\n        'D_SOCIAL_MEDIA_ACQUISITIONS_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_SOCIAL_MEDIA_ACQUISITIONS", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Session\n  ),\nDIM_SOCIAL_MEDIA_ACQUISITIONS as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        SESSION_DURATION_BUCKET,\n        USER_TYPE,\n        HITS,\n        SESSIONS,\n        SESSIONS_PER_USER,\n        AVG_SESSION_DURATION,\n        BOUNCES,\n        SESSION_DURATION,\n        BOUNCE_RATE,\n        Source_type,\n        'D_SOCIAL_MEDIA_ACQUISITIONS_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_SOCIAL_MEDIA_ACQUISITIONS"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.3099617958068848, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:26:36.989145Z", "completed_at": "2021-05-25T04:26:37.020110Z"}, {"name": "execute", "started_at": "2021-05-25T04:26:37.020467Z", "completed_at": "2021-05-25T04:26:38.879393Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Channel_Traffic') }}\r\n  ),\r\nDIM_CHANNEL_TRAFFIC as (\r\n      select\r\n        ID,\r\n        DATE,\r\n        PROFILE,\r\n        CHANNEL_GROUPING,\r\n        GOAL_VALUE_ALL,\r\n        NEW_USERS,\r\n        SESSIONS,\r\n        AVG_SESSION_DURATION,\r\n        GOAL_COMPLETIONS_ALL,\r\n        PAGEVIEWS_PER_SESSION,\r\n        GOAL_CONVERSION_RATE_ALL,\r\n        USERS,\r\n        BOUNCE_RATE,\r\n        PERCENT_NEW_SESSIONS,\r\n        Source_type,\r\n        'D_CHANNEL_TRAFFIC_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_CHANNEL_TRAFFIC", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "GA", "Dim_Channel_Traffic"], "unique_id": "model.sales_dataflo.Dim_Channel_Traffic", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/GA/Dim_Channel_Traffic.sql", "original_file_path": "ETL/Target/Tables/GA/Dim_Channel_Traffic.sql", "name": "Dim_Channel_Traffic", "resource_type": "model", "alias": "Dim_Channel_Traffic", "checksum": {"name": "sha256", "checksum": "68e9d6dd835ed002ff3f4522838619023f30d1d214c613bfaa48b6b39e6fa9d0"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Channel_Traffic"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Channel_Traffic"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/GA/Dim_Channel_Traffic.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Channel_Traffic\n  ),\nDIM_CHANNEL_TRAFFIC as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        CHANNEL_GROUPING,\n        GOAL_VALUE_ALL,\n        NEW_USERS,\n        SESSIONS,\n        AVG_SESSION_DURATION,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        PERCENT_NEW_SESSIONS,\n        Source_type,\n        'D_CHANNEL_TRAFFIC_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_CHANNEL_TRAFFIC", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Channel_Traffic\n  ),\nDIM_CHANNEL_TRAFFIC as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        CHANNEL_GROUPING,\n        GOAL_VALUE_ALL,\n        NEW_USERS,\n        SESSIONS,\n        AVG_SESSION_DURATION,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        PERCENT_NEW_SESSIONS,\n        Source_type,\n        'D_CHANNEL_TRAFFIC_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_CHANNEL_TRAFFIC"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.3012733459472656, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:26:39.301696Z", "completed_at": "2021-05-25T04:26:39.329855Z"}, {"name": "execute", "started_at": "2021-05-25T04:26:39.330233Z", "completed_at": "2021-05-25T04:26:41.179782Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Events_Overview') }}\r\n  ),\r\nDIM_EVENTS_OVERVIEW as (\r\n      select\r\n        ID,\r\n        DATE,\r\n        PROFILE,\r\n        EVENT_CATEGORY,\r\n        EVENT_VALUE,\r\n        TOTAL_EVENTS,\r\n        SESSIONS_WITH_EVENT,\r\n        EVENTS_PER_SESSION_WITH_EVENT,\r\n        AVG_EVENT_VALUE,\r\n        UNIQUE_EVENTS,\r\n        Source_type,\r\n        'D_EVENTS_OVERVIEW_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_EVENTS_OVERVIEW", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "GA", "Dim_Events_Overview"], "unique_id": "model.sales_dataflo.Dim_Events_Overview", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/GA/Dim_Events_Overview.sql", "original_file_path": "ETL/Target/Tables/GA/Dim_Events_Overview.sql", "name": "Dim_Events_Overview", "resource_type": "model", "alias": "Dim_Events_Overview", "checksum": {"name": "sha256", "checksum": "ef6ce5a271ebe61e0fb87e3e88e45828eec90a37ad2af9df292c8cf20299048f"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Events_Overview"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Events_Overview"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/GA/Dim_Events_Overview.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Events_Overview\n  ),\nDIM_EVENTS_OVERVIEW as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        EVENT_CATEGORY,\n        EVENT_VALUE,\n        TOTAL_EVENTS,\n        SESSIONS_WITH_EVENT,\n        EVENTS_PER_SESSION_WITH_EVENT,\n        AVG_EVENT_VALUE,\n        UNIQUE_EVENTS,\n        Source_type,\n        'D_EVENTS_OVERVIEW_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_EVENTS_OVERVIEW", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Events_Overview\n  ),\nDIM_EVENTS_OVERVIEW as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        EVENT_CATEGORY,\n        EVENT_VALUE,\n        TOTAL_EVENTS,\n        SESSIONS_WITH_EVENT,\n        EVENTS_PER_SESSION_WITH_EVENT,\n        AVG_EVENT_VALUE,\n        UNIQUE_EVENTS,\n        Source_type,\n        'D_EVENTS_OVERVIEW_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_EVENTS_OVERVIEW"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.494295358657837, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:26:41.605611Z", "completed_at": "2021-05-25T04:26:41.636983Z"}, {"name": "execute", "started_at": "2021-05-25T04:26:41.637334Z", "completed_at": "2021-05-25T04:26:43.675388Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Goal_Conversions') }}\r\n  ),\r\nDIM_GOAL_CONVERSIONS as (\r\n      select\r\n        ID,\r\n        DATE,\r\n        PROFILE,\r\n        GOAL_COMPLETION_LOCATION,\r\n        GOAL_PREVIOUS_STEP_1,\r\n        GOAL_PREVIOUS_STEP_2,\r\n        GOAL_PREVIOUS_STEP_3,\r\n        GOAL_VALUE_ALL,\r\n        GOAL_COMPLETIONS_ALL,\r\n        GOAL_STARTS_ALL,\r\n        GOAL_CONVERSION_RATE_ALL,\r\n        GOAL_ABANDON_RATE_ALL,\r\n        GOAL_ABANDONS_ALL,\r\n        GOAL_VALUE_PER_SESSION,\r\n        Source_type,\r\n        'D_GOAL_CONVERSIONS_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_GOAL_CONVERSIONS", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "GA", "Dim_Goal_Conversions"], "unique_id": "model.sales_dataflo.Dim_Goal_Conversions", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/GA/Dim_Goal_Conversions.sql", "original_file_path": "ETL/Target/Tables/GA/Dim_Goal_Conversions.sql", "name": "Dim_Goal_Conversions", "resource_type": "model", "alias": "Dim_Goal_Conversions", "checksum": {"name": "sha256", "checksum": "34a7968b34805398fe742fa8b93d02ddbf8c2c430d88b90fb717bc4a8c6bff2d"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Goal_Conversions"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Goal_Conversions"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/GA/Dim_Goal_Conversions.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Goal_Conversions\n  ),\nDIM_GOAL_CONVERSIONS as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        GOAL_COMPLETION_LOCATION,\n        GOAL_PREVIOUS_STEP_1,\n        GOAL_PREVIOUS_STEP_2,\n        GOAL_PREVIOUS_STEP_3,\n        GOAL_VALUE_ALL,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_STARTS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        GOAL_ABANDON_RATE_ALL,\n        GOAL_ABANDONS_ALL,\n        GOAL_VALUE_PER_SESSION,\n        Source_type,\n        'D_GOAL_CONVERSIONS_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_GOAL_CONVERSIONS", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Goal_Conversions\n  ),\nDIM_GOAL_CONVERSIONS as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        GOAL_COMPLETION_LOCATION,\n        GOAL_PREVIOUS_STEP_1,\n        GOAL_PREVIOUS_STEP_2,\n        GOAL_PREVIOUS_STEP_3,\n        GOAL_VALUE_ALL,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_STARTS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        GOAL_ABANDON_RATE_ALL,\n        GOAL_ABANDONS_ALL,\n        GOAL_VALUE_PER_SESSION,\n        Source_type,\n        'D_GOAL_CONVERSIONS_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_GOAL_CONVERSIONS"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.309454917907715, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:26:44.102550Z", "completed_at": "2021-05-25T04:26:44.129413Z"}, {"name": "execute", "started_at": "2021-05-25T04:26:44.129773Z", "completed_at": "2021-05-25T04:26:45.988587Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Page_Tracking') }}\r\n  ),\r\nDIM_PAGE_TRACKING as (\r\n      select\r\n        ID,\r\n        DATE,\r\n        PROFILE,\r\n        PAGE_TITLE,\r\n        LANDING_PAGE_PATH,\r\n        PAGE_PATH,\r\n        EXIT_PAGE_PATH,\r\n        PAGE_VALUE,\r\n        EXIT_RATE,\r\n        TIME_ON_PAGE,\r\n        PAGEVIEWS_PER_SESSION,\r\n        UNIQUE_PAGEVIEWS,\r\n        ENTRANCE_RATE,\r\n        Source_type,\r\n        'D_PAGE_TRACKING_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_PAGE_TRACKING", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "GA", "Dim_Page_Tracking"], "unique_id": "model.sales_dataflo.Dim_Page_Tracking", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/GA/Dim_Page_Tracking.sql", "original_file_path": "ETL/Target/Tables/GA/Dim_Page_Tracking.sql", "name": "Dim_Page_Tracking", "resource_type": "model", "alias": "Dim_Page_Tracking", "checksum": {"name": "sha256", "checksum": "72494e0e1a38c6c9c30839ec8d3d485cf68b7dc34d8a8d84a3ac86b47ef7b944"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Page_Tracking"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Page_Tracking"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/GA/Dim_Page_Tracking.sql", "deferred": false, "compiled_sql": "\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Page_Tracking\n  ),\nDIM_PAGE_TRACKING as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        PAGE_TITLE,\n        LANDING_PAGE_PATH,\n        PAGE_PATH,\n        EXIT_PAGE_PATH,\n        PAGE_VALUE,\n        EXIT_RATE,\n        TIME_ON_PAGE,\n        PAGEVIEWS_PER_SESSION,\n        UNIQUE_PAGEVIEWS,\n        ENTRANCE_RATE,\n        Source_type,\n        'D_PAGE_TRACKING_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_PAGE_TRACKING", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Page_Tracking\n  ),\nDIM_PAGE_TRACKING as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        PAGE_TITLE,\n        LANDING_PAGE_PATH,\n        PAGE_PATH,\n        EXIT_PAGE_PATH,\n        PAGE_VALUE,\n        EXIT_RATE,\n        TIME_ON_PAGE,\n        PAGEVIEWS_PER_SESSION,\n        UNIQUE_PAGEVIEWS,\n        ENTRANCE_RATE,\n        Source_type,\n        'D_PAGE_TRACKING_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_PAGE_TRACKING"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.4937796592712402, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:26:46.416166Z", "completed_at": "2021-05-25T04:26:46.450590Z"}, {"name": "execute", "started_at": "2021-05-25T04:26:46.450994Z", "completed_at": "2021-05-25T04:26:48.488124Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'Site_Rept_ID'\r\n      )\r\n}}\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Site_Report_By_Site') }}\r\n  ),\r\nDIM_SITE as (\r\n      select\r\n        Site_Rept_ID,\r\n        COUNTRY,\r\n        DATE as Date_day,\r\n        DEVICE,\r\n        SEARCH_TYPE,\r\n        SITE,\r\n        CLICKS,\r\n        IMPRESSIONS,\r\n        CTR,\r\n        POSITION,\r\n        _FIVETRAN_SYNCED,\r\n        Source_type as Platform,\r\n        'D_PAGE_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_SITE", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "GSC", "Dim_Site"], "unique_id": "model.sales_dataflo.Dim_Site", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/GSC/Dim_Site.sql", "original_file_path": "ETL/Target/Tables/GSC/Dim_Site.sql", "name": "Dim_Site", "resource_type": "model", "alias": "Dim_Site", "checksum": {"name": "sha256", "checksum": "fd302f68bad434c7149cd68dcbdf7741e38cc4d9b629267d2217f37b600b1d07"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert", "unique_key": "Site_Rept_ID"}, "tags": [], "refs": [["Stg_Site_Report_By_Site"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_Site_Report_By_Site"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/GSC/Dim_Site.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Site_Report_By_Site\n  ),\nDIM_SITE as (\n      select\n        Site_Rept_ID,\n        COUNTRY,\n        DATE as Date_day,\n        DEVICE,\n        SEARCH_TYPE,\n        SITE,\n        CLICKS,\n        IMPRESSIONS,\n        CTR,\n        POSITION,\n        _FIVETRAN_SYNCED,\n        Source_type as Platform,\n        'D_PAGE_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_SITE", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Site_Report_By_Site\n  ),\nDIM_SITE as (\n      select\n        Site_Rept_ID,\n        COUNTRY,\n        DATE as Date_day,\n        DEVICE,\n        SEARCH_TYPE,\n        SITE,\n        CLICKS,\n        IMPRESSIONS,\n        CTR,\n        POSITION,\n        _FIVETRAN_SYNCED,\n        Source_type as Platform,\n        'D_PAGE_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_SITE"}, "error": null, "status": "SUCCESS 10213", "execution_time": 4.992021083831787, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:26:48.912442Z", "completed_at": "2021-05-25T04:26:48.943054Z"}, {"name": "execute", "started_at": "2021-05-25T04:26:48.943438Z", "completed_at": "2021-05-25T04:26:53.476595Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Social_Media_Acquisitions') }}\r\n  ),\r\nDIM_SOCIAL_MEDIA_ACQUISITIONS as (\r\n      select\r\n        ID,\r\n        DATE,\r\n        PROFILE,\r\n        SOCIAL_NETWORK,\r\n        SESSIONS,\r\n        NEW_USERS,\r\n        AVG_SESSION_DURATION,\r\n        TRANSACTION_REVENUE,\r\n        PAGEVIEWS_PER_SESSION,\r\n        TRANSACTIONS,\r\n        BOUNCE_RATE,\r\n        PAGEVIEWS,\r\n        PERCENT_NEW_SESSIONS,\r\n        TRANSACTIONS_PER_SESSION,\r\n        Source_type,\r\n        'D_SOCIAL_MEDIA_ACQUISITIONS_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_SOCIAL_MEDIA_ACQUISITIONS", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "GA", "Dim_Social_Media_Acquisitions"], "unique_id": "model.sales_dataflo.Dim_Social_Media_Acquisitions", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/GA/Dim_Social_Media_Acquisitions.sql", "original_file_path": "ETL/Target/Tables/GA/Dim_Social_Media_Acquisitions.sql", "name": "Dim_Social_Media_Acquisitions", "resource_type": "model", "alias": "Dim_Social_Media_Acquisitions", "checksum": {"name": "sha256", "checksum": "718aa677ee941de2e336909b2196e526146bf75e9e722d213971c09f5a11d07a"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Social_Media_Acquisitions"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Social_Media_Acquisitions"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/GA/Dim_Social_Media_Acquisitions.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Social_Media_Acquisitions\n  ),\nDIM_SOCIAL_MEDIA_ACQUISITIONS as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        SOCIAL_NETWORK,\n        SESSIONS,\n        NEW_USERS,\n        AVG_SESSION_DURATION,\n        TRANSACTION_REVENUE,\n        PAGEVIEWS_PER_SESSION,\n        TRANSACTIONS,\n        BOUNCE_RATE,\n        PAGEVIEWS,\n        PERCENT_NEW_SESSIONS,\n        TRANSACTIONS_PER_SESSION,\n        Source_type,\n        'D_SOCIAL_MEDIA_ACQUISITIONS_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_SOCIAL_MEDIA_ACQUISITIONS", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Social_Media_Acquisitions\n  ),\nDIM_SOCIAL_MEDIA_ACQUISITIONS as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        SOCIAL_NETWORK,\n        SESSIONS,\n        NEW_USERS,\n        AVG_SESSION_DURATION,\n        TRANSACTION_REVENUE,\n        PAGEVIEWS_PER_SESSION,\n        TRANSACTIONS,\n        BOUNCE_RATE,\n        PAGEVIEWS,\n        PERCENT_NEW_SESSIONS,\n        TRANSACTIONS_PER_SESSION,\n        Source_type,\n        'D_SOCIAL_MEDIA_ACQUISITIONS_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_SOCIAL_MEDIA_ACQUISITIONS"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.2782809734344482, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:26:53.906982Z", "completed_at": "2021-05-25T04:26:53.931791Z"}, {"name": "execute", "started_at": "2021-05-25T04:26:53.932184Z", "completed_at": "2021-05-25T04:26:55.766385Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Adwords_Keyword') }}\r\n  ),\r\nDIM_ADWORDS_KEYWORD as (\r\n      select\r\n        ID,\r\n        DATE,\r\n        PROFILE,\r\n        KEYWORD,\r\n        GOAL_VALUE_ALL,\r\n        SESSIONS,\r\n        GOAL_COMPLETIONS_ALL,\r\n        PAGEVIEWS_PER_SESSION,\r\n        GOAL_CONVERSION_RATE_ALL,\r\n        USERS,\r\n        BOUNCE_RATE,\r\n        AD_CLICKS,\r\n        AD_COST,\r\n        CPC,\r\n        Source_type,\r\n        'D_ADWORDS_KEYWORD_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_ADWORDS_KEYWORD", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "GA", "Dim_Adwords_Keyword"], "unique_id": "model.sales_dataflo.Dim_Adwords_Keyword", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/GA/Dim_Adwords_Keyword.sql", "original_file_path": "ETL/Target/Tables/GA/Dim_Adwords_Keyword.sql", "name": "Dim_Adwords_Keyword", "resource_type": "model", "alias": "Dim_Adwords_Keyword", "checksum": {"name": "sha256", "checksum": "83ac8b85fb16292783c22d289c5ac8ce7977bb1b837f1f5f1caf514fe511488b"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Adwords_Keyword"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Adwords_Keyword"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/GA/Dim_Adwords_Keyword.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Adwords_Keyword\n  ),\nDIM_ADWORDS_KEYWORD as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        KEYWORD,\n        GOAL_VALUE_ALL,\n        SESSIONS,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        AD_CLICKS,\n        AD_COST,\n        CPC,\n        Source_type,\n        'D_ADWORDS_KEYWORD_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_ADWORDS_KEYWORD", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Adwords_Keyword\n  ),\nDIM_ADWORDS_KEYWORD as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        KEYWORD,\n        GOAL_VALUE_ALL,\n        SESSIONS,\n        GOAL_COMPLETIONS_ALL,\n        PAGEVIEWS_PER_SESSION,\n        GOAL_CONVERSION_RATE_ALL,\n        USERS,\n        BOUNCE_RATE,\n        AD_CLICKS,\n        AD_COST,\n        CPC,\n        Source_type,\n        'D_ADWORDS_KEYWORD_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_ADWORDS_KEYWORD"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.3258185386657715, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:26:56.187846Z", "completed_at": "2021-05-25T04:26:56.216316Z"}, {"name": "execute", "started_at": "2021-05-25T04:26:56.216717Z", "completed_at": "2021-05-25T04:26:58.090069Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'ENGAGEMENT_ID'\r\n      )\r\n}}\r\n\r\nWith Engagement AS(\r\n    select *  from {{ ref('Stg_Engagement') }}     \r\n),Dim_Engagement AS(\r\n SELECT\r\n   {{ dbt_utils.surrogate_key('ENGAGEMENT_ID') }} AS ENGAGEMENT_ID,\r\n   Source_ID ,\r\n   Source_type , \r\n   OWNER_ID as employee_id,\r\n   TYPE,\r\n   cast (CREATED_AT as date) AS initial_create_dt,\r\n   cast (LAST_UPDATED as date) AS LAST_UPDATED,\r\n   ACTIVE AS  Is_active,\r\n   'D_ENGAGEMENT_DIM_LOAD' AS DW_SESSION_NM,\r\n   {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n  FROM\r\n      Engagement \r\n)\r\n\r\nselect * from Dim_Engagement", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Sales", "Dim_Engagement"], "unique_id": "model.sales_dataflo.Dim_Engagement", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Sales/Dim_Engagement.sql", "original_file_path": "ETL/Target/Tables/Sales/Dim_Engagement.sql", "name": "Dim_Engagement", "resource_type": "model", "alias": "Dim_Engagement", "checksum": {"name": "sha256", "checksum": "14acfc702708da9c18c832bd27558ddac3c6bf3c4965b1ef354d6df2f5d6c142"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert", "unique_key": "ENGAGEMENT_ID"}, "tags": [], "refs": [["Stg_Engagement"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_Engagement"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Sales/Dim_Engagement.sql", "deferred": false, "compiled_sql": "\n\n\n\nWith Engagement AS(\n    select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Engagement     \n),Dim_Engagement AS(\n SELECT\n   md5(cast(\n    \n    coalesce(cast(ENGAGEMENT_ID as \n    varchar\n), '')\n\n as \n    varchar\n)) AS ENGAGEMENT_ID,\n   Source_ID ,\n   Source_type , \n   OWNER_ID as employee_id,\n   TYPE,\n   cast (CREATED_AT as date) AS initial_create_dt,\n   cast (LAST_UPDATED as date) AS LAST_UPDATED,\n   ACTIVE AS  Is_active,\n   'D_ENGAGEMENT_DIM_LOAD' AS DW_SESSION_NM,\n   \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n  FROM\n      Engagement \n)\n\nselect * from Dim_Engagement", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWith Engagement AS(\n    select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Engagement     \n),Dim_Engagement AS(\n SELECT\n   md5(cast(\n    \n    coalesce(cast(ENGAGEMENT_ID as \n    varchar\n), '')\n\n as \n    varchar\n)) AS ENGAGEMENT_ID,\n   Source_ID ,\n   Source_type , \n   OWNER_ID as employee_id,\n   TYPE,\n   cast (CREATED_AT as date) AS initial_create_dt,\n   cast (LAST_UPDATED as date) AS LAST_UPDATED,\n   ACTIVE AS  Is_active,\n   'D_ENGAGEMENT_DIM_LOAD' AS DW_SESSION_NM,\n   \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n  FROM\n      Engagement \n)\n\nselect * from Dim_Engagement"}, "error": null, "status": "SUCCESS 4374", "execution_time": 4.940876245498657, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:26:58.516121Z", "completed_at": "2021-05-25T04:26:58.546547Z"}, {"name": "execute", "started_at": "2021-05-25T04:26:58.546910Z", "completed_at": "2021-05-25T04:27:03.024646Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Geo_Network') }}\r\n  ),\r\nDIM_GEO_NETWORK as (\r\n      select\r\n        ID,\r\n        DATE,\r\n        PROFILE,\r\n        CONTINENT,\r\n        COUNTRY,\r\n        CITY,\r\n        METRO,\r\n        REGION,\r\n        NETWORK_LOCATION,\r\n        SESSIONS,\r\n        USERS,\r\n        Source_type,\r\n        'D_GEO_NETWORK_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_GEO_NETWORK", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "GA", "Dim_Geo_Network"], "unique_id": "model.sales_dataflo.Dim_Geo_Network", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/GA/Dim_Geo_Network.sql", "original_file_path": "ETL/Target/Tables/GA/Dim_Geo_Network.sql", "name": "Dim_Geo_Network", "resource_type": "model", "alias": "Dim_Geo_Network", "checksum": {"name": "sha256", "checksum": "9693117d1e0839c6b657813cb489603c22df7c53b50a88985e62651f5395ad17"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Geo_Network"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Geo_Network"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/GA/Dim_Geo_Network.sql", "deferred": false, "compiled_sql": "\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Geo_Network\n  ),\nDIM_GEO_NETWORK as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        CONTINENT,\n        COUNTRY,\n        CITY,\n        METRO,\n        REGION,\n        NETWORK_LOCATION,\n        SESSIONS,\n        USERS,\n        Source_type,\n        'D_GEO_NETWORK_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_GEO_NETWORK", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Geo_Network\n  ),\nDIM_GEO_NETWORK as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        CONTINENT,\n        COUNTRY,\n        CITY,\n        METRO,\n        REGION,\n        NETWORK_LOCATION,\n        SESSIONS,\n        USERS,\n        Source_type,\n        'D_GEO_NETWORK_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_GEO_NETWORK"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.3308961391448975, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:27:03.459548Z", "completed_at": "2021-05-25T04:27:03.489090Z"}, {"name": "execute", "started_at": "2021-05-25T04:27:03.489456Z", "completed_at": "2021-05-25T04:27:05.371114Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'Site_Rept_ID'\r\n      )\r\n}}\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Keyword_Site_Report_By_Site') }}\r\n  ),\r\nDIM_SITE as (\r\n      select\r\n        Site_Rept_ID,\r\n        COUNTRY,\r\n        DATE  as Date_day,\r\n        DEVICE,\r\n        KEYWORD,\r\n        SEARCH_TYPE,\r\n        SITE,\r\n        CLICKS,\r\n        IMPRESSIONS,\r\n        CTR,\r\n        POSITION,\r\n        _FIVETRAN_SYNCED,\r\n        Source_type as platform,\r\n        'D_PAGE_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_SITE", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "GSC", "Dim_Keyword_Site"], "unique_id": "model.sales_dataflo.Dim_Keyword_Site", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/GSC/Dim_Keyword_Site.sql", "original_file_path": "ETL/Target/Tables/GSC/Dim_Keyword_Site.sql", "name": "Dim_Keyword_Site", "resource_type": "model", "alias": "Dim_Keyword_Site", "checksum": {"name": "sha256", "checksum": "414aa38f4a1da08fb9cbe30e9cdcbacf2a259765fbcae1c4f2db8125b89522d8"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert", "unique_key": "Site_Rept_ID"}, "tags": [], "refs": [["Stg_Keyword_Site_Report_By_Site"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_Keyword_Site_Report_By_Site"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/GSC/Dim_Keyword_Site.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Keyword_Site_Report_By_Site\n  ),\nDIM_SITE as (\n      select\n        Site_Rept_ID,\n        COUNTRY,\n        DATE  as Date_day,\n        DEVICE,\n        KEYWORD,\n        SEARCH_TYPE,\n        SITE,\n        CLICKS,\n        IMPRESSIONS,\n        CTR,\n        POSITION,\n        _FIVETRAN_SYNCED,\n        Source_type as platform,\n        'D_PAGE_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_SITE", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Keyword_Site_Report_By_Site\n  ),\nDIM_SITE as (\n      select\n        Site_Rept_ID,\n        COUNTRY,\n        DATE  as Date_day,\n        DEVICE,\n        KEYWORD,\n        SEARCH_TYPE,\n        SITE,\n        CLICKS,\n        IMPRESSIONS,\n        CTR,\n        POSITION,\n        _FIVETRAN_SYNCED,\n        Source_type as platform,\n        'D_PAGE_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_SITE"}, "error": null, "status": "SUCCESS 19300", "execution_time": 4.864215135574341, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:27:05.793060Z", "completed_at": "2021-05-25T04:27:05.823572Z"}, {"name": "execute", "started_at": "2021-05-25T04:27:05.823928Z", "completed_at": "2021-05-25T04:27:10.232820Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'Page_Rept_ID'\r\n      )\r\n}}\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Page_Report') }}\r\n  ),\r\nDIM_PAGE as (\r\n      select\r\n        Page_Rept_ID,\r\n        COUNTRY,\r\n        DATE  as Date_day,\r\n        DEVICE,\r\n        PAGE,\r\n        SEARCH_TYPE,\r\n        SITE,\r\n        CLICKS,\r\n        IMPRESSIONS,\r\n        CTR,\r\n        POSITION,\r\n        _FIVETRAN_SYNCED,\r\n        Source_type as Platform,\r\n        'D_PAGE_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_PAGE", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "GSC", "Dim_Page"], "unique_id": "model.sales_dataflo.Dim_Page", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/GSC/Dim_Page.sql", "original_file_path": "ETL/Target/Tables/GSC/Dim_Page.sql", "name": "Dim_Page", "resource_type": "model", "alias": "Dim_Page", "checksum": {"name": "sha256", "checksum": "912dab8b05ed18af8b7df30cb1748d2e18a36d42ddaf7c7ccc9effd423627633"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert", "unique_key": "Page_Rept_ID"}, "tags": [], "refs": [["Stg_Page_Report"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_Page_Report"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/GSC/Dim_Page.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Page_Report\n  ),\nDIM_PAGE as (\n      select\n        Page_Rept_ID,\n        COUNTRY,\n        DATE  as Date_day,\n        DEVICE,\n        PAGE,\n        SEARCH_TYPE,\n        SITE,\n        CLICKS,\n        IMPRESSIONS,\n        CTR,\n        POSITION,\n        _FIVETRAN_SYNCED,\n        Source_type as Platform,\n        'D_PAGE_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_PAGE", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Page_Report\n  ),\nDIM_PAGE as (\n      select\n        Page_Rept_ID,\n        COUNTRY,\n        DATE  as Date_day,\n        DEVICE,\n        PAGE,\n        SEARCH_TYPE,\n        SITE,\n        CLICKS,\n        IMPRESSIONS,\n        CTR,\n        POSITION,\n        _FIVETRAN_SYNCED,\n        Source_type as Platform,\n        'D_PAGE_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_PAGE"}, "error": null, "status": "SUCCESS 12683", "execution_time": 5.1169209480285645, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:27:10.659875Z", "completed_at": "2021-05-25T04:27:10.688533Z"}, {"name": "execute", "started_at": "2021-05-25T04:27:10.688947Z", "completed_at": "2021-05-25T04:27:15.347232Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Platform_Device') }}\r\n  ),\r\nDIM_PLATFORM_DEVICE as (\r\n      select\r\n        ID,\r\n        DATE,\r\n        PROFILE,\r\n        MOBILE_DEVICE_BRANDING,\r\n        DEVICE_CATEGORY,\r\n        MOBILE_DEVICE_MODEL,\r\n        MOBILE_INPUT_SELECTOR,\r\n        OPERATING_SYSTEM,\r\n        DATA_SOURCE,\r\n        GOAL_VALUE_ALL,\r\n        GOAL_COMPLETIONS_ALL,\r\n        GOAL_STARTS_ALL,\r\n        GOAL_CONVERSION_RATE_ALL,\r\n        GOAL_ABANDONS_ALL,\r\n        GOAL_VALUE_PER_SESSION,\r\n        Source_type,\r\n        'D_PLATFORM_DEVICE_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_PLATFORM_DEVICE", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "GA", "Dim_Platform_Device"], "unique_id": "model.sales_dataflo.Dim_Platform_Device", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/GA/Dim_Platform_Device.sql", "original_file_path": "ETL/Target/Tables/GA/Dim_Platform_Device.sql", "name": "Dim_Platform_Device", "resource_type": "model", "alias": "Dim_Platform_Device", "checksum": {"name": "sha256", "checksum": "ff936b12f7d0b28d544ee64863389287772f889373468a98fdc49ce452e4be2c"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Platform_Device"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Platform_Device"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/GA/Dim_Platform_Device.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Platform_Device\n  ),\nDIM_PLATFORM_DEVICE as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        MOBILE_DEVICE_BRANDING,\n        DEVICE_CATEGORY,\n        MOBILE_DEVICE_MODEL,\n        MOBILE_INPUT_SELECTOR,\n        OPERATING_SYSTEM,\n        DATA_SOURCE,\n        GOAL_VALUE_ALL,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_STARTS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        GOAL_ABANDONS_ALL,\n        GOAL_VALUE_PER_SESSION,\n        Source_type,\n        'D_PLATFORM_DEVICE_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_PLATFORM_DEVICE", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Platform_Device\n  ),\nDIM_PLATFORM_DEVICE as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        MOBILE_DEVICE_BRANDING,\n        DEVICE_CATEGORY,\n        MOBILE_DEVICE_MODEL,\n        MOBILE_INPUT_SELECTOR,\n        OPERATING_SYSTEM,\n        DATA_SOURCE,\n        GOAL_VALUE_ALL,\n        GOAL_COMPLETIONS_ALL,\n        GOAL_STARTS_ALL,\n        GOAL_CONVERSION_RATE_ALL,\n        GOAL_ABANDONS_ALL,\n        GOAL_VALUE_PER_SESSION,\n        Source_type,\n        'D_PLATFORM_DEVICE_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_PLATFORM_DEVICE"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.5102996826171875, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:27:15.779297Z", "completed_at": "2021-05-25T04:27:15.816040Z"}, {"name": "execute", "started_at": "2021-05-25T04:27:15.816442Z", "completed_at": "2021-05-25T04:27:17.871627Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Traffic') }}\r\n  ),\r\nDIM_TRAFFIC as (\r\n      select\r\n        ID,\r\n        DATE,\r\n        PROFILE,\r\n        PAGE_TITLE,\r\n        PAGEVIEWS,\r\n        AVG_TIME_ON_PAGE,\r\n        PAGE_VALUE,\r\n        UNIQUE_PAGEVIEWS,\r\n        EXIT_RATE,\r\n        ENTRANCES,\r\n        USERS,\r\n        BOUNCE_RATE, \r\n        Source_type,\r\n        'D_TRAFFIC_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_TRAFFIC", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "GA", "Dim_Traffic"], "unique_id": "model.sales_dataflo.Dim_Traffic", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/GA/Dim_Traffic.sql", "original_file_path": "ETL/Target/Tables/GA/Dim_Traffic.sql", "name": "Dim_Traffic", "resource_type": "model", "alias": "Dim_Traffic", "checksum": {"name": "sha256", "checksum": "f607dde57376454397edbb8065b68e2104cbb6bfbf05cf9649229cc81fbc780f"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Traffic"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Traffic"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/GA/Dim_Traffic.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Traffic\n  ),\nDIM_TRAFFIC as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        PAGE_TITLE,\n        PAGEVIEWS,\n        AVG_TIME_ON_PAGE,\n        PAGE_VALUE,\n        UNIQUE_PAGEVIEWS,\n        EXIT_RATE,\n        ENTRANCES,\n        USERS,\n        BOUNCE_RATE, \n        Source_type,\n        'D_TRAFFIC_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_TRAFFIC", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Traffic\n  ),\nDIM_TRAFFIC as (\n      select\n        ID,\n        DATE,\n        PROFILE,\n        PAGE_TITLE,\n        PAGEVIEWS,\n        AVG_TIME_ON_PAGE,\n        PAGE_VALUE,\n        UNIQUE_PAGEVIEWS,\n        EXIT_RATE,\n        ENTRANCES,\n        USERS,\n        BOUNCE_RATE, \n        Source_type,\n        'D_TRAFFIC_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_TRAFFIC"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.3583266735076904, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:27:18.292283Z", "completed_at": "2021-05-25T04:27:18.320821Z"}, {"name": "execute", "started_at": "2021-05-25T04:27:18.321191Z", "completed_at": "2021-05-25T04:27:20.228201Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{ config(\r\n    materialized=\"table\"\r\n) \r\n}}\r\n\r\nWITH source  AS (\r\n       select *  from {{ ref('Stg_Contact') }} \r\n    ),Dim_Address  AS(\r\n        SELECT \r\n            {{ dbt_utils.surrogate_key('Contact_ID') }}  AS  address_id,\r\n            account_id  AS account_id,\r\n            source_id,\r\n            MAILING_STREET AS STREET,\r\n            MAILING_CITY AS CITY,\r\n            MAILING_STATE AS STATE,\r\n            MAILING_POSTAL_CODE  AS POSTAL_CODE,\r\n            MAILING_COUNTRY AS COUNTRY,\r\n            'BILLING'  AS address_type,\r\n            Source_type AS Source_type,\r\n            'D_ADDRESS_DIM_LOAD'  AS DW_SESSION_NM,\r\n            {{ dbt_utils.current_timestamp() }}  AS DW_INS_UPD_DTS \r\n            from source\r\n        union \r\n        SELECT\r\n            {{ dbt_utils.surrogate_key('Contact_ID') }}  AS  address_id,\r\n            account_id  AS account_id,\r\n            source_id,\r\n            OTHER_STREET AS STREET,\r\n            OTHER_CITY AS CITY,\r\n            OTHER_STATE AS STATE,\r\n            OTHER_POSTAL_CODE  AS POSTAL_CODE,\r\n            OTHER_COUNTRY AS COUNTRY, \r\n            'SHIPPING'  AS address_type,\r\n            Source_type AS Source_type,\r\n            'D_ADDRESS_DIM_LOAD'  AS DW_SESSION_NM,\r\n            {{ dbt_utils.current_timestamp() }}  AS DW_INS_UPD_DTS \r\n             from source\r\n    )\r\n    \r\nselect * from Dim_Address", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Sales", "Dim_Address"], "unique_id": "model.sales_dataflo.Dim_Address", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Sales/Dim_Address.Sql", "original_file_path": "ETL/Target/Tables/Sales/Dim_Address.Sql", "name": "Dim_Address", "resource_type": "model", "alias": "Dim_Address", "checksum": {"name": "sha256", "checksum": "272081c55d876b00bd395a4e61437a7654eee468cda1ebd635c675704521955c"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Contact"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_Contact"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Sales/Dim_Address.Sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source  AS (\n       select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Contact \n    ),Dim_Address  AS(\n        SELECT \n            md5(cast(\n    \n    coalesce(cast(Contact_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS  address_id,\n            account_id  AS account_id,\n            source_id,\n            MAILING_STREET AS STREET,\n            MAILING_CITY AS CITY,\n            MAILING_STATE AS STATE,\n            MAILING_POSTAL_CODE  AS POSTAL_CODE,\n            MAILING_COUNTRY AS COUNTRY,\n            'BILLING'  AS address_type,\n            Source_type AS Source_type,\n            'D_ADDRESS_DIM_LOAD'  AS DW_SESSION_NM,\n            \n    current_timestamp::\n    timestamp_ntz\n\n  AS DW_INS_UPD_DTS \n            from source\n        union \n        SELECT\n            md5(cast(\n    \n    coalesce(cast(Contact_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS  address_id,\n            account_id  AS account_id,\n            source_id,\n            OTHER_STREET AS STREET,\n            OTHER_CITY AS CITY,\n            OTHER_STATE AS STATE,\n            OTHER_POSTAL_CODE  AS POSTAL_CODE,\n            OTHER_COUNTRY AS COUNTRY, \n            'SHIPPING'  AS address_type,\n            Source_type AS Source_type,\n            'D_ADDRESS_DIM_LOAD'  AS DW_SESSION_NM,\n            \n    current_timestamp::\n    timestamp_ntz\n\n  AS DW_INS_UPD_DTS \n             from source\n    )\n    \nselect * from Dim_Address", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source  AS (\n       select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Contact \n    ),Dim_Address  AS(\n        SELECT \n            md5(cast(\n    \n    coalesce(cast(Contact_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS  address_id,\n            account_id  AS account_id,\n            source_id,\n            MAILING_STREET AS STREET,\n            MAILING_CITY AS CITY,\n            MAILING_STATE AS STATE,\n            MAILING_POSTAL_CODE  AS POSTAL_CODE,\n            MAILING_COUNTRY AS COUNTRY,\n            'BILLING'  AS address_type,\n            Source_type AS Source_type,\n            'D_ADDRESS_DIM_LOAD'  AS DW_SESSION_NM,\n            \n    current_timestamp::\n    timestamp_ntz\n\n  AS DW_INS_UPD_DTS \n            from source\n        union \n        SELECT\n            md5(cast(\n    \n    coalesce(cast(Contact_ID as \n    varchar\n), '')\n\n as \n    varchar\n))  AS  address_id,\n            account_id  AS account_id,\n            source_id,\n            OTHER_STREET AS STREET,\n            OTHER_CITY AS CITY,\n            OTHER_STATE AS STATE,\n            OTHER_POSTAL_CODE  AS POSTAL_CODE,\n            OTHER_COUNTRY AS COUNTRY, \n            'SHIPPING'  AS address_type,\n            Source_type AS Source_type,\n            'D_ADDRESS_DIM_LOAD'  AS DW_SESSION_NM,\n            \n    current_timestamp::\n    timestamp_ntz\n\n  AS DW_INS_UPD_DTS \n             from source\n    )\n    \nselect * from Dim_Address"}, "error": null, "status": "SUCCESS 1", "execution_time": 7.430055141448975, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:27:20.794033Z", "completed_at": "2021-05-25T04:27:20.824974Z"}, {"name": "execute", "started_at": "2021-05-25T04:27:20.825358Z", "completed_at": "2021-05-25T04:27:27.806767Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'Campaign_ID'\r\n      )\r\n}}\r\n\r\nWITH source AS (\r\n    select * from {{ ref('Stg_Campaign') }} \r\n    ),\r\nDim_Campaign as (\r\n\r\n      SELECT\r\n        NULL AS Account_ID,\r\n        Campaign_ID,\r\n        OWNER_ID as Campaign_OWNER_ID,\r\n        NAME AS Campaign_Name,\r\n        IS_ACTIVE AS active_flag,\r\n        Source_ID,\r\n        TYPE AS TYPE,\r\n        STATUS AS STATUS,\r\n        START_DATE AS START_DATE,\r\n        END_DATE AS END_DATE,\r\n        EXPECTED_REVENUE AS EXPECTED_REVENUE,\r\n        BUDGETED_COST AS BUDGETED_COST,\r\n        ACTUAL_COST AS ACTUAL_COST,\r\n        EXPECTED_RESPONSE AS EXPECTED_RESPONSE,\r\n        NUMBER_SENT AS NUMBER_SENT,\r\n        NUMBER_OF_LEADS AS NUMBER_OF_LEADS,\r\n        NUMBER_OF_CONVERTED_LEADS AS NUMBER_OF_CONVERTED_LEADS,\r\n        NUMBER_OF_CONTACTS AS NUMBER_OF_CONTACTS,\r\n        NUMBER_OF_RESPONSES AS NUMBER_OF_RESPONSES,\r\n        NUMBER_OF_OPPORTUNITIES AS NUMBER_OF_OPPORTUNITIES,\r\n        NUMBER_OF_WON_OPPORTUNITIES AS NUMBER_OF_WON_OPPORTUNITIES,\r\n        AMOUNT_ALL_OPPORTUNITIES AS AMOUNT_ALL_OPPORTUNITIES,\r\n        AMOUNT_WON_OPPORTUNITIES AS AMOUNT_WON_OPPORTUNITIES,\r\n        Source_type AS Source_type,\r\n        'D_CAMPAIGN_DIM_LOAD'  AS \tDW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n     FROM\r\n        source     \r\n      )\r\n\r\n  select * from  Dim_Campaign", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Sales", "Dim_Campaign"], "unique_id": "model.sales_dataflo.Dim_Campaign", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Sales/Dim_Campaign.sql", "original_file_path": "ETL/Target/Tables/Sales/Dim_Campaign.sql", "name": "Dim_Campaign", "resource_type": "model", "alias": "Dim_Campaign", "checksum": {"name": "sha256", "checksum": "890f53b97888c96015b1d5144ac51f9e1548a0a4fb5ada2f5a1faf5b59803ecb"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert", "unique_key": "Campaign_ID"}, "tags": [], "refs": [["Stg_Campaign"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_Campaign"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Sales/Dim_Campaign.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS (\n    select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Campaign \n    ),\nDim_Campaign as (\n\n      SELECT\n        NULL AS Account_ID,\n        Campaign_ID,\n        OWNER_ID as Campaign_OWNER_ID,\n        NAME AS Campaign_Name,\n        IS_ACTIVE AS active_flag,\n        Source_ID,\n        TYPE AS TYPE,\n        STATUS AS STATUS,\n        START_DATE AS START_DATE,\n        END_DATE AS END_DATE,\n        EXPECTED_REVENUE AS EXPECTED_REVENUE,\n        BUDGETED_COST AS BUDGETED_COST,\n        ACTUAL_COST AS ACTUAL_COST,\n        EXPECTED_RESPONSE AS EXPECTED_RESPONSE,\n        NUMBER_SENT AS NUMBER_SENT,\n        NUMBER_OF_LEADS AS NUMBER_OF_LEADS,\n        NUMBER_OF_CONVERTED_LEADS AS NUMBER_OF_CONVERTED_LEADS,\n        NUMBER_OF_CONTACTS AS NUMBER_OF_CONTACTS,\n        NUMBER_OF_RESPONSES AS NUMBER_OF_RESPONSES,\n        NUMBER_OF_OPPORTUNITIES AS NUMBER_OF_OPPORTUNITIES,\n        NUMBER_OF_WON_OPPORTUNITIES AS NUMBER_OF_WON_OPPORTUNITIES,\n        AMOUNT_ALL_OPPORTUNITIES AS AMOUNT_ALL_OPPORTUNITIES,\n        AMOUNT_WON_OPPORTUNITIES AS AMOUNT_WON_OPPORTUNITIES,\n        Source_type AS Source_type,\n        'D_CAMPAIGN_DIM_LOAD'  AS \tDW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n     FROM\n        source     \n      )\n\n  select * from  Dim_Campaign", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS (\n    select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Campaign \n    ),\nDim_Campaign as (\n\n      SELECT\n        NULL AS Account_ID,\n        Campaign_ID,\n        OWNER_ID as Campaign_OWNER_ID,\n        NAME AS Campaign_Name,\n        IS_ACTIVE AS active_flag,\n        Source_ID,\n        TYPE AS TYPE,\n        STATUS AS STATUS,\n        START_DATE AS START_DATE,\n        END_DATE AS END_DATE,\n        EXPECTED_REVENUE AS EXPECTED_REVENUE,\n        BUDGETED_COST AS BUDGETED_COST,\n        ACTUAL_COST AS ACTUAL_COST,\n        EXPECTED_RESPONSE AS EXPECTED_RESPONSE,\n        NUMBER_SENT AS NUMBER_SENT,\n        NUMBER_OF_LEADS AS NUMBER_OF_LEADS,\n        NUMBER_OF_CONVERTED_LEADS AS NUMBER_OF_CONVERTED_LEADS,\n        NUMBER_OF_CONTACTS AS NUMBER_OF_CONTACTS,\n        NUMBER_OF_RESPONSES AS NUMBER_OF_RESPONSES,\n        NUMBER_OF_OPPORTUNITIES AS NUMBER_OF_OPPORTUNITIES,\n        NUMBER_OF_WON_OPPORTUNITIES AS NUMBER_OF_WON_OPPORTUNITIES,\n        AMOUNT_ALL_OPPORTUNITIES AS AMOUNT_ALL_OPPORTUNITIES,\n        AMOUNT_WON_OPPORTUNITIES AS AMOUNT_WON_OPPORTUNITIES,\n        Source_type AS Source_type,\n        'D_CAMPAIGN_DIM_LOAD'  AS \tDW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n     FROM\n        source     \n      )\n\n  select * from  Dim_Campaign"}, "error": null, "status": "SUCCESS 9646", "execution_time": 5.192774295806885, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:27:28.226616Z", "completed_at": "2021-05-25T04:27:28.256373Z"}, {"name": "execute", "started_at": "2021-05-25T04:27:28.256770Z", "completed_at": "2021-05-25T04:27:32.993721Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'Stage_id'\r\n      )\r\n}}\r\n\r\nWITH source AS (\r\n       select *  from {{ ref('Stg_Opportunity_Stage') }}  \r\n    ),Dim_Opportunity_stage as(\r\n        SELECT\r\n        stage_id,\r\n        MASTER_LABEL AS stage_name,\r\n        SORT_ORDER AS stage_position,\r\n        NULL AS account_id,\r\n        IS_ACTIVE AS active_flag,\r\n        Source_id,\r\n        FORECAST_CATEGORY AS FORECAST_CATEGORY,\r\n        NULL AS lead_opp_flag,\r\n        IS_CLOSED AS IS_CLOSED,\r\n        IS_WON AS IS_WON,\r\n        DEFAULT_PROBABILITY AS OPPORTUNITY_STAGE,\r\n        Source_type AS Source_type ,\r\n        'D_OPPORTUNITYSTAGES_DIM_LOAD'  AS \tDW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n     FROM\r\n       source\r\n    )    \r\n\r\nselect * from Dim_Opportunity_stage", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Sales", "Dim_Opportunity_Stage"], "unique_id": "model.sales_dataflo.Dim_Opportunity_Stage", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Sales/Dim_Opportunity_Stage.sql", "original_file_path": "ETL/Target/Tables/Sales/Dim_Opportunity_Stage.sql", "name": "Dim_Opportunity_Stage", "resource_type": "model", "alias": "Dim_Opportunity_Stage", "checksum": {"name": "sha256", "checksum": "9c65b3385dd8c4b2114b646a3582137c1550240918754858611e69dcd253c67b"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert", "unique_key": "Stage_id"}, "tags": [], "refs": [["Stg_Opportunity_Stage"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_Opportunity_Stage"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Sales/Dim_Opportunity_Stage.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS (\n       select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity_Stage  \n    ),Dim_Opportunity_stage as(\n        SELECT\n        stage_id,\n        MASTER_LABEL AS stage_name,\n        SORT_ORDER AS stage_position,\n        NULL AS account_id,\n        IS_ACTIVE AS active_flag,\n        Source_id,\n        FORECAST_CATEGORY AS FORECAST_CATEGORY,\n        NULL AS lead_opp_flag,\n        IS_CLOSED AS IS_CLOSED,\n        IS_WON AS IS_WON,\n        DEFAULT_PROBABILITY AS OPPORTUNITY_STAGE,\n        Source_type AS Source_type ,\n        'D_OPPORTUNITYSTAGES_DIM_LOAD'  AS \tDW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n     FROM\n       source\n    )    \n\nselect * from Dim_Opportunity_stage", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS (\n       select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity_Stage  \n    ),Dim_Opportunity_stage as(\n        SELECT\n        stage_id,\n        MASTER_LABEL AS stage_name,\n        SORT_ORDER AS stage_position,\n        NULL AS account_id,\n        IS_ACTIVE AS active_flag,\n        Source_id,\n        FORECAST_CATEGORY AS FORECAST_CATEGORY,\n        NULL AS lead_opp_flag,\n        IS_CLOSED AS IS_CLOSED,\n        IS_WON AS IS_WON,\n        DEFAULT_PROBABILITY AS OPPORTUNITY_STAGE,\n        Source_type AS Source_type ,\n        'D_OPPORTUNITYSTAGES_DIM_LOAD'  AS \tDW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n     FROM\n       source\n    )    \n\nselect * from Dim_Opportunity_stage"}, "error": null, "status": "SUCCESS 40", "execution_time": 5.117753267288208, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:27:33.421989Z", "completed_at": "2021-05-25T04:27:33.451748Z"}, {"name": "execute", "started_at": "2021-05-25T04:27:33.452087Z", "completed_at": "2021-05-25T04:27:38.104652Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'Page_Rept_ID'\r\n      )\r\n}}\r\n\r\nWITH source AS\r\n (\r\n select * from {{ ref('Stg_Keyword_Page_Report') }}\r\n  ),\r\nDIM_PAGE as (\r\n      select\r\n        Page_Rept_ID,\r\n        COUNTRY,\r\n        DATE as Date_day,\r\n        DEVICE,\r\n        KEYWORD,\r\n        PAGE,\r\n        SEARCH_TYPE,\r\n        SITE,\r\n        CLICKS,\r\n        IMPRESSIONS,\r\n        CTR,\r\n        POSITION,\r\n        _FIVETRAN_SYNCED,\r\n        Source_type as Platform,\r\n        'D_PAGE_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\nselect * from DIM_PAGE", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "GSC", "Dim_Keyword_Page"], "unique_id": "model.sales_dataflo.Dim_Keyword_Page", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/GSC/Dim_Keyword_Page.sql", "original_file_path": "ETL/Target/Tables/GSC/Dim_Keyword_Page.sql", "name": "Dim_Keyword_Page", "resource_type": "model", "alias": "Dim_Keyword_Page", "checksum": {"name": "sha256", "checksum": "1c459e32f070dfe5ebd6d7ae9e259218884ad3a02668d303a13539770f0a1dcc"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert", "unique_key": "Page_Rept_ID"}, "tags": [], "refs": [["Stg_Keyword_Page_Report"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_Keyword_Page_Report"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/GSC/Dim_Keyword_Page.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Keyword_Page_Report\n  ),\nDIM_PAGE as (\n      select\n        Page_Rept_ID,\n        COUNTRY,\n        DATE as Date_day,\n        DEVICE,\n        KEYWORD,\n        PAGE,\n        SEARCH_TYPE,\n        SITE,\n        CLICKS,\n        IMPRESSIONS,\n        CTR,\n        POSITION,\n        _FIVETRAN_SYNCED,\n        Source_type as Platform,\n        'D_PAGE_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_PAGE", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH source AS\n (\n select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Keyword_Page_Report\n  ),\nDIM_PAGE as (\n      select\n        Page_Rept_ID,\n        COUNTRY,\n        DATE as Date_day,\n        DEVICE,\n        KEYWORD,\n        PAGE,\n        SEARCH_TYPE,\n        SITE,\n        CLICKS,\n        IMPRESSIONS,\n        CTR,\n        POSITION,\n        _FIVETRAN_SYNCED,\n        Source_type as Platform,\n        'D_PAGE_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\nselect * from DIM_PAGE"}, "error": null, "status": "SUCCESS 19420", "execution_time": 5.183189392089844, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:27:38.542293Z", "completed_at": "2021-05-25T04:27:38.570940Z"}, {"name": "execute", "started_at": "2021-05-25T04:27:38.571253Z", "completed_at": "2021-05-25T04:27:43.298527Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'Opportunity_Calc_id'\r\n      )\r\n}}\r\n\r\nWITH opportunity_history AS (\r\n       select *  from {{ ref('Stg_Opportunity_History') }} \r\n),opportunity as(\r\n        select *  from {{ ref('Stg_Opportunity') }} \r\n),Dim_Opportunity_Calc as(\r\n    SELECT\r\n        opportunity_history.Opportunity_Calc_id as Opportunity_Calc_id,\r\n        opportunity_history.OPPORTUNITY_ID as opp_calc_stage_id,\r\n        opportunity_history.CREATED_DATE as opp_calc_stage_start_datetime,\r\n        case when opportunity_history.SYSTEM_MODSTAMP = opportunity_history.CREATED_DATE then NULL \r\n        else opportunity_history.SYSTEM_MODSTAMP end as opp_calc_stage_end_datetime,\r\n        opportunity_history.STAGE_NAME as opp_calc_stage_name,\r\n        opportunity_history.AMOUNT as opp_calc_AMOUNT,\r\n        opportunity_history.EXPECTED_REVENUE  as opp_calc_EXPECTED_REVENUE,\r\n        opportunity_history.CLOSE_DATE  as opp_calc_CLOSE_DATE,\r\n        opportunity_history.PROBABILITY  as opp_calc_PROBABILITY,\r\n        opportunity_history.FORECAST_CATEGORY  as opp_calc_FORECAST_CATEGORY,\r\n        --opportunity_history.CURRENCY_ISO_CODE  as opp_calc_CURRENCY_ISO_CODE,\r\n        opportunity_history.IS_DELETED as opp_calc_IS_DELETED,\r\n        opportunity_history.PREV_AMOUNT  as opp_calc_PREV_AMOUNT,\r\n        opportunity_history.PREV_CLOSE_DATE  as opp_calc_PREV_CLOSE_DATE,\r\n        case when opportunity_history.SYSTEM_MODSTAMP = opportunity_history.CREATED_DATE then 'Y' else 'N' end  as Active_Flag,\r\n        opportunity_history.Source_type AS Source_type,\r\n        'D_OPPORTUNITY_CALC_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n        FROM\r\n          opportunity join opportunity_history \r\n          on opportunity_history.OPPORTUNITY_ID = opportunity.Source_ID \r\n          and opportunity_history.Source_type = opportunity.Source_type  \r\n)  \r\n \r\nselect * from Dim_Opportunity_Calc", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Sales", "Dim_Opportunity_Calc"], "unique_id": "model.sales_dataflo.Dim_Opportunity_Calc", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Sales/Dim_Opportunity_Calc.sql", "original_file_path": "ETL/Target/Tables/Sales/Dim_Opportunity_Calc.sql", "name": "Dim_Opportunity_Calc", "resource_type": "model", "alias": "Dim_Opportunity_Calc", "checksum": {"name": "sha256", "checksum": "086dcd07c16a815df7152e87f2228c889edaf0234d800af96f2446128634e145"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert", "unique_key": "Opportunity_Calc_id"}, "tags": [], "refs": [["Stg_Opportunity_History"], ["Stg_Opportunity"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Stg_Opportunity_History", "model.sales_dataflo.Stg_Opportunity"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Sales/Dim_Opportunity_Calc.sql", "deferred": false, "compiled_sql": "\n\n\n\nWITH opportunity_history AS (\n       select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity_History \n),opportunity as(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity \n),Dim_Opportunity_Calc as(\n    SELECT\n        opportunity_history.Opportunity_Calc_id as Opportunity_Calc_id,\n        opportunity_history.OPPORTUNITY_ID as opp_calc_stage_id,\n        opportunity_history.CREATED_DATE as opp_calc_stage_start_datetime,\n        case when opportunity_history.SYSTEM_MODSTAMP = opportunity_history.CREATED_DATE then NULL \n        else opportunity_history.SYSTEM_MODSTAMP end as opp_calc_stage_end_datetime,\n        opportunity_history.STAGE_NAME as opp_calc_stage_name,\n        opportunity_history.AMOUNT as opp_calc_AMOUNT,\n        opportunity_history.EXPECTED_REVENUE  as opp_calc_EXPECTED_REVENUE,\n        opportunity_history.CLOSE_DATE  as opp_calc_CLOSE_DATE,\n        opportunity_history.PROBABILITY  as opp_calc_PROBABILITY,\n        opportunity_history.FORECAST_CATEGORY  as opp_calc_FORECAST_CATEGORY,\n        --opportunity_history.CURRENCY_ISO_CODE  as opp_calc_CURRENCY_ISO_CODE,\n        opportunity_history.IS_DELETED as opp_calc_IS_DELETED,\n        opportunity_history.PREV_AMOUNT  as opp_calc_PREV_AMOUNT,\n        opportunity_history.PREV_CLOSE_DATE  as opp_calc_PREV_CLOSE_DATE,\n        case when opportunity_history.SYSTEM_MODSTAMP = opportunity_history.CREATED_DATE then 'Y' else 'N' end  as Active_Flag,\n        opportunity_history.Source_type AS Source_type,\n        'D_OPPORTUNITY_CALC_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n        FROM\n          opportunity join opportunity_history \n          on opportunity_history.OPPORTUNITY_ID = opportunity.Source_ID \n          and opportunity_history.Source_type = opportunity.Source_type  \n)  \n \nselect * from Dim_Opportunity_Calc", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nWITH opportunity_history AS (\n       select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity_History \n),opportunity as(\n        select *  from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Opportunity \n),Dim_Opportunity_Calc as(\n    SELECT\n        opportunity_history.Opportunity_Calc_id as Opportunity_Calc_id,\n        opportunity_history.OPPORTUNITY_ID as opp_calc_stage_id,\n        opportunity_history.CREATED_DATE as opp_calc_stage_start_datetime,\n        case when opportunity_history.SYSTEM_MODSTAMP = opportunity_history.CREATED_DATE then NULL \n        else opportunity_history.SYSTEM_MODSTAMP end as opp_calc_stage_end_datetime,\n        opportunity_history.STAGE_NAME as opp_calc_stage_name,\n        opportunity_history.AMOUNT as opp_calc_AMOUNT,\n        opportunity_history.EXPECTED_REVENUE  as opp_calc_EXPECTED_REVENUE,\n        opportunity_history.CLOSE_DATE  as opp_calc_CLOSE_DATE,\n        opportunity_history.PROBABILITY  as opp_calc_PROBABILITY,\n        opportunity_history.FORECAST_CATEGORY  as opp_calc_FORECAST_CATEGORY,\n        --opportunity_history.CURRENCY_ISO_CODE  as opp_calc_CURRENCY_ISO_CODE,\n        opportunity_history.IS_DELETED as opp_calc_IS_DELETED,\n        opportunity_history.PREV_AMOUNT  as opp_calc_PREV_AMOUNT,\n        opportunity_history.PREV_CLOSE_DATE  as opp_calc_PREV_CLOSE_DATE,\n        case when opportunity_history.SYSTEM_MODSTAMP = opportunity_history.CREATED_DATE then 'Y' else 'N' end  as Active_Flag,\n        opportunity_history.Source_type AS Source_type,\n        'D_OPPORTUNITY_CALC_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n        FROM\n          opportunity join opportunity_history \n          on opportunity_history.OPPORTUNITY_ID = opportunity.Source_ID \n          and opportunity_history.Source_type = opportunity.Source_type  \n)  \n \nselect * from Dim_Opportunity_Calc"}, "error": null, "status": "SUCCESS 279742", "execution_time": 10.970051050186157, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:27:43.728094Z", "completed_at": "2021-05-25T04:27:43.756651Z"}, {"name": "execute", "started_at": "2021-05-25T04:27:43.757127Z", "completed_at": "2021-05-25T04:27:54.272510Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('Dim_Account') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Views", "VW_Account"], "unique_id": "model.sales_dataflo.VW_Account", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Views/VW_Account.sql", "original_file_path": "ETL/Target/Views/VW_Account.sql", "name": "VW_Account", "resource_type": "model", "alias": "VW_Account", "checksum": {"name": "sha256", "checksum": "70b956dd282029fc4941e66a4f34ea75840506ff718fba1f48546f17b9017c1f"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_Account"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Dim_Account"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Views/VW_Account.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.4836809635162354, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:27:54.700668Z", "completed_at": "2021-05-25T04:27:54.729079Z"}, {"name": "execute", "started_at": "2021-05-25T04:27:54.729467Z", "completed_at": "2021-05-25T04:27:56.763814Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('Dim_Contact') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Views", "VW_Contact"], "unique_id": "model.sales_dataflo.VW_Contact", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Views/VW_Contact.sql", "original_file_path": "ETL/Target/Views/VW_Contact.sql", "name": "VW_Contact", "resource_type": "model", "alias": "VW_Contact", "checksum": {"name": "sha256", "checksum": "1c1f291bdb70ca35558ad27cde87581411af1580e9bf14144b75de2fd8954bb3"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_Contact"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Dim_Contact"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Views/VW_Contact.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Contact", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Contact"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.4800662994384766, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:27:57.188319Z", "completed_at": "2021-05-25T04:27:57.218907Z"}, {"name": "execute", "started_at": "2021-05-25T04:27:57.219342Z", "completed_at": "2021-05-25T04:27:59.251930Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('Dim_Employee') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Views", "VW_Employee"], "unique_id": "model.sales_dataflo.VW_Employee", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Views/VW_Employee.sql", "original_file_path": "ETL/Target/Views/VW_Employee.sql", "name": "VW_Employee", "resource_type": "model", "alias": "VW_Employee", "checksum": {"name": "sha256", "checksum": "d3ce3a49096034105f23527148f02ffb69aed09f23971d3eb6ab61d7b0e82c23"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_Employee"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Dim_Employee"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Views/VW_Employee.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.3558454513549805, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:27:59.670939Z", "completed_at": "2021-05-25T04:27:59.697835Z"}, {"name": "execute", "started_at": "2021-05-25T04:27:59.698214Z", "completed_at": "2021-05-25T04:28:01.604930Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('Dim_Lead') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Views", "VW_Lead"], "unique_id": "model.sales_dataflo.VW_Lead", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Views/VW_Lead.sql", "original_file_path": "ETL/Target/Views/VW_Lead.sql", "name": "VW_Lead", "resource_type": "model", "alias": "VW_Lead", "checksum": {"name": "sha256", "checksum": "62dcf4bff6ebf102e926c44b90ba9cbfd4404405f9c3146c53c79c18ccfa5320"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_Lead"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Dim_Lead"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Views/VW_Lead.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.3562159538269043, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:28:02.031074Z", "completed_at": "2021-05-25T04:28:02.062967Z"}, {"name": "execute", "started_at": "2021-05-25T04:28:02.063481Z", "completed_at": "2021-05-25T04:28:03.964843Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('Dim_Opportunity') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Views", "VW_Opportunity"], "unique_id": "model.sales_dataflo.VW_Opportunity", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Views/VW_Opportunity.sql", "original_file_path": "ETL/Target/Views/VW_Opportunity.sql", "name": "VW_Opportunity", "resource_type": "model", "alias": "VW_Opportunity", "checksum": {"name": "sha256", "checksum": "e1b79b8223f6a0be455932747ce223658ea532919586b62d101a4010995a0221"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_Opportunity"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Dim_Opportunity"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Views/VW_Opportunity.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.295783042907715, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:28:04.389927Z", "completed_at": "2021-05-25T04:28:04.416277Z"}, {"name": "execute", "started_at": "2021-05-25T04:28:04.416822Z", "completed_at": "2021-05-25T04:28:06.264116Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "-- depends_on: {{ ref('Dim_TimeFrame') }}\r\n-- depends_on: {{ ref('Dim_Employee') }}\r\n-- depends_on: {{ ref('Dim_Metrics') }}\r\n-- depends_on: {{ ref('Dim_Opportunity') }}\r\n-- depends_on: {{ ref('Dim_Lead') }}\r\n-- depends_on: {{ ref('Dim_Account') }}\r\n-- depends_on: {{ ref('Dim_Contact') }}\r\n\r\n{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Entity_Schema')~ \".\" ~ var('V_Sales')~\" where DATASOURCE_TYPE in ('SF','HS')\", \"ENTITY_DATASORUCE_NAME||'#'||DATASOURCE_TYPE||'#'||HISTORY_LOAD||'#'||TO_VARCHAR(nvl(HISTORY_START_DATE,HISTORY_ACTUAL_START_DATE):: DATE, 'DD/MM/YYYY')||'#'||TO_VARCHAR(HISTORY_END_DATE::DATE, 'DD/MM/YYYY')\") %}\r\n\r\n{{ config(\r\n    materialized=\"table\"\r\n    ) \r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n{% set entity_name, entity_type,hist_load, hist_strt_dt, hist_end_dt= V_SF_Schema.split('#') %}\r\n\r\n    {% if  entity_type  == 'SF'  %} \r\n        {% if  hist_load  == 'true'  %} \r\n\r\n            {%- for metrics in [(run_metrics_hist_sales_segment(entity_name,'upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '5', '2','Dim_Opportunity','STAGE_NAME','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)),\r\n                    (run_metrics_hist_sales_segment(entity_name,'1 = 1', '7', '3','Dim_Lead','INDUSTRY','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)),\r\n                    (run_metrics_hist_sales_segment(entity_name,'1 = 1', '18', '3','Dim_Lead','LEAD_SOURCE','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)),\r\n\t\t\t\t\t(run_metrics_hist_sales_segment(entity_name,'1 = 1', '19', '3','Dim_Lead','STATUS','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)),\r\n                    (run_metrics_hist_sales_segment(entity_name,'1 = 1', '28', '5','Dim_Account','EMPLOYEE_ID','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)),\r\n\t\t\t\t\t(run_metrics_hist_sales_segment(entity_name,'1 = 1', '30', '3','Dim_Lead','EMPLOYEE_ID','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)),\r\n                    (run_metrics_hist_sales_segment(entity_name,'1 = 1', '31', '3','Dim_Lead','LEAD_CONTACT_ADDRESS','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)),\r\n\t\t\t\t\t(run_metrics_hist_sales_segment(entity_name,'1 = 1', '32', '2','Dim_Opportunity','OPPORTUNITY_TYPE','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)),                                       \r\n                   ]  %}\r\n                    (\r\n                        {{ metrics }} \r\n                    )\r\n\r\n                    {% if not loop.last -%}\r\n                        union all\r\n                    {% endif -%}        \r\n            {%- endfor -%} \r\n        {% else -%}     \r\n            {%- for metrics in [(run_metrics_sales_segment(entity_name,'upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '5', '2','Dim_Opportunity','STAGE_NAME','INITIAL_CREATE_DT')),\r\n                    (run_metrics_sales_segment(entity_name,'1 = 1', '7', '3','Dim_Lead','INDUSTRY','INITIAL_CREATE_DT')),\r\n                    (run_metrics_sales_segment(entity_name,'1 = 1', '18', '3','Dim_Lead','LEAD_SOURCE','INITIAL_CREATE_DT')),\r\n\t\t\t\t\t(run_metrics_sales_segment(entity_name,'1 = 1', '19', '3','Dim_Lead','STATUS','INITIAL_CREATE_DT')),\r\n                    (run_metrics_sales_segment(entity_name,'1 = 1', '28', '5','Dim_Account','Account_Type','INITIAL_CREATE_DT')),\r\n\t\t\t\t\t(run_metrics_sales_segment(entity_name,'1 = 1', '30', '3','Dim_Lead','EMPLOYEE_ID','INITIAL_CREATE_DT')),\r\n                    (run_metrics_sales_segment(entity_name,'1 = 1', '31', '3','Dim_Lead','LEAD_CONTACT_ADDRESS','INITIAL_CREATE_DT')),\r\n\t\t\t\t\t(run_metrics_sales_segment(entity_name,'1 = 1', '32', '2','Dim_Opportunity','OPPORTUNITY_TYPE','INITIAL_CREATE_DT')),                                       \r\n                   ]  %}\r\n                    (\r\n                        {{ metrics }}\r\n                    )\r\n\r\n                    {% if not loop.last -%}\r\n                        union all\r\n                    {% endif -%}        \r\n            {%- endfor -%}\r\n        {% endif -%}  \r\n    {% elif entity_type  == 'HS'  %}  \r\n        {% if  hist_load  == 'true'  %} \r\n\r\n            {%- for metrics in [(run_metrics_hist_sales_segment(entity_name,'upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '5', '2','Dim_Opportunity','STAGE_NAME','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)), \r\n                    (run_metrics_hist_sales_segment(entity_name,'1=1', '62', '1','Dim_Opportunity','STAGE_NAME','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)),\r\n                    (run_metrics_hist_sales_segment(entity_name,'1=1','68','1','Dim_Opportunity','FORECAST_CATEGORY','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)),\r\n\t\t\t\t    (run_metrics_hist_sales_segment(entity_name,'1=1', '52', '1','Dim_Opportunity','COMPETITOR','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)),\r\n                    ]  %}\r\n                    (\r\n                        {{ metrics }}\r\n                    )\r\n\r\n                    {% if not loop.last -%}\r\n                        union all\r\n                    {% endif -%}        \r\n            {%- endfor -%} \r\n        {% else -%}     \r\n            {%- for metrics in [ (run_metrics_hist_sales_segment(entity_name,'upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '5', '2','Dim_Opportunity','STAGE_NAME','INITIAL_CREATE_DT')), \r\n\t\t\t\t\t(run_metrics_hist_sales_segment(entity_name,'1=1', '62', '1','Dim_Opportunity','STAGE_NAME','INITIAL_CREATE_DT')),\r\n                    (run_metrics_hist_sales_segment(entity_name,'1=1','68','1','Dim_Opportunity','FORECAST_CATEGORY','INITIAL_CREATE_DT')),\r\n\t\t\t\t    (run_metrics_hist_sales_segment(entity_name,'1=1', '52', '1','Dim_Opportunity','COMPETITOR','INITIAL_CREATE_DT')),\r\n                 ]  %}\r\n                    (\r\n                        {{ metrics }}\r\n                    )\r\n\r\n                    {% if not loop.last -%}\r\n                        union all\r\n                    {% endif -%}        \r\n            {%- endfor -%}\r\n        {% endif -%}     \r\n    {% endif -%}   \r\n        {% if not loop.last -%}\r\n            union all\r\n        {% endif -%}     \r\n{%- endfor -%}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Temp_Sales_Segmented"], "unique_id": "model.sales_dataflo.Temp_Sales_Segmented", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Temp_Sales_Segmented.sql", "original_file_path": "ETL/Target/Tables/Temp_Sales_Segmented.sql", "name": "Temp_Sales_Segmented", "resource_type": "model", "alias": "Temp_Sales_Segmented", "checksum": {"name": "sha256", "checksum": "d8ec7a1ee234b3960e5004bdba3a16325254281dbd9ac16661332024a0a2252d"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Metrics"], ["Dim_Opportunity"], ["Dim_Lead"], ["Dim_Account"], ["Dim_Contact"]], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.sales_dataflo.run_metrics_hist_sales_segment", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Metrics", "model.sales_dataflo.Dim_Opportunity", "model.sales_dataflo.Dim_Lead", "model.sales_dataflo.Dim_Account", "model.sales_dataflo.Dim_Contact"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Temp_Sales_Segmented.sql", "deferred": false, "compiled_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Contact\n\n\n\n\n\n\n\n\n     \n        \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_CLOSED) = 'FALSE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('5' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(STAGE_NAME as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '5' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('7' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(INDUSTRY as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '7' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('18' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(LEAD_SOURCE as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '18' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('19' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(STATUS as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '19' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('28' as number) as METRIC_ID,\n        cast('5' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(EMPLOYEE_ID as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '28' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('30' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(EMPLOYEE_ID as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '30' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('31' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(LEAD_CONTACT_ADDRESS as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '31' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('32' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(OPPORTUNITY_TYPE as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '32' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n        \n\n\n      \n        \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_CLOSED) = 'FALSE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('5' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(STAGE_NAME as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '5' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where 1=1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('62' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(STAGE_NAME as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '62' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where 1=1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('68' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(FORECAST_CATEGORY as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '68' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where 1=1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('52' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(COMPETITOR as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '52' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    ", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Contact\n\n\n\n\n\n\n\n\n     \n        \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_CLOSED) = 'FALSE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('5' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(STAGE_NAME as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '5' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('7' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(INDUSTRY as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '7' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('18' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(LEAD_SOURCE as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '18' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('19' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(STATUS as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '19' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('28' as number) as METRIC_ID,\n        cast('5' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(EMPLOYEE_ID as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '28' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('30' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(EMPLOYEE_ID as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '30' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('31' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(LEAD_CONTACT_ADDRESS as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '31' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('32' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(OPPORTUNITY_TYPE as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '32' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n        \n\n\n      \n        \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_CLOSED) = 'FALSE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('5' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(STAGE_NAME as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '5' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where 1=1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('62' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(STAGE_NAME as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '62' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where 1=1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('68' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(FORECAST_CATEGORY as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '68' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where 1=1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('52' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(COMPETITOR as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '52' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    "}, "error": null, "status": "SUCCESS 1", "execution_time": 111.6084520816803, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:28:06.688165Z", "completed_at": "2021-05-25T04:28:11.309600Z"}, {"name": "execute", "started_at": "2021-05-25T04:28:11.309998Z", "completed_at": "2021-05-25T04:29:57.873555Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('Dim_TimeFrame') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Views", "VW_TimeFrame"], "unique_id": "model.sales_dataflo.VW_TimeFrame", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Views/VW_TimeFrame.sql", "original_file_path": "ETL/Target/Views/VW_TimeFrame.sql", "name": "VW_TimeFrame", "resource_type": "model", "alias": "VW_TimeFrame", "checksum": {"name": "sha256", "checksum": "05c9ee70e7f7f4407cce06073f0f9ce1aa51daaa8f90ab2f1aaf4cbab5aa3359"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_TimeFrame"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Dim_TimeFrame"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Views/VW_TimeFrame.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.5706627368927, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:29:58.299246Z", "completed_at": "2021-05-25T04:29:58.341906Z"}, {"name": "execute", "started_at": "2021-05-25T04:29:58.342303Z", "completed_at": "2021-05-25T04:30:00.449926Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "-- depends_on: {{ ref('Dim_TimeFrame') }}\r\n-- depends_on: {{ ref('Dim_Employee') }}\r\n-- depends_on: {{ ref('Dim_Metrics') }}\r\n-- depends_on: {{ ref('Dim_Opportunity') }}\r\n-- depends_on: {{ ref('Dim_Lead') }}\r\n-- depends_on: {{ ref('Dim_Account') }}\r\n-- depends_on: {{ ref('Dim_Contact') }}\r\n\r\n{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Entity_Schema')~ \".\" ~ var('V_Sales')~\" where DATASOURCE_TYPE in ('SF','HSS')\", \"ENTITY_DATASORUCE_NAME||'#'||DATASOURCE_TYPE||'#'||HISTORY_LOAD||'#'||TO_VARCHAR(nvl(HISTORY_START_DATE,HISTORY_ACTUAL_START_DATE):: DATE, 'DD/MM/YYYY')||'#'||TO_VARCHAR(HISTORY_END_DATE::DATE, 'DD/MM/YYYY')\") %}\r\n\r\n{{ config(\r\n    materialized=\"table\"\r\n    ) \r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n{% set entity_name, entity_type,hist_load, hist_strt_dt, hist_end_dt= V_SF_Schema.split('#') %}\r\n\r\n    {% if  entity_type  == 'SF'  %} \r\n        {% if  hist_load  == 'true'  %} \r\n\r\n            {%- for metrics in [(run_metrics_perf_hist_sales(entity_name,'upper(IS_WON) = '\"'\"'TRUE'\"'\"'', '1', '1','Dim_Opportunity','CLOSE_DATE',hist_strt_dt,hist_end_dt)),\r\n                                (run_metrics_perf_hist_sales(entity_name,'upper(IS_WON) = '\"'\"'FALSE'\"'\"' and upper(IS_CLOSED) = '\"'\"'TRUE'\"'\"'', '10', '1','Dim_Opportunity','CLOSE_DATE',hist_strt_dt,hist_end_dt)),\r\n                                (run_metrics_perf_hist_sales(entity_name,'upper(lead_to_opp_flag) = '\"'\"'TRUE'\"'\"'', '3', '4','Dim_Lead','lead_CONVERTED_DATE',hist_strt_dt,hist_end_dt)),\r\n                                (run_metrics_perf_hist_sales(entity_name,'1 = 1', '4', '4','Dim_Lead','initial_create_dt',hist_strt_dt,hist_end_dt)),\r\n                                (run_metrics_perf_hist_sales(entity_name,'upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '23', '2','Dim_Opportunity','initial_create_dt',hist_strt_dt,hist_end_dt)),\r\n                                (run_metrics_perf_hist_sales(entity_name,'1 = 1', '27', '5','Dim_Account','initial_create_dt',hist_strt_dt,hist_end_dt)),\r\n                                (run_metrics_perf_hist_sales(entity_name,'1 = 1', '29', '6','Dim_Contact','initial_create_dt',hist_strt_dt,hist_end_dt))                    \r\n                            ]  %}\r\n                    (\r\n                        {{ metrics }} \r\n                    ) \r\n\r\n                    {% if not loop.last -%}\r\n                        union all\r\n                    {% endif -%}        \r\n            {%- endfor -%} \r\n        {% else -%}     \r\n            {%- for metrics in [(run_metrics_sales(entity_name,'upper(IS_WON) = '\"'\"'TRUE'\"'\"'', '1', '1','Dim_Opportunity','CLOSE_DATE')),\r\n                                (run_metrics_sales(entity_name,'upper(IS_WON) = '\"'\"'FALSE'\"'\"' and upper(IS_CLOSED) = '\"'\"'TRUE'\"'\"'', '10', '1','Dim_Opportunity','CLOSE_DATE')),\r\n                                (run_metrics_sales(entity_name,'upper(lead_to_opp_flag) = '\"'\"'TRUE'\"'\"'', '3', '4','Dim_Lead','initial_create_dt')),\r\n                                (run_metrics_sales(entity_name,'1 = 1', '4', '4','Dim_Lead','initial_create_dt')),\r\n                                (run_metrics_sales(entity_name,'upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '23', '2','Dim_Opportunity','initial_create_dt')),\r\n                                (run_metrics_sales(entity_name,'1 = 1', '27', '5','Dim_Account','initial_create_dt')),\r\n                                (run_metrics_sales(entity_name,'1 = 1', '29', '6','Dim_Contact','initial_create_dt'))                    \r\n                            ]  %}\r\n                    (\r\n                        {{ metrics }}\r\n                    )\r\n\r\n                    {% if not loop.last -%}\r\n                        union all\r\n                    {% endif -%}        \r\n            {%- endfor -%}\r\n        {% endif -%}  \r\n    {% elif  entity_type  == 'HSS'  %} \r\n        {% if  hist_load  == 'true'  %} \r\n\r\n            {%- for metrics in [(run_metrics_perf_hist_sales(entity_name,'upper(IS_WON) = '\"'\"'TRUE'\"'\"'', '1', '1','Dim_Opportunity','CLOSE_DATE',hist_strt_dt,hist_end_dt)),\r\n                                (run_metrics_perf_hist_sales(entity_name,'upper(IS_WON) = '\"'\"'FALSE'\"'\"' and upper(IS_CLOSED) = '\"'\"'TRUE'\"'\"'', '10', '1','Dim_Opportunity','CLOSE_DATE',hist_strt_dt,hist_end_dt)),\r\n                                (run_metrics_perf_hist_sales(entity_name,'upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '23', '2','Dim_Opportunity','initial_create_dt',hist_strt_dt,hist_end_dt))\r\n                                (run_metrics_perf_hist_sales(entity_name,'upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '79', '1','Dim_Opportunity','initial_create_dt',hist_strt_dt,hist_end_dt))\r\n                               ]  %}\r\n                    (\r\n                        {{ metrics }}\r\n                    )\r\n\r\n                    {% if not loop.last -%}\r\n                        union all\r\n                    {% endif -%}        \r\n            {%- endfor -%} \r\n        {% else -%}     \r\n            {%- for metrics in [(run_metrics_sales(entity_name,'upper(IS_WON) = '\"'\"'TRUE'\"'\"'', '1', '1','Dim_Opportunity','CLOSE_DATE')),\r\n                                (run_metrics_sales(entity_name,'upper(IS_WON) = '\"'\"'FALSE'\"'\"' and upper(IS_CLOSED) = '\"'\"'TRUE'\"'\"'', '10', '1','Dim_Opportunity','CLOSE_DATE')),\r\n                                (run_metrics_sales(entity_name,'upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '23', '2','Dim_Opportunity','initial_create_dt'))                    \r\n                                (run_metrics_perf_hist_sales(entity_name,'upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '79', '1','Dim_Opportunity','initial_create_dt',hist_strt_dt,hist_end_dt))\r\n                                ]  %}\r\n                    (\r\n                        {{ metrics }}\r\n                    )\r\n\r\n                    {% if not loop.last -%}\r\n                        union all\r\n                    {% endif -%}        \r\n            {%- endfor -%}\r\n        {% endif -%}        \r\n    {% endif -%}   \r\n        {% if not loop.last -%}\r\n            union all\r\n        {% endif -%}     \r\n{%- endfor -%}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "sales"], "unique_id": "model.sales_dataflo.sales", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/sales.sql", "original_file_path": "ETL/Target/Tables/sales.sql", "name": "sales", "resource_type": "model", "alias": "sales", "checksum": {"name": "sha256", "checksum": "5db52d0842939d205045dd2c621d7f14089ab747f65643d65f0b535905cee905"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Metrics"], ["Dim_Opportunity"], ["Dim_Lead"], ["Dim_Account"], ["Dim_Contact"]], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.sales_dataflo.run_metrics_perf_hist_sales", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement"], "nodes": ["model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Metrics", "model.sales_dataflo.Dim_Opportunity", "model.sales_dataflo.Dim_Lead", "model.sales_dataflo.Dim_Account", "model.sales_dataflo.Dim_Contact"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/sales.sql", "deferred": false, "compiled_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Contact\n\n\n\n\n\n\n\n\n     \n        \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('1' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '1' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\nunion all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('1' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type \n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.week_START and timeframe.week_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '1' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('1' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.month_START and timeframe.month_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '1' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('1' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.QUARTER_START and timeframe.QUARTER_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '1' = metrics.METRIC_ID\n        \n        where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('1' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.year_START and timeframe.year_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '1' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n                )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    ) \n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'FALSE' and upper(IS_CLOSED) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('10' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '10' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\nunion all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('10' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type \n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.week_START and timeframe.week_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '10' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('10' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.month_START and timeframe.month_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '10' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('10' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.QUARTER_START and timeframe.QUARTER_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '10' = metrics.METRIC_ID\n        \n        where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('10' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.year_START and timeframe.year_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '10' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n                )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    ) \n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where upper(lead_to_opp_flag) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('3' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( lead_CONVERTED_DATE as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '3' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\nunion all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('3' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type \n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( lead_CONVERTED_DATE as date) between timeframe.week_START and timeframe.week_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '3' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('3' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( lead_CONVERTED_DATE as date) between timeframe.month_START and timeframe.month_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '3' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('3' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( lead_CONVERTED_DATE as date) between timeframe.QUARTER_START and timeframe.QUARTER_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '3' = metrics.METRIC_ID\n        \n        where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('3' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( lead_CONVERTED_DATE as date) between timeframe.year_START and timeframe.year_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '3' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n                )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    ) \n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('4' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '4' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\nunion all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('4' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type \n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.week_START and timeframe.week_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '4' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('4' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.month_START and timeframe.month_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '4' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('4' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.QUARTER_START and timeframe.QUARTER_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '4' = metrics.METRIC_ID\n        \n        where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('4' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.year_START and timeframe.year_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '4' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n                )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    ) \n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_CLOSED) = 'FALSE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('23' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '23' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\nunion all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('23' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type \n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.week_START and timeframe.week_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '23' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('23' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.month_START and timeframe.month_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '23' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('23' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.QUARTER_START and timeframe.QUARTER_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '23' = metrics.METRIC_ID\n        \n        where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('23' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.year_START and timeframe.year_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '23' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n                )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    ) \n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('27' as number) as METRIC_ID,\n        cast('5' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '27' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\nunion all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('27' as number) as METRIC_ID,\n        cast('5' as number)  AS METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type \n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.week_START and timeframe.week_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '27' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('27' as number) as METRIC_ID,\n        cast('5' as number)  AS METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.month_START and timeframe.month_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '27' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('27' as number) as METRIC_ID,\n        cast('5' as number)  AS METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.QUARTER_START and timeframe.QUARTER_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '27' = metrics.METRIC_ID\n        \n        where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('27' as number) as METRIC_ID,\n        cast('5' as number)  AS METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.year_START and timeframe.year_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '27' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n                )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    ) \n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Contact  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('29' as number) as METRIC_ID,\n        cast('6' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '29' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\nunion all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('29' as number) as METRIC_ID,\n        cast('6' as number)  AS METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type \n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.week_START and timeframe.week_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '29' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('29' as number) as METRIC_ID,\n        cast('6' as number)  AS METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.month_START and timeframe.month_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '29' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('29' as number) as METRIC_ID,\n        cast('6' as number)  AS METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.QUARTER_START and timeframe.QUARTER_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '29' = metrics.METRIC_ID\n        \n        where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('29' as number) as METRIC_ID,\n        cast('6' as number)  AS METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.year_START and timeframe.year_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '29' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n                )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    ) \n\n                    ", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Contact\n\n\n\n\n\n\n\n\n     \n        \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('1' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '1' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\nunion all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('1' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type \n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.week_START and timeframe.week_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '1' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('1' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.month_START and timeframe.month_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '1' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('1' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.QUARTER_START and timeframe.QUARTER_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '1' = metrics.METRIC_ID\n        \n        where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('1' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.year_START and timeframe.year_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '1' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n                )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    ) \n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'FALSE' and upper(IS_CLOSED) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('10' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '10' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\nunion all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('10' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type \n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.week_START and timeframe.week_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '10' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('10' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.month_START and timeframe.month_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '10' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('10' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.QUARTER_START and timeframe.QUARTER_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '10' = metrics.METRIC_ID\n        \n        where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('10' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.year_START and timeframe.year_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '10' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n                )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    ) \n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where upper(lead_to_opp_flag) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('3' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( lead_CONVERTED_DATE as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '3' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\nunion all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('3' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type \n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( lead_CONVERTED_DATE as date) between timeframe.week_START and timeframe.week_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '3' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('3' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( lead_CONVERTED_DATE as date) between timeframe.month_START and timeframe.month_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '3' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('3' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( lead_CONVERTED_DATE as date) between timeframe.QUARTER_START and timeframe.QUARTER_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '3' = metrics.METRIC_ID\n        \n        where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('3' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( lead_CONVERTED_DATE as date) between timeframe.year_START and timeframe.year_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '3' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n                )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    ) \n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('4' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '4' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\nunion all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('4' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type \n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.week_START and timeframe.week_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '4' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('4' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.month_START and timeframe.month_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '4' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('4' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.QUARTER_START and timeframe.QUARTER_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '4' = metrics.METRIC_ID\n        \n        where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('4' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.year_START and timeframe.year_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '4' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n                )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    ) \n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_CLOSED) = 'FALSE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('23' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '23' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\nunion all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('23' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type \n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.week_START and timeframe.week_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '23' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('23' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.month_START and timeframe.month_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '23' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('23' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.QUARTER_START and timeframe.QUARTER_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '23' = metrics.METRIC_ID\n        \n        where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('23' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.year_START and timeframe.year_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '23' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n                )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    ) \n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('27' as number) as METRIC_ID,\n        cast('5' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '27' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\nunion all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('27' as number) as METRIC_ID,\n        cast('5' as number)  AS METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type \n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.week_START and timeframe.week_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '27' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('27' as number) as METRIC_ID,\n        cast('5' as number)  AS METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.month_START and timeframe.month_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '27' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('27' as number) as METRIC_ID,\n        cast('5' as number)  AS METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.QUARTER_START and timeframe.QUARTER_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '27' = metrics.METRIC_ID\n        \n        where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('27' as number) as METRIC_ID,\n        cast('5' as number)  AS METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.year_START and timeframe.year_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '27' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n                )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    ) \n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Contact  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('29' as number) as METRIC_ID,\n        cast('6' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '29' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\nunion all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('29' as number) as METRIC_ID,\n        cast('6' as number)  AS METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type \n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.week_START and timeframe.week_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '29' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('29' as number) as METRIC_ID,\n        cast('6' as number)  AS METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.month_START and timeframe.month_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '29' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('29' as number) as METRIC_ID,\n        cast('6' as number)  AS METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.QUARTER_START and timeframe.QUARTER_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '29' = metrics.METRIC_ID\n        \n        where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n        union all\n\n        SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        Emp_id AS employee_code,\n        cast('29' as number) as METRIC_ID,\n        cast('6' as number)  AS METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on Emp.Emp_id = source.employee_id  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.year_START and timeframe.year_END \n          and cast(  as date) <= TimeFrameID\n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '29' = metrics.METRIC_ID\n          where Emp.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME\n                )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    ) \n\n                    "}, "error": "Database Error in model sales (ETL/Target/Tables/sales.sql)\n  001003 (42000): SQL compilation error:\n  syntax error line 225 at position 10 unexpected 'on'.\n  syntax error line 226 at position 40 unexpected 'between'.\n  syntax error line 229 at position 13 unexpected 'TimeFrameID'.\n  compiled SQL at target/run/sales_dataflo/ETL/Target/Tables/sales.sql", "status": "ERROR", "execution_time": 4.240499496459961, "thread_id": "Thread-1", "timing": [], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "-- depends_on: {{ ref('Dim_TimeFrame') }}\r\n-- depends_on: {{ ref('Dim_Employee') }}\r\n-- depends_on: {{ ref('Dim_Metrics') }}\r\n-- depends_on: {{ ref('Dim_Opportunity') }}\r\n-- depends_on: {{ ref('Dim_Lead') }}\r\n-- depends_on: {{ ref('Dim_Account') }}\r\n-- depends_on: {{ ref('Dim_Contact') }}\r\n\r\n{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Entity_Schema')~ \".\" ~ var('V_Sales')~\" where DATASOURCE_TYPE in ('SF','HS')\", \"ENTITY_DATASORUCE_NAME||'#'||DATASOURCE_TYPE||'#'||HISTORY_LOAD||'#'||TO_VARCHAR(nvl(HISTORY_START_DATE,HISTORY_ACTUAL_START_DATE):: DATE, 'DD/MM/YYYY')||'#'||TO_VARCHAR(HISTORY_END_DATE::DATE, 'DD/MM/YYYY')\") %}\r\n\r\n{{ config(\r\n    materialized=\"table\"\r\n    ) \r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n{% set entity_name, entity_type,hist_load, hist_strt_dt, hist_end_dt= V_SF_Schema.split('#') %}\r\n\r\n    {% if  entity_type  == 'SF'  %} \r\n        {% if  hist_load  == 'true'  %} \r\n\r\n            {%- for metrics in [(run_metrics_hist_sales_segment(entity_name,'upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '5', '2','Dim_Opportunity','STAGE_NAME','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)),\r\n                    (run_metrics_hist_sales_segment(entity_name,'1 = 1', '7', '3','Dim_Lead','INDUSTRY','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)),\r\n                    (run_metrics_hist_sales_segment(entity_name,'1 = 1', '18', '3','Dim_Lead','LEAD_SOURCE','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)),\r\n\t\t\t\t\t(run_metrics_hist_sales_segment(entity_name,'1 = 1', '19', '3','Dim_Lead','STATUS','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)),\r\n                    (run_metrics_hist_sales_segment(entity_name,'1 = 1', '28', '5','Dim_Account','EMPLOYEE_ID','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)),\r\n\t\t\t\t\t(run_metrics_hist_sales_segment(entity_name,'1 = 1', '30', '3','Dim_Lead','EMPLOYEE_ID','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)),\r\n                    (run_metrics_hist_sales_segment(entity_name,'1 = 1', '31', '3','Dim_Lead','LEAD_CONTACT_ADDRESS','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)),\r\n\t\t\t\t\t(run_metrics_hist_sales_segment(entity_name,'1 = 1', '32', '2','Dim_Opportunity','OPPORTUNITY_TYPE','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt))                                       \r\n                   ]  %}\r\n                    (\r\n                        {{ metrics }}\r\n                    )\r\n\r\n                    {% if not loop.last -%}\r\n                        union all\r\n                    {% endif -%}        \r\n            {%- endfor -%} \r\n        {% else -%}     \r\n            {%- for metrics in [(run_metrics_sales_segment(entity_name,'upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '5', '2','Dim_Opportunity','STAGE_NAME','INITIAL_CREATE_DT')),\r\n                    (run_metrics_sales_segment(entity_name,'1 = 1', '7', '3','Dim_Lead','INDUSTRY','INITIAL_CREATE_DT')),\r\n                    (run_metrics_sales_segment(entity_name,'1 = 1', '18', '3','Dim_Lead','LEAD_SOURCE','INITIAL_CREATE_DT')),\r\n\t\t\t\t\t(run_metrics_sales_segment(entity_name,'1 = 1', '19', '3','Dim_Lead','STATUS','INITIAL_CREATE_DT')),\r\n                    (run_metrics_sales_segment(entity_name,'1 = 1', '28', '5','Dim_Account','Account_Type','INITIAL_CREATE_DT')),\r\n\t\t\t\t\t(run_metrics_sales_segment(entity_name,'1 = 1', '30', '3','Dim_Lead','EMPLOYEE_ID','INITIAL_CREATE_DT')),\r\n                    (run_metrics_sales_segment(entity_name,'1 = 1', '31', '3','Dim_Lead','LEAD_CONTACT_ADDRESS','INITIAL_CREATE_DT')),\r\n\t\t\t\t\t(run_metrics_sales_segment(entity_name,'1 = 1', '32', '2','Dim_Opportunity','OPPORTUNITY_TYPE','INITIAL_CREATE_DT'))                                       \r\n                   ]  %}\r\n                    (\r\n                        {{ metrics }}\r\n                    )\r\n\r\n                    {% if not loop.last -%}\r\n                        union all\r\n                    {% endif -%}        \r\n            {%- endfor -%}\r\n        {% endif -%}  \r\n    {% elif entity_type  == 'HS'  %}  \r\n        {% if  hist_load  == 'true'  %} \r\n\r\n            {%- for metrics in [(run_metrics_hist_sales_segment(entity_name,'upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '5', '2','Dim_Opportunity','STAGE_NAME','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)), \r\n                    (run_metrics_hist_sales_segment(entity_name,'1=1', '62', '1','Dim_Opportunity','STAGE_NAME','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)),\r\n                    (run_metrics_hist_sales_segment(entity_name,'1=1','68','1','Dim_Opportunity','FORECAST_CATEGORY','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)),\r\n\t\t\t\t    (run_metrics_hist_sales_segment(entity_name,'1=1', '52', '1','Dim_Opportunity','COMPETITOR','INITIAL_CREATE_DT',hist_strt_dt,hist_end_dt)),\r\n                    ]  %}\r\n                    (\r\n                        {{ metrics }}\r\n                    )\r\n\r\n                    {% if not loop.last -%}\r\n                        union all\r\n                    {% endif -%}        \r\n            {%- endfor -%} \r\n        {% else -%}     \r\n            {%- for metrics in [ (run_metrics_hist_sales_segment(entity_name,'upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '5', '2','Dim_Opportunity','STAGE_NAME','INITIAL_CREATE_DT')), \r\n\t\t\t\t\t(run_metrics_hist_sales_segment(entity_name,'1=1', '62', '1','Dim_Opportunity','STAGE_NAME','INITIAL_CREATE_DT')),\r\n                    (run_metrics_hist_sales_segment(entity_name,'1=1','68','1','Dim_Opportunity','FORECAST_CATEGORY','INITIAL_CREATE_DT')),\r\n\t\t\t\t    (run_metrics_hist_sales_segment(entity_name,'1=1', '52', '1','Dim_Opportunity','COMPETITOR','INITIAL_CREATE_DT')),\r\n                 ]  %}\r\n                    (\r\n                        {{ metrics }}\r\n                    )\r\n\r\n                    {% if not loop.last -%}\r\n                        union all\r\n                    {% endif -%}        \r\n            {%- endfor -%}\r\n        {% endif -%}     \r\n    {% endif -%}   \r\n        {% if not loop.last -%}\r\n            union all\r\n        {% endif -%}     \r\n{%- endfor -%}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "sales_segmented"], "unique_id": "model.sales_dataflo.sales_segmented", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/sales_segmented.sql", "original_file_path": "ETL/Target/Tables/sales_segmented.sql", "name": "sales_segmented", "resource_type": "model", "alias": "sales_segmented", "checksum": {"name": "sha256", "checksum": "bf0e03e9399a29ad7da9bfd7c7004b2e2528cec6f6c9e009d91c04363f6e572f"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Metrics"], ["Dim_Opportunity"], ["Dim_Lead"], ["Dim_Account"], ["Dim_Contact"]], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.sales_dataflo.run_metrics_hist_sales_segment", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Metrics", "model.sales_dataflo.Dim_Opportunity", "model.sales_dataflo.Dim_Lead", "model.sales_dataflo.Dim_Account", "model.sales_dataflo.Dim_Contact"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/sales_segmented.sql", "deferred": false, "compiled_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Contact\n\n\n\n\n\n\n\n\n     \n        \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_CLOSED) = 'FALSE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('5' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(STAGE_NAME as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '5' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('7' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(INDUSTRY as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '7' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('18' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(LEAD_SOURCE as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '18' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('19' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(STATUS as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '19' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('28' as number) as METRIC_ID,\n        cast('5' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(EMPLOYEE_ID as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '28' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('30' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(EMPLOYEE_ID as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '30' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('31' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(LEAD_CONTACT_ADDRESS as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '31' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('32' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(OPPORTUNITY_TYPE as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '32' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n        \n\n\n      \n        \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_CLOSED) = 'FALSE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('5' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(STAGE_NAME as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '5' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where 1=1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('62' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(STAGE_NAME as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '62' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where 1=1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('68' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(FORECAST_CATEGORY as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '68' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where 1=1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('52' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(COMPETITOR as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '52' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    ", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Contact\n\n\n\n\n\n\n\n\n     \n        \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_CLOSED) = 'FALSE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('5' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(STAGE_NAME as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '5' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('7' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(INDUSTRY as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '7' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('18' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(LEAD_SOURCE as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '18' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('19' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(STATUS as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '19' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('28' as number) as METRIC_ID,\n        cast('5' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(EMPLOYEE_ID as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '28' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('30' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(EMPLOYEE_ID as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '30' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('31' as number) as METRIC_ID,\n        cast('3' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(LEAD_CONTACT_ADDRESS as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '31' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('32' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(OPPORTUNITY_TYPE as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '32' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n        \n\n\n      \n        \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_CLOSED) = 'FALSE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('5' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(STAGE_NAME as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '5' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where 1=1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('62' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(STAGE_NAME as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '62' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where 1=1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('68' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(FORECAST_CATEGORY as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '68' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type, TimeFrameID as join_Date  FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where 1=1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('52' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        cast(COMPETITOR as varchar(1000)) As Segment_name,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( INITIAL_CREATE_DT as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '52' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n         group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_name,\n        Reporting_Currency,\n        POINT_IN_TIME\n        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID, Segment_name, POINT_IN_TIME, nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average , TimeFrame_Type,'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    "}, "error": null, "status": "SUCCESS 1", "execution_time": 111.12236332893372, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:30:05.115970Z", "completed_at": "2021-05-25T04:30:09.476419Z"}, {"name": "execute", "started_at": "2021-05-25T04:30:09.476837Z", "completed_at": "2021-05-25T04:31:55.820078Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with metrics as (\r\n\r\n    select *\r\n    from {{ ref('Stg_Ad_Analytics_By_Creative')}} \r\n), creatives as (\r\n\r\n    select *\r\n    from {{ ref('Dim_Creative_History') }}\r\n\r\n), campaigns as (\r\n    \r\n    select *\r\n    from {{ ref('Dim_Campaign_History') }}\r\n\r\n), campaign_groups as (\r\n    \r\n    select *\r\n    from {{ ref('Dim_Campaign_Group_History') }}\r\n\r\n), accounts as (\r\n    \r\n    select *\r\n    from {{ ref('Dim_Account_History') }}\r\n\r\n), joined as (\r\n\r\n    select\r\n        metrics.creative_id,\r\n        metrics.day as date_day,\r\n        metrics.clicks,\r\n        metrics.impressions,\r\n        metrics.cost_in_local_currency as cost,\r\n        metrics.daily_creative_id,\r\n        campaigns.campaign_name,\r\n        campaigns.campaign_id,\r\n        campaign_groups.campaign_group_name,\r\n        campaign_groups.campaign_group_id,\r\n        accounts.account_name,\r\n        accounts.account_id,\r\n        metrics.source_type\r\n    from metrics\r\n    left join creatives\r\n        on metrics.creative_id = creatives.creative_id\r\n        and {{ fivetran_utils.timestamp_add('day', 1, 'metrics.day') }} >= creatives.valid_from\r\n        and {{ fivetran_utils.timestamp_add('day', 1, 'metrics.day') }} <= coalesce(creatives.valid_to, {{ fivetran_utils.timestamp_add('day', 1, dbt_utils.current_timestamp()) }})\r\n    left join campaigns\r\n        on creatives.campaign_id = campaigns.campaign_id\r\n        and {{ fivetran_utils.timestamp_add('day', 1, 'metrics.day') }} >= campaigns.valid_from\r\n        and {{ fivetran_utils.timestamp_add('day', 1, 'metrics.day') }} <= coalesce(campaigns.valid_to, {{ fivetran_utils.timestamp_add('day', 1, dbt_utils.current_timestamp()) }})\r\n    left join campaign_groups\r\n        on campaigns.campaign_group_id = campaign_groups.campaign_group_id\r\n        and {{ fivetran_utils.timestamp_add('day', 1, 'metrics.day') }} >= campaign_groups.valid_from\r\n        and {{ fivetran_utils.timestamp_add('day', 1, 'metrics.day') }} <= coalesce(campaign_groups.valid_to, {{ fivetran_utils.timestamp_add('day', 1, dbt_utils.current_timestamp()) }})\r\n    left join accounts\r\n        on campaign_groups.account_id = accounts.account_id\r\n        and {{ fivetran_utils.timestamp_add('day', 1, 'metrics.day') }} >= accounts.valid_from\r\n        and {{ fivetran_utils.timestamp_add('day', 1, 'metrics.day') }} <= coalesce(accounts.valid_to, {{ fivetran_utils.timestamp_add('day', 1, dbt_utils.current_timestamp()) }})\r\n\r\n)\r\n\r\nselect *\r\nfrom joined", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Ads", "Dim_Ad_LI"], "unique_id": "model.sales_dataflo.Dim_Ad_LI", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Ads/Dim_Ad_LI.sql", "original_file_path": "ETL/Target/Tables/Ads/Dim_Ad_LI.sql", "name": "Dim_Ad_LI", "resource_type": "model", "alias": "Dim_Ad_LI", "checksum": {"name": "sha256", "checksum": "dd1599b166d534a10595fdbfd90c6380a1d366a881c760292fa9908e66585080"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Ad_Analytics_By_Creative"], ["Dim_Creative_History"], ["Dim_Campaign_History"], ["Dim_Campaign_Group_History"], ["Dim_Account_History"]], "sources": [], "depends_on": {"macros": ["macro.fivetran_utils.timestamp_add", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Ad_Analytics_By_Creative", "model.sales_dataflo.Dim_Creative_History", "model.sales_dataflo.Dim_Campaign_History", "model.sales_dataflo.Dim_Campaign_Group_History", "model.sales_dataflo.Dim_Account_History"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Ads/Dim_Ad_LI.sql", "deferred": false, "compiled_sql": "with metrics as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Ad_Analytics_By_Creative \n), creatives as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Creative_History\n\n), campaigns as (\n    \n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Campaign_History\n\n), campaign_groups as (\n    \n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Campaign_Group_History\n\n), accounts as (\n    \n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account_History\n\n), joined as (\n\n    select\n        metrics.creative_id,\n        metrics.day as date_day,\n        metrics.clicks,\n        metrics.impressions,\n        metrics.cost_in_local_currency as cost,\n        metrics.daily_creative_id,\n        campaigns.campaign_name,\n        campaigns.campaign_id,\n        campaign_groups.campaign_group_name,\n        campaign_groups.campaign_group_id,\n        accounts.account_name,\n        accounts.account_id,\n        metrics.source_type\n    from metrics\n    left join creatives\n        on metrics.creative_id = creatives.creative_id\n        and \n\n    timestampadd(\n        day,\n        1,\n        metrics.day\n        )\n\n >= creatives.valid_from\n        and \n\n    timestampadd(\n        day,\n        1,\n        metrics.day\n        )\n\n <= coalesce(creatives.valid_to, \n\n    timestampadd(\n        day,\n        1,\n        \n    current_timestamp::\n    timestamp_ntz\n\n\n        )\n\n)\n    left join campaigns\n        on creatives.campaign_id = campaigns.campaign_id\n        and \n\n    timestampadd(\n        day,\n        1,\n        metrics.day\n        )\n\n >= campaigns.valid_from\n        and \n\n    timestampadd(\n        day,\n        1,\n        metrics.day\n        )\n\n <= coalesce(campaigns.valid_to, \n\n    timestampadd(\n        day,\n        1,\n        \n    current_timestamp::\n    timestamp_ntz\n\n\n        )\n\n)\n    left join campaign_groups\n        on campaigns.campaign_group_id = campaign_groups.campaign_group_id\n        and \n\n    timestampadd(\n        day,\n        1,\n        metrics.day\n        )\n\n >= campaign_groups.valid_from\n        and \n\n    timestampadd(\n        day,\n        1,\n        metrics.day\n        )\n\n <= coalesce(campaign_groups.valid_to, \n\n    timestampadd(\n        day,\n        1,\n        \n    current_timestamp::\n    timestamp_ntz\n\n\n        )\n\n)\n    left join accounts\n        on campaign_groups.account_id = accounts.account_id\n        and \n\n    timestampadd(\n        day,\n        1,\n        metrics.day\n        )\n\n >= accounts.valid_from\n        and \n\n    timestampadd(\n        day,\n        1,\n        metrics.day\n        )\n\n <= coalesce(accounts.valid_to, \n\n    timestampadd(\n        day,\n        1,\n        \n    current_timestamp::\n    timestamp_ntz\n\n\n        )\n\n)\n\n)\n\nselect *\nfrom joined", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with metrics as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Ad_Analytics_By_Creative \n), creatives as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Creative_History\n\n), campaigns as (\n    \n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Campaign_History\n\n), campaign_groups as (\n    \n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Campaign_Group_History\n\n), accounts as (\n    \n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account_History\n\n), joined as (\n\n    select\n        metrics.creative_id,\n        metrics.day as date_day,\n        metrics.clicks,\n        metrics.impressions,\n        metrics.cost_in_local_currency as cost,\n        metrics.daily_creative_id,\n        campaigns.campaign_name,\n        campaigns.campaign_id,\n        campaign_groups.campaign_group_name,\n        campaign_groups.campaign_group_id,\n        accounts.account_name,\n        accounts.account_id,\n        metrics.source_type\n    from metrics\n    left join creatives\n        on metrics.creative_id = creatives.creative_id\n        and \n\n    timestampadd(\n        day,\n        1,\n        metrics.day\n        )\n\n >= creatives.valid_from\n        and \n\n    timestampadd(\n        day,\n        1,\n        metrics.day\n        )\n\n <= coalesce(creatives.valid_to, \n\n    timestampadd(\n        day,\n        1,\n        \n    current_timestamp::\n    timestamp_ntz\n\n\n        )\n\n)\n    left join campaigns\n        on creatives.campaign_id = campaigns.campaign_id\n        and \n\n    timestampadd(\n        day,\n        1,\n        metrics.day\n        )\n\n >= campaigns.valid_from\n        and \n\n    timestampadd(\n        day,\n        1,\n        metrics.day\n        )\n\n <= coalesce(campaigns.valid_to, \n\n    timestampadd(\n        day,\n        1,\n        \n    current_timestamp::\n    timestamp_ntz\n\n\n        )\n\n)\n    left join campaign_groups\n        on campaigns.campaign_group_id = campaign_groups.campaign_group_id\n        and \n\n    timestampadd(\n        day,\n        1,\n        metrics.day\n        )\n\n >= campaign_groups.valid_from\n        and \n\n    timestampadd(\n        day,\n        1,\n        metrics.day\n        )\n\n <= coalesce(campaign_groups.valid_to, \n\n    timestampadd(\n        day,\n        1,\n        \n    current_timestamp::\n    timestamp_ntz\n\n\n        )\n\n)\n    left join accounts\n        on campaign_groups.account_id = accounts.account_id\n        and \n\n    timestampadd(\n        day,\n        1,\n        metrics.day\n        )\n\n >= accounts.valid_from\n        and \n\n    timestampadd(\n        day,\n        1,\n        metrics.day\n        )\n\n <= coalesce(accounts.valid_to, \n\n    timestampadd(\n        day,\n        1,\n        \n    current_timestamp::\n    timestamp_ntz\n\n\n        )\n\n)\n\n)\n\nselect *\nfrom joined"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.7541844844818115, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:31:56.240843Z", "completed_at": "2021-05-25T04:31:56.290087Z"}, {"name": "execute", "started_at": "2021-05-25T04:31:56.290473Z", "completed_at": "2021-05-25T04:31:58.570022Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with report as (\r\n\r\n    select *\r\n    from {{ ref('Stg_Basic_Ad') }}\r\n\r\n), creatives as (\r\n\r\n    select *\r\n    from {{ ref('Dim_Creative_History_FB') }}\r\n\r\n), accounts as (\r\n\r\n    select *\r\n    from {{ ref('Dim_Account_History_FB') }}\r\n    where is_most_recent_record = true\r\n\r\n), ads as (\r\n\r\n    select *\r\n    from {{ ref('Dim_Ad_History') }}\r\n    where is_most_recent_record = true\r\n\r\n), ad_sets as (\r\n\r\n    select *\r\n    from {{ ref('Dim_Ad_Set_History') }}\r\n    where is_most_recent_record = true\r\n\r\n), campaigns as (\r\n\r\n    select *\r\n    from {{ ref('Dim_Campaign_History_FB') }}\r\n    where is_most_recent_record = true\r\n\r\n), joined as (\r\n\r\n    select\r\n        report.DATE as date_day,\r\n        report.Source_type,\r\n        accounts.account_id,\r\n        accounts.account_name,\r\n        campaigns.campaign_id,\r\n        campaigns.campaign_name,\r\n        ad_sets.ad_set_id,\r\n        ad_sets.ad_set_name,\r\n        ads.ad_id,\r\n        ads.ad_name,\r\n        creatives.creative_id,\r\n        creatives.creative_name,\r\n        sum(report.INLINE_LINK_CLICKS) as clicks,\r\n        sum(report.impressions) as impressions,\r\n        sum(report.spend) as spend,\r\n        sum(report.REACH) as REACH,\r\n        sum(report.CPC) as CPC,\r\n        sum(report.CPM) as CPM,\r\n        sum(report.CTR) as CTR,\r\n        sum(report.FREQUENCY) as FREQUENCY\r\n    from report\r\n    left join ads \r\n        on cast(report.ad_id as {{ dbt_utils.type_bigint() }}) = cast(ads.ad_id as {{ dbt_utils.type_bigint() }})\r\n    left join creatives\r\n        on cast(ads.creative_id as {{ dbt_utils.type_bigint() }}) = cast(creatives.creative_id as {{ dbt_utils.type_bigint() }})\r\n    left join ad_sets\r\n        on cast(ads.ad_set_id as {{ dbt_utils.type_bigint() }}) = cast(ad_sets.ad_set_id as {{ dbt_utils.type_bigint() }})\r\n    left join campaigns\r\n        on cast(ads.campaign_id as {{ dbt_utils.type_bigint() }}) = cast(campaigns.campaign_id as {{ dbt_utils.type_bigint() }})\r\n    left join accounts\r\n        on cast(report.account_id as {{ dbt_utils.type_bigint() }}) = cast(accounts.account_id as {{ dbt_utils.type_bigint() }})\r\n    {{ dbt_utils.group_by(12) }}\r\n)\r\n\r\nselect *\r\nfrom joined", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Ad"], "unique_id": "model.sales_dataflo.Dim_Ad", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Ad.sql", "original_file_path": "ETL/Target/Tables/Dim_Ad.sql", "name": "Dim_Ad", "resource_type": "model", "alias": "Dim_Ad", "checksum": {"name": "sha256", "checksum": "a3231cba63527435a8d97cd552cdecbec2609aae2d6812bc7263131320676ce0"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Stg_Basic_Ad"], ["Dim_Creative_History_FB"], ["Dim_Account_History_FB"], ["Dim_Ad_History"], ["Dim_Ad_Set_History"], ["Dim_Campaign_History_FB"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.type_bigint", "macro.dbt_utils.group_by", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Stg_Basic_Ad", "model.sales_dataflo.Dim_Creative_History_FB", "model.sales_dataflo.Dim_Account_History_FB", "model.sales_dataflo.Dim_Ad_History", "model.sales_dataflo.Dim_Ad_Set_History", "model.sales_dataflo.Dim_Campaign_History_FB"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Ad.sql", "deferred": false, "compiled_sql": "with report as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Basic_Ad\n\n), creatives as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Creative_History_FB\n\n), accounts as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account_History_FB\n    where is_most_recent_record = true\n\n), ads as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Ad_History\n    where is_most_recent_record = true\n\n), ad_sets as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Ad_Set_History\n    where is_most_recent_record = true\n\n), campaigns as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Campaign_History_FB\n    where is_most_recent_record = true\n\n), joined as (\n\n    select\n        report.DATE as date_day,\n        report.Source_type,\n        accounts.account_id,\n        accounts.account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_sets.ad_set_id,\n        ad_sets.ad_set_name,\n        ads.ad_id,\n        ads.ad_name,\n        creatives.creative_id,\n        creatives.creative_name,\n        sum(report.INLINE_LINK_CLICKS) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend,\n        sum(report.REACH) as REACH,\n        sum(report.CPC) as CPC,\n        sum(report.CPM) as CPM,\n        sum(report.CTR) as CTR,\n        sum(report.FREQUENCY) as FREQUENCY\n    from report\n    left join ads \n        on cast(report.ad_id as \n    bigint\n) = cast(ads.ad_id as \n    bigint\n)\n    left join creatives\n        on cast(ads.creative_id as \n    bigint\n) = cast(creatives.creative_id as \n    bigint\n)\n    left join ad_sets\n        on cast(ads.ad_set_id as \n    bigint\n) = cast(ad_sets.ad_set_id as \n    bigint\n)\n    left join campaigns\n        on cast(ads.campaign_id as \n    bigint\n) = cast(campaigns.campaign_id as \n    bigint\n)\n    left join accounts\n        on cast(report.account_id as \n    bigint\n) = cast(accounts.account_id as \n    bigint\n)\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n)\n\nselect *\nfrom joined", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with report as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Stg_Basic_Ad\n\n), creatives as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Creative_History_FB\n\n), accounts as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account_History_FB\n    where is_most_recent_record = true\n\n), ads as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Ad_History\n    where is_most_recent_record = true\n\n), ad_sets as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Ad_Set_History\n    where is_most_recent_record = true\n\n), campaigns as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Campaign_History_FB\n    where is_most_recent_record = true\n\n), joined as (\n\n    select\n        report.DATE as date_day,\n        report.Source_type,\n        accounts.account_id,\n        accounts.account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_sets.ad_set_id,\n        ad_sets.ad_set_name,\n        ads.ad_id,\n        ads.ad_name,\n        creatives.creative_id,\n        creatives.creative_name,\n        sum(report.INLINE_LINK_CLICKS) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend,\n        sum(report.REACH) as REACH,\n        sum(report.CPC) as CPC,\n        sum(report.CPM) as CPM,\n        sum(report.CTR) as CTR,\n        sum(report.FREQUENCY) as FREQUENCY\n    from report\n    left join ads \n        on cast(report.ad_id as \n    bigint\n) = cast(ads.ad_id as \n    bigint\n)\n    left join creatives\n        on cast(ads.creative_id as \n    bigint\n) = cast(creatives.creative_id as \n    bigint\n)\n    left join ad_sets\n        on cast(ads.ad_set_id as \n    bigint\n) = cast(ad_sets.ad_set_id as \n    bigint\n)\n    left join campaigns\n        on cast(ads.campaign_id as \n    bigint\n) = cast(campaigns.campaign_id as \n    bigint\n)\n    left join accounts\n        on cast(report.account_id as \n    bigint\n) = cast(accounts.account_id as \n    bigint\n)\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n)\n\nselect *\nfrom joined"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.552316427230835, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:31:58.997533Z", "completed_at": "2021-05-25T04:31:59.032134Z"}, {"name": "execute", "started_at": "2021-05-25T04:31:59.032512Z", "completed_at": "2021-05-25T04:32:01.129183Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "-- depends_on: {{ ref('Dim_GA_Ads') }}\r\n-- depends_on: {{ ref('Dim_Calendar') }}\r\n\r\n\r\n{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Entity_Schema')~ \".\" ~ var('V_Mkt')~\" where DATASOURCE_TYPE in ('GA_ADS')\", \"ENTITY_DATASORUCE_NAME||'#'||DATASOURCE_TYPE||'#'||HISTORY_LOAD||'#'||TO_VARCHAR(nvl(HISTORY_START_DATE,HISTORY_ACTUAL_START_DATE)::DATE, 'DD/MM/YYYY')||'#'||TO_VARCHAR(HISTORY_END_DATE::DATE, 'DD/MM/YYYY')\") %}\r\n\r\n{{ config(\r\n    materialized=\"table\"\r\n) \r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n{% set entity_name, entity_type,hist_load, hist_strt_dt, hist_end_dt= V_SF_Schema.split('#') %}\r\n       {% if entity_type =='GA_ADS' and hist_load  == 'true' %} \r\n         {%- for metrics in [(run_ads_ns_metrics('1 = 1', '172', '10','Dim_GA_Ads','Sum(spend)')) ,  \r\n                    (run_ads_ns_metrics('1 = 1', '173', '10','Dim_GA_Ads','Sum(clicks)')) , \r\n                    (run_ads_ns_metrics('1 = 1', '175', '10','Dim_GA_Ads','Sum(impressions)')),   \r\n                    (run_ads_ns_metrics('1 = 1', '177', '10','Dim_GA_Ads','Sum(clicks)/ decode(Sum(impressions),0,1,nvl(Sum(impressions),1))')),\r\n                    (run_ads_ns_metrics('1 = 1', '179', '10','Dim_GA_Ads','Sum(spend)/ decode(Sum(clicks),0,1,nvl(Sum(clicks),1))')),\r\n                   ]  %}\r\n        (\r\n             {{ metrics }}\r\n        )\r\n\r\n            {% if not loop.last -%}\r\n                union all\r\n            {% endif -%}\r\n        {%- endfor -%} \r\n\r\n    {% endif -%}\r\n {%- endfor -%}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Temp_GA_ADs"], "unique_id": "model.sales_dataflo.Temp_GA_ADs", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Temp_GA_ADs.sql", "original_file_path": "ETL/Target/Tables/Temp_GA_ADs.sql", "name": "Temp_GA_ADs", "resource_type": "model", "alias": "Temp_GA_ADs", "checksum": {"name": "sha256", "checksum": "20255efcc12d022f372bf44218554746d74a0649d8f0412ea1579de412ccd762"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_GA_Ads"], ["Dim_Calendar"]], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.sales_dataflo.run_ads_ns_metrics", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Dim_GA_Ads", "model.sales_dataflo.Dim_Calendar"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Temp_GA_ADs.sql", "deferred": false, "compiled_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_GA_Ads\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n\n\n\n\n\n\n\n\n       \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_GA_Ads  Where 1 = 1 )                \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_GA_Ads  Where 1 = 1 )                \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_GA_Ads  Where 1 = 1 )                \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_GA_Ads  Where 1 = 1 )                \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)/ decode(Sum(impressions),0,1,nvl(Sum(impressions),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)/ decode(Sum(impressions),0,1,nvl(Sum(impressions),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)/ decode(Sum(impressions),0,1,nvl(Sum(impressions),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)/ decode(Sum(impressions),0,1,nvl(Sum(impressions),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)/ decode(Sum(impressions),0,1,nvl(Sum(impressions),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_GA_Ads  Where 1 = 1 )                \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)/ decode(Sum(clicks),0,1,nvl(Sum(clicks),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)/ decode(Sum(clicks),0,1,nvl(Sum(clicks),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)/ decode(Sum(clicks),0,1,nvl(Sum(clicks),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)/ decode(Sum(clicks),0,1,nvl(Sum(clicks),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)/ decode(Sum(clicks),0,1,nvl(Sum(clicks),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            ", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_GA_Ads\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n\n\n\n\n\n\n\n\n       \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_GA_Ads  Where 1 = 1 )                \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_GA_Ads  Where 1 = 1 )                \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_GA_Ads  Where 1 = 1 )                \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_GA_Ads  Where 1 = 1 )                \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)/ decode(Sum(impressions),0,1,nvl(Sum(impressions),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)/ decode(Sum(impressions),0,1,nvl(Sum(impressions),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)/ decode(Sum(impressions),0,1,nvl(Sum(impressions),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)/ decode(Sum(impressions),0,1,nvl(Sum(impressions),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)/ decode(Sum(impressions),0,1,nvl(Sum(impressions),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_GA_Ads  Where 1 = 1 )                \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)/ decode(Sum(clicks),0,1,nvl(Sum(clicks),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)/ decode(Sum(clicks),0,1,nvl(Sum(clicks),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)/ decode(Sum(clicks),0,1,nvl(Sum(clicks),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)/ decode(Sum(clicks),0,1,nvl(Sum(clicks),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)/ decode(Sum(clicks),0,1,nvl(Sum(clicks),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            "}, "error": null, "status": "SUCCESS 1", "execution_time": 14.516186714172363, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:32:01.552451Z", "completed_at": "2021-05-25T04:32:04.291164Z"}, {"name": "execute", "started_at": "2021-05-25T04:32:04.291593Z", "completed_at": "2021-05-25T04:32:15.646591Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with base as (\r\n\r\n    select *\r\n    from {{ ref('Dim_GA_Ads')}}\r\n\r\n), fields as (\r\n\r\n    select\r\n        date_day as date_day,\r\n        platform,\r\n        account_name,\r\n        account_id,\r\n        campaign_name,\r\n        campaign_id,\r\n        ad_group_name,\r\n        ad_group_id,\r\n        sum(spend) as spend,\r\n        sum(clicks) as clicks,\r\n        sum(impressions) as impressions\r\n    from base\r\n    {{ dbt_utils.group_by(8) }}\r\n\r\n)\r\n\r\nselect *\r\nfrom fields", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Ad_GA"], "unique_id": "model.sales_dataflo.Dim_Ad_GA", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Ad_GA.sql", "original_file_path": "ETL/Target/Tables/Dim_Ad_GA.sql", "name": "Dim_Ad_GA", "resource_type": "model", "alias": "Dim_Ad_GA", "checksum": {"name": "sha256", "checksum": "9354675918e067377ca65679f62267d6aee69df080dfbfc3ecccba5d5ca3c106"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_GA_Ads"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.group_by", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Dim_GA_Ads"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Ad_GA.sql", "deferred": false, "compiled_sql": "with base as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_GA_Ads\n\n), fields as (\n\n    select\n        date_day as date_day,\n        platform,\n        account_name,\n        account_id,\n        campaign_name,\n        campaign_id,\n        ad_group_name,\n        ad_group_id,\n        sum(spend) as spend,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions\n    from base\n    group by 1,2,3,4,5,6,7,8\n\n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with base as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_GA_Ads\n\n), fields as (\n\n    select\n        date_day as date_day,\n        platform,\n        account_name,\n        account_id,\n        campaign_name,\n        campaign_id,\n        ad_group_name,\n        ad_group_id,\n        sum(spend) as spend,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions\n    from base\n    group by 1,2,3,4,5,6,7,8\n\n)\n\nselect *\nfrom fields"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.4869565963745117, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:32:16.071216Z", "completed_at": "2021-05-25T04:32:16.096518Z"}, {"name": "execute", "started_at": "2021-05-25T04:32:16.096892Z", "completed_at": "2021-05-25T04:32:18.136928Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "-- depends_on: {{ ref('Dim_Session') }}\r\n-- depends_on: {{ ref('Dim_Channel_Traffic') }}\r\n-- depends_on: {{ ref('Dim_Social_Media_Acquisitions') }}\r\n-- depends_on: {{ ref('Dim_Page_Tracking') }}\r\n-- depends_on: {{ ref('Dim_Goal_Conversions') }}\r\n-- depends_on: {{ ref('Dim_Events_Overview') }}\r\n-- depends_on: {{ ref('Dim_Site') }}\r\n-- depends_on: {{ ref('Dim_Calendar') }}\r\n\r\n\r\n{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Entity_Schema')~ \".\" ~ var('V_Mkt')~\" where DATASOURCE_TYPE in ('GA','GSC')\", \"ENTITY_DATASORUCE_NAME||'#'||DATASOURCE_TYPE||'#'||HISTORY_LOAD||'#'||TO_VARCHAR(nvl(HISTORY_START_DATE,HISTORY_ACTUAL_START_DATE)::DATE, 'DD/MM/YYYY')||'#'||TO_VARCHAR(HISTORY_END_DATE::DATE, 'DD/MM/YYYY')\") %}\r\n\r\n{{ config(\r\n    materialized=\"table\"\r\n) \r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n{% set entity_name, entity_type,hist_load, hist_strt_dt, hist_end_dt= V_SF_Schema.split('#') %}\r\n    {% if entity_type =='GA' and hist_load  == 'true' %} \r\n        {%- for metrics in [(run_ns_metrics('1 = 1', '139', '10','Dim_Session','Sum(SESSIONS_PER_USER)')) ,  \r\n                            (run_ns_metrics('1 = 1', '140', '10','Dim_Channel_Traffic','Sum(SESSIONS)')) , \r\n                            (run_ns_metrics('1 = 1', '141', '10','Dim_Social_Media_Acquisitions','Sum(PERCENT_NEW_SESSIONS)')) , \r\n                            (run_ns_metrics('1 = 1', '142', '10','Dim_Social_Media_Acquisitions','Sum(NEW_USERS)')),   \r\n                            (run_ns_metrics('1 = 1', '143', '10','Dim_Social_Media_Acquisitions','Sum(PAGEVIEWS)')),\r\n                            (run_ns_metrics('1 = 1', '144', '10','Dim_Page_Tracking','Sum(PAGEVIEWS_PER_SESSION)')), \r\n                            (run_ns_metrics('1 = 1', '145', '10','Dim_Session','Sum(BOUNCE_RATE)')),  \r\n                            (run_ns_metrics('1 = 1', '147', '10','Dim_Social_Media_Acquisitions','Sum(AVG_SESSION_DURATION)')), \r\n                            (run_ns_metrics('1 = 1', '151', '10','Dim_Goal_Conversions','Sum(GOAL_COMPLETIONS_ALL)')),\r\n                            (run_ns_metrics('1 = 1', '152', '10','Dim_Goal_Conversions','Sum(GOAL_CONVERSION_RATE_ALL)')),   \r\n                            (run_ns_metrics('1 = 1', '158', '10','Dim_Social_Media_Acquisitions','Sum(TRANSACTIONS_PER_SESSION)')),\r\n                            (run_ns_metrics('1 = 1', '163', '10','Dim_Events_Overview','Sum(TOTAL_EVENTS)')),\r\n                            (run_ns_metrics('1 = 1', '164', '10','Dim_Social_Media_Acquisitions','Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)')),                    \r\n                            (run_ns_metrics('1 = 1', '166', '10','Dim_Page_Tracking','sum(TIME_ON_PAGE)')),\r\n                            (run_ns_metrics('1 = 1', '167', '10','Dim_Page_Tracking','sum(UNIQUE_PAGEVIEWS)')),\r\n                        ]  %}\r\n        (\r\n             {{ metrics }}\r\n        )\r\n\r\n            {% if not loop.last -%}\r\n                union all\r\n            {% endif -%}\r\n        {%- endfor -%}       \r\n\r\n    {% elif entity_type =='GSC' and hist_load  == 'true' %} \r\n         {%- for metrics in [(run_ads_ns_metrics('1 = 1', '195', '10','Dim_Site','Sum(clicks)')) , \r\n                    (run_ads_ns_metrics('1 = 1', '198', '10','Dim_Site','Sum(impressions)')),\r\n                    (run_ads_ns_metrics('1 = 1', '199', '10','Dim_Site','Sum(CTR)')) ,\r\n                   ]  %}\r\n        (\r\n             {{ metrics }}\r\n        )\r\n\r\n            {% if not loop.last -%}\r\n                union all\r\n            {% endif -%}\r\n        {%- endfor -%} \r\n    {% endif -%}\r\n    {% if not loop.last -%}\r\n            union all\r\n        {% endif -%} \r\n\r\n{%- endfor -%}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Fact_Marketing"], "unique_id": "model.sales_dataflo.Fact_Marketing", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Fact_Marketing.sql", "original_file_path": "ETL/Target/Tables/Fact_Marketing.sql", "name": "Fact_Marketing", "resource_type": "model", "alias": "Fact_Marketing", "checksum": {"name": "sha256", "checksum": "aa8544128174d6876dc7209ac441ae932177e6d430b7ee02bd565e6e33289b83"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_Session"], ["Dim_Channel_Traffic"], ["Dim_Social_Media_Acquisitions"], ["Dim_Page_Tracking"], ["Dim_Goal_Conversions"], ["Dim_Events_Overview"], ["Dim_Site"], ["Dim_Calendar"]], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.sales_dataflo.run_ns_metrics", "macro.sales_dataflo.run_ads_ns_metrics", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Dim_Session", "model.sales_dataflo.Dim_Channel_Traffic", "model.sales_dataflo.Dim_Social_Media_Acquisitions", "model.sales_dataflo.Dim_Page_Tracking", "model.sales_dataflo.Dim_Goal_Conversions", "model.sales_dataflo.Dim_Events_Overview", "model.sales_dataflo.Dim_Site", "model.sales_dataflo.Dim_Calendar"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Fact_Marketing.sql", "deferred": false, "compiled_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Session\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Events_Overview\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n\n\n\n\n\n\n\n\n    \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Session  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS_PER_USER)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS_PER_USER)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS_PER_USER)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS_PER_USER)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS_PER_USER)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('140' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('140' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('140' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('140' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('140' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('141' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PERCENT_NEW_SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('141' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PERCENT_NEW_SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('141' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PERCENT_NEW_SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('141' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PERCENT_NEW_SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('141' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PERCENT_NEW_SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('142' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(NEW_USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('142' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(NEW_USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('142' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(NEW_USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('142' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(NEW_USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('142' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(NEW_USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('143' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('143' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('143' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('143' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('143' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('144' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('144' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('144' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('144' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('144' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Session  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('145' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(BOUNCE_RATE)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('145' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(BOUNCE_RATE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('145' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(BOUNCE_RATE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('145' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(BOUNCE_RATE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('145' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(BOUNCE_RATE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('147' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(AVG_SESSION_DURATION)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('147' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(AVG_SESSION_DURATION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('147' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(AVG_SESSION_DURATION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('147' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(AVG_SESSION_DURATION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('147' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(AVG_SESSION_DURATION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('151' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('151' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('151' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('151' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('151' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('152' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_CONVERSION_RATE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('152' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_CONVERSION_RATE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('152' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_CONVERSION_RATE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('152' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_CONVERSION_RATE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('152' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_CONVERSION_RATE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('158' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('158' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('158' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('158' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('158' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Events_Overview  Where 1 = 1 )           \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('163' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TOTAL_EVENTS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('163' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TOTAL_EVENTS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('163' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TOTAL_EVENTS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('163' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TOTAL_EVENTS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('163' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TOTAL_EVENTS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('164' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('164' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('164' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('164' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('164' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('166' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(TIME_ON_PAGE)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('166' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(TIME_ON_PAGE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('166' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(TIME_ON_PAGE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('166' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(TIME_ON_PAGE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('166' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(TIME_ON_PAGE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('167' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(UNIQUE_PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('167' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(UNIQUE_PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('167' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(UNIQUE_PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('167' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(UNIQUE_PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('167' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(UNIQUE_PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n        \n\n    \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Session  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS_PER_USER)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS_PER_USER)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS_PER_USER)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS_PER_USER)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS_PER_USER)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('140' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('140' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('140' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('140' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('140' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('141' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PERCENT_NEW_SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('141' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PERCENT_NEW_SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('141' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PERCENT_NEW_SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('141' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PERCENT_NEW_SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('141' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PERCENT_NEW_SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('142' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(NEW_USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('142' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(NEW_USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('142' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(NEW_USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('142' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(NEW_USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('142' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(NEW_USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('143' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('143' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('143' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('143' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('143' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('144' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('144' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('144' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('144' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('144' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Session  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('145' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(BOUNCE_RATE)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('145' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(BOUNCE_RATE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('145' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(BOUNCE_RATE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('145' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(BOUNCE_RATE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('145' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(BOUNCE_RATE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('147' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(AVG_SESSION_DURATION)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('147' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(AVG_SESSION_DURATION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('147' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(AVG_SESSION_DURATION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('147' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(AVG_SESSION_DURATION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('147' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(AVG_SESSION_DURATION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('151' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('151' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('151' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('151' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('151' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('152' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_CONVERSION_RATE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('152' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_CONVERSION_RATE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('152' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_CONVERSION_RATE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('152' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_CONVERSION_RATE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('152' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_CONVERSION_RATE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('158' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('158' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('158' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('158' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('158' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Events_Overview  Where 1 = 1 )           \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('163' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TOTAL_EVENTS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('163' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TOTAL_EVENTS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('163' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TOTAL_EVENTS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('163' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TOTAL_EVENTS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('163' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TOTAL_EVENTS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('164' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('164' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('164' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('164' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('164' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('166' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(TIME_ON_PAGE)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('166' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(TIME_ON_PAGE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('166' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(TIME_ON_PAGE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('166' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(TIME_ON_PAGE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('166' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(TIME_ON_PAGE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('167' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(UNIQUE_PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('167' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(UNIQUE_PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('167' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(UNIQUE_PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('167' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(UNIQUE_PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('167' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(UNIQUE_PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n        \n\n    \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 )   \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('195' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('195' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('195' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('195' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('195' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 )   \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('198' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('198' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('198' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('198' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('198' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 )   \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('199' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('199' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('199' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('199' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('199' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            ", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Session\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Events_Overview\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n\n\n\n\n\n\n\n\n    \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Session  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS_PER_USER)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS_PER_USER)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS_PER_USER)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS_PER_USER)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS_PER_USER)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('140' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('140' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('140' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('140' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('140' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('141' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PERCENT_NEW_SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('141' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PERCENT_NEW_SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('141' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PERCENT_NEW_SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('141' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PERCENT_NEW_SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('141' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PERCENT_NEW_SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('142' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(NEW_USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('142' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(NEW_USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('142' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(NEW_USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('142' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(NEW_USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('142' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(NEW_USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('143' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('143' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('143' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('143' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('143' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('144' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('144' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('144' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('144' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('144' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Session  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('145' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(BOUNCE_RATE)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('145' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(BOUNCE_RATE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('145' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(BOUNCE_RATE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('145' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(BOUNCE_RATE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('145' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(BOUNCE_RATE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('147' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(AVG_SESSION_DURATION)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('147' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(AVG_SESSION_DURATION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('147' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(AVG_SESSION_DURATION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('147' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(AVG_SESSION_DURATION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('147' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(AVG_SESSION_DURATION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('151' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('151' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('151' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('151' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('151' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('152' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_CONVERSION_RATE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('152' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_CONVERSION_RATE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('152' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_CONVERSION_RATE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('152' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_CONVERSION_RATE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('152' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_CONVERSION_RATE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('158' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('158' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('158' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('158' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('158' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Events_Overview  Where 1 = 1 )           \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('163' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TOTAL_EVENTS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('163' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TOTAL_EVENTS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('163' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TOTAL_EVENTS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('163' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TOTAL_EVENTS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('163' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TOTAL_EVENTS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('164' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('164' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('164' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('164' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('164' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('166' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(TIME_ON_PAGE)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('166' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(TIME_ON_PAGE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('166' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(TIME_ON_PAGE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('166' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(TIME_ON_PAGE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('166' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(TIME_ON_PAGE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('167' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(UNIQUE_PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('167' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(UNIQUE_PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('167' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(UNIQUE_PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('167' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(UNIQUE_PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('167' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(UNIQUE_PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n        \n\n    \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Session  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS_PER_USER)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS_PER_USER)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS_PER_USER)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS_PER_USER)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS_PER_USER)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('140' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('140' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('140' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('140' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('140' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('141' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PERCENT_NEW_SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('141' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PERCENT_NEW_SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('141' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PERCENT_NEW_SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('141' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PERCENT_NEW_SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('141' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PERCENT_NEW_SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('142' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(NEW_USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('142' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(NEW_USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('142' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(NEW_USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('142' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(NEW_USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('142' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(NEW_USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('143' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('143' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('143' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('143' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('143' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('144' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('144' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('144' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('144' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('144' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Session  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('145' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(BOUNCE_RATE)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('145' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(BOUNCE_RATE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('145' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(BOUNCE_RATE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('145' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(BOUNCE_RATE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('145' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(BOUNCE_RATE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('147' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(AVG_SESSION_DURATION)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('147' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(AVG_SESSION_DURATION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('147' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(AVG_SESSION_DURATION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('147' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(AVG_SESSION_DURATION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('147' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(AVG_SESSION_DURATION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('151' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('151' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('151' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('151' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('151' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('152' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_CONVERSION_RATE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('152' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_CONVERSION_RATE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('152' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_CONVERSION_RATE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('152' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_CONVERSION_RATE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('152' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(GOAL_CONVERSION_RATE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('158' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('158' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('158' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('158' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('158' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Events_Overview  Where 1 = 1 )           \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('163' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TOTAL_EVENTS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('163' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TOTAL_EVENTS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('163' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TOTAL_EVENTS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('163' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TOTAL_EVENTS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('163' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TOTAL_EVENTS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('164' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('164' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('164' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('164' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('164' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('166' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(TIME_ON_PAGE)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('166' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(TIME_ON_PAGE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('166' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(TIME_ON_PAGE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('166' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(TIME_ON_PAGE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('166' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(TIME_ON_PAGE)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('167' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(UNIQUE_PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('167' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(UNIQUE_PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('167' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(UNIQUE_PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('167' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(UNIQUE_PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('167' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        sum(UNIQUE_PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_MKT_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n        \n\n    \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 )   \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('195' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('195' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('195' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('195' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('195' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 )   \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('198' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('198' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('198' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('198' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('198' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 )   \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('199' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('199' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('199' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('199' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('199' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            "}, "error": null, "status": "SUCCESS 1", "execution_time": 119.40944504737854, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:32:18.560695Z", "completed_at": "2021-05-25T04:32:28.007869Z"}, {"name": "execute", "started_at": "2021-05-25T04:32:28.008266Z", "completed_at": "2021-05-25T04:34:17.549428Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "-- depends_on: {{ ref('Dim_TimeFrame') }}\r\n-- depends_on: {{ ref('Dim_Employee') }}\r\n-- depends_on: {{ ref('Dim_Metrics') }}\r\n-- depends_on: {{ ref('Dim_Opportunity') }}\r\n-- depends_on: {{ ref('Dim_Lead') }}\r\n-- depends_on: {{ ref('Dim_Account') }}\r\n-- depends_on: {{ ref('Dim_Contact') }}\r\n-- depends_on: {{ ref('Dim_Engagement') }}\r\n\r\n{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Entity_Schema')~ \".\" ~ var('V_Sales')~\" where DATASOURCE_TYPE in ('SF','HS')\", \"ENTITY_DATASORUCE_NAME||'#'||DATASOURCE_TYPE||'#'||HISTORY_LOAD||'#'||TO_VARCHAR(nvl(HISTORY_START_DATE,HISTORY_ACTUAL_START_DATE):: DATE, 'DD/MM/YYYY')||'#'||TO_VARCHAR(HISTORY_END_DATE::DATE, 'DD/MM/YYYY')\") %}\r\n\r\n{{ config(\r\n    materialized=\"table\"\r\n    ) \r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n{% set entity_name, entity_type,hist_load, hist_strt_dt, hist_end_dt= V_SF_Schema.split('#') %}\r\n\r\n    {% if  entity_type  == 'SF'  %} \r\n        {% if  hist_load  == 'true'  %} \r\n\r\n            {%- for metrics in [(run_metrics_hist_sales(entity_name,'upper(IS_WON) = '\"'\"'TRUE'\"'\"'', '1', '1','Dim_Opportunity','CLOSE_DATE',hist_strt_dt,hist_end_dt)),\r\n                                (run_metrics_hist_sales(entity_name,'upper(IS_WON) = '\"'\"'FALSE'\"'\"' and upper(IS_CLOSED) = '\"'\"'TRUE'\"'\"'', '10', '1','Dim_Opportunity','CLOSE_DATE',hist_strt_dt,hist_end_dt)),\r\n                                (run_metrics_hist_sales(entity_name,'upper(lead_to_opp_flag) = '\"'\"'TRUE'\"'\"'', '3', '4','Dim_Lead','lead_CONVERTED_DATE',hist_strt_dt,hist_end_dt)),\r\n                                (run_metrics_hist_sales(entity_name,'1 = 1', '4', '4','Dim_Lead','initial_create_dt',hist_strt_dt,hist_end_dt)),\r\n                                (run_metrics_hist_sales(entity_name,'upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '23', '2','Dim_Opportunity','initial_create_dt',hist_strt_dt,hist_end_dt)),\r\n                                (run_metrics_hist_sales(entity_name,'1 = 1', '27', '5','Dim_Account','initial_create_dt',hist_strt_dt,hist_end_dt)),\r\n                                (run_metrics_hist_sales(entity_name,'1 = 1', '29', '6','Dim_Contact','initial_create_dt',hist_strt_dt,hist_end_dt)),                    \r\n                            ]  %}\r\n                    (\r\n                        {{ metrics }} \r\n                    )\r\n\r\n                    {% if not loop.last -%}\r\n                        union all\r\n                    {% endif -%}        \r\n            {%- endfor -%} \r\n        {% else -%}     \r\n            {%- for metrics in [(run_metrics_sales(entity_name,'upper(IS_WON) = '\"'\"'TRUE'\"'\"'', '1', '1','Dim_Opportunity','CLOSE_DATE')),\r\n                                (run_metrics_sales(entity_name,'upper(IS_WON) = '\"'\"'FALSE'\"'\"' and upper(IS_CLOSED) = '\"'\"'TRUE'\"'\"'', '10', '1','Dim_Opportunity','CLOSE_DATE')),\r\n                                (run_metrics_sales(entity_name,'upper(lead_to_opp_flag) = '\"'\"'TRUE'\"'\"'', '3', '4','Dim_Lead','initial_create_dt')),\r\n                                (run_metrics_sales(entity_name,'1 = 1', '4', '4','Dim_Lead','initial_create_dt')),\r\n                                (run_metrics_sales(entity_name,'upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '23', '2','Dim_Opportunity','initial_create_dt')),\r\n                                (run_metrics_sales(entity_name,'1 = 1', '27', '5','Dim_Account','initial_create_dt')),\r\n                                (run_metrics_sales(entity_name,'1 = 1', '29', '6','Dim_Contact','initial_create_dt')),                 \r\n                            ]  %}\r\n                    (\r\n                        {{ metrics }}\r\n                    )\r\n\r\n                    {% if not loop.last -%}\r\n                        union all\r\n                    {% endif -%}        \r\n            {%- endfor -%}\r\n        {% endif -%}  \r\n    {% elif  entity_type  == 'HS'  %} \r\n        {% if  hist_load  == 'true'  %} \r\n\r\n            {%- for metrics in [(run_metrics_hist_sales(entity_name,'upper(IS_WON) = '\"'\"'TRUE'\"'\"'', '1', '1','Dim_Opportunity','CLOSE_DATE',hist_strt_dt,hist_end_dt)),\r\n                                (run_metrics_hist_sales(entity_name,'upper(IS_WON) = '\"'\"'FALSE'\"'\"' and upper(IS_CLOSED) = '\"'\"'TRUE'\"'\"'', '10', '1','Dim_Opportunity','CLOSE_DATE',hist_strt_dt,hist_end_dt)),\r\n                                (run_metrics_hist_sales(entity_name,'upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '23', '2','Dim_Opportunity','initial_create_dt',hist_strt_dt,hist_end_dt)),\r\n                                (run_metrics_hist_sales(entity_name,'upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '79', '1','Dim_Opportunity','initial_create_dt',hist_strt_dt,hist_end_dt)),\r\n                                (run_metrics_hist_sales(entity_name,'upper(TYPE) = '\"'\"'CALL'\"'\"'', '39', '1','Dim_Engagement','initial_create_dt',hist_strt_dt,hist_end_dt)),\r\n                                (run_metrics_hist_sales(entity_name,'upper(TYPE) = '\"'\"'TASK'\"'\"'', '89', '1','Dim_Engagement','initial_create_dt',hist_strt_dt,hist_end_dt)),\r\n                                (run_metrics_hist_sales(entity_name,'upper(TYPE) = '\"'\"'MEETING'\"'\"'', '71', '1','Dim_Engagement','initial_create_dt',hist_strt_dt,hist_end_dt)),\r\n                                (run_metrics_hist_sales(entity_name,'upper(TYPE) = '\"'\"'NOTE'\"'\"'', '76', '1','Dim_Engagement','initial_create_dt',hist_strt_dt,hist_end_dt)),\r\n                                (run_metrics_hist_sales(entity_name,'upper(TYPE) = '\"'\"'EMAIL'\"'\"'', '66', '1','Dim_Engagement','initial_create_dt',hist_strt_dt,hist_end_dt)),\r\n                               ]  %}\r\n                    (\r\n                        {{ metrics }}\r\n                    )\r\n\r\n                    {% if not loop.last -%}\r\n                        union all\r\n                    {% endif -%}        \r\n            {%- endfor -%} \r\n        {% else -%}     \r\n            {%- for metrics in [(run_metrics_sales(entity_name,'upper(IS_WON) = '\"'\"'TRUE'\"'\"'', '1', '1','Dim_Opportunity','CLOSE_DATE')),\r\n                                (run_metrics_sales(entity_name,'upper(IS_WON) = '\"'\"'FALSE'\"'\"' and upper(IS_CLOSED) = '\"'\"'TRUE'\"'\"'', '10', '1','Dim_Opportunity','CLOSE_DATE')),\r\n                                (run_metrics_sales(entity_name,'upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '23', '2','Dim_Opportunity','initial_create_dt')) ,                   \r\n                                (run_metrics_hist_sales(entity_name,'upper(IS_CLOSED) = '\"'\"'FALSE'\"'\"'', '79', '1','Dim_Opportunity','initial_create_dt',hist_strt_dt,hist_end_dt)),\r\n                                ]  %}\r\n                    (\r\n                        {{ metrics }}\r\n                    )\r\n\r\n                    {% if not loop.last -%}\r\n                        union all\r\n                    {% endif -%}        \r\n            {%- endfor -%}\r\n        {% endif -%}        \r\n    {% endif -%}   \r\n        {% if not loop.last -%}\r\n            union all\r\n        {% endif -%}     \r\n{%- endfor -%}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Temp_Sales"], "unique_id": "model.sales_dataflo.Temp_Sales", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Temp_Sales.sql", "original_file_path": "ETL/Target/Tables/Temp_Sales.sql", "name": "Temp_Sales", "resource_type": "model", "alias": "Temp_Sales", "checksum": {"name": "sha256", "checksum": "af9acd27ee8624d7a0aefac181da7f8b9c644c690190aba7ccaa12d6a56475ec"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_TimeFrame"], ["Dim_Employee"], ["Dim_Metrics"], ["Dim_Opportunity"], ["Dim_Lead"], ["Dim_Account"], ["Dim_Contact"], ["Dim_Engagement"]], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.sales_dataflo.run_metrics_hist_sales", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Dim_TimeFrame", "model.sales_dataflo.Dim_Employee", "model.sales_dataflo.Dim_Metrics", "model.sales_dataflo.Dim_Opportunity", "model.sales_dataflo.Dim_Lead", "model.sales_dataflo.Dim_Account", "model.sales_dataflo.Dim_Contact", "model.sales_dataflo.Dim_Engagement"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Temp_Sales.sql", "deferred": false, "compiled_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Contact\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Engagement\n\n\n\n\n\n\n\n\n     \n        \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('1' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '1' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'FALSE' and upper(IS_CLOSED) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('10' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '10' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where upper(lead_to_opp_flag) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('3' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( lead_CONVERTED_DATE as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '3' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('4' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '4' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_CLOSED) = 'FALSE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('23' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '23' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('27' as number) as METRIC_ID,\n        cast('5' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '27' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Contact  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('29' as number) as METRIC_ID,\n        cast('6' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '29' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n        \n\n\n     \n        \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('1' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '1' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'FALSE' and upper(IS_CLOSED) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('10' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '10' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_CLOSED) = 'FALSE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('23' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '23' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_CLOSED) = 'FALSE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('79' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '79' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Engagement  Where upper(TYPE) = 'CALL' )  \n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('39' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '39' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Engagement  Where upper(TYPE) = 'TASK' )  \n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('89' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '89' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Engagement  Where upper(TYPE) = 'MEETING' )  \n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('71' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '71' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Engagement  Where upper(TYPE) = 'NOTE' )  \n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('76' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '76' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Engagement  Where upper(TYPE) = 'EMAIL' )  \n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('66' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '66' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    ", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Contact\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Engagement\n\n\n\n\n\n\n\n\n     \n        \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('1' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '1' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'FALSE' and upper(IS_CLOSED) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('10' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '10' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where upper(lead_to_opp_flag) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('3' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( lead_CONVERTED_DATE as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '3' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Lead  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('4' as number) as METRIC_ID,\n        cast('4' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '4' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_CLOSED) = 'FALSE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('23' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '23' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Account  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('27' as number) as METRIC_ID,\n        cast('5' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '27' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Contact  Where 1 = 1 )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('29' as number) as METRIC_ID,\n        cast('6' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '29' = metrics.METRIC_ID\n          where timeframe.source_type = 'SF_RKLIVE_06012021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type \n                    )\n\n                    union all\n        \n\n\n     \n        \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('1' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '1' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_WON) = 'FALSE' and upper(IS_CLOSED) = 'TRUE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('10' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( CLOSE_DATE as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '10' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_CLOSED) = 'FALSE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('23' as number) as METRIC_ID,\n        cast('2' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '23' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity  Where upper(IS_CLOSED) = 'FALSE' )\n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('79' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( Amount  ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '79' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Engagement  Where upper(TYPE) = 'CALL' )  \n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('39' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '39' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Engagement  Where upper(TYPE) = 'TASK' )  \n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('89' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '89' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Engagement  Where upper(TYPE) = 'MEETING' )  \n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('71' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '71' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Engagement  Where upper(TYPE) = 'NOTE' )  \n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('76' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '76' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    union all\n                    \n                    (\n                        with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\n timeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n  ), \nEmp AS\n( SELECT source_Emp_id as Emp_id, Entity_id as Emp_Entity_id , source_type,  TimeFrameID as join_Date FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Employee  \n join timeframe on source_type = timeframe.source_type\n),\nMetrics AS\n( SELECT  METRIC_ID , POINT_IN_TIME FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Metrics \n),\n\n Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Engagement  Where upper(TYPE) = 'EMAIL' )  \n \n,Metrics_Calc AS(\n    SELECT\n        TimeFrameID AS Report_Dt,\n        Emp_Entity_id  AS entity_code,\n        cast (Emp_id AS varchar (100) ) AS employee_code,\n        cast('66' as number) as METRIC_ID,\n        cast('1' as number)  AS METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        metrics.POINT_IN_TIME as POINT_IN_TIME,\n       'USD' AS   Reporting_Currency,\n        sum( 0   ) as AMOUNT,\n        count(SOURCE_ID)  as Count\n     from Emp \n          join timeframe \n          on join_Date = TimeFrameID and Emp.source_type = timeframe.source_type\n          left join Source \n          on cast (Emp.Emp_id AS varchar (1000)) = cast (source.employee_id AS varchar (1000))  and Emp.source_type = source.source_type\n          and cast( initial_create_dt as date) between timeframe.Day_START and timeframe.Day_END \n          join date_range\n          on TimeFrameID = date_range.date_day\n          join Metrics\n          on '66' = metrics.METRIC_ID\n          where timeframe.source_type = 'HS_RKLIVE_01042021'\n        group by\n        Report_Dt,\n        entity_code,\n        employee_code,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n        POINT_IN_TIME,\n        Reporting_Currency        )\n SELECT Report_Dt, entity_code, employee_code,METRIC_ID,METRIC_CATEGORY_ID,POINT_IN_TIME,nvl(amount,0) as Amount, count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average ,  TimeFrame_Type, 'USD'  as Reporting_Currency,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Dt, METRIC_ID, TimeFrame_Type\n                    )\n\n                    "}, "error": null, "status": "SUCCESS 1", "execution_time": 138.97558426856995, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:34:17.972807Z", "completed_at": "2021-05-25T04:34:23.502401Z"}, {"name": "execute", "started_at": "2021-05-25T04:34:23.502788Z", "completed_at": "2021-05-25T04:36:36.530026Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "-- depends_on: {{ ref('Dim_Session') }}\r\n-- depends_on: {{ ref('Dim_Site') }}\r\n-- depends_on: {{ ref('Dim_Page') }}\r\n-- depends_on: {{ ref('Dim_Keyword_Site') }}\r\n-- depends_on: {{ ref('Dim_Calendar') }}\r\n\r\n{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Entity_Schema')~ \".\" ~ var('V_Mkt')~\" where DATASOURCE_TYPE in ('GSC')\", \"ENTITY_DATASORUCE_NAME||'#'||DATASOURCE_TYPE||'#'||HISTORY_LOAD||'#'||TO_VARCHAR(nvl(HISTORY_START_DATE,HISTORY_ACTUAL_START_DATE)::DATE, 'DD/MM/YYYY')||'#'||TO_VARCHAR(HISTORY_END_DATE::DATE, 'DD/MM/YYYY')\") %}\r\n\r\n{{ config(\r\n    materialized=\"table\"\r\n) \r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n{% set entity_name, entity_type,hist_load, hist_strt_dt, hist_end_dt= V_SF_Schema.split('#') %}\r\n      {% if entity_type =='GSC' and hist_load  == 'true' %} \r\n          {%- for metrics in [(run_ad_metrics('1 = 1', '196', '10','Dim_Page','PAGE','Sum(CLICKS)')),   \r\n                    (run_ad_metrics('1 = 1', '197', '10','Dim_Keyword_Site','KEYWORD','Sum(CLICKS)')),\r\n                    (run_ad_metrics('1 = 1', '200', '10','Dim_Page','PAGE','Sum(CTR)')),\r\n                    (run_ad_metrics('1 = 1', '201', '10','Dim_Keyword_Site','KEYWORD','Sum(CTR)')),\r\n                    (run_ad_metrics('1 = 1', '202', '10','Dim_Page','PAGE','Sum(IMPRESSIONS)')),\r\n                    (run_ad_metrics('1 = 1', '204', '10','Dim_Keyword_Site','KEYWORD','Sum(IMPRESSIONS)')),\r\n                    (run_ad_metrics('1 = 1', '205', '10','Dim_Site','COUNTRY','Sum(POSITION)')),\r\n                    (run_ad_metrics('1 = 1', '206', '10','Dim_Site','DEVICE','Sum(POSITION)')),\r\n                    (run_ad_metrics('1 = 1', '207', '10','Dim_Keyword_Site','KEYWORD','Sum(POSITION )')),\r\n                    (run_ad_metrics('1 = 1', '208', '10','Dim_Page','PAGE','Sum(POSITION)')),\r\n                    (run_ad_metrics('1 = 1', '209', '10','Dim_Site','DEVICE','Sum(CLICKS)')),\r\n                    (run_ad_metrics('1 = 1', '210', '10','Dim_Site','SEARCH_TYPE','Sum(CLICKS)')),\r\n                    (run_ad_metrics('1 = 1', '211', '10','Dim_Site','COUNTRY','Sum(IMPRESSIONS)')),\r\n                    (run_ad_metrics('1 = 1', '212', '10','Dim_Site','DEVICE','Sum(IMPRESSIONS)')),\r\n                    (run_ad_metrics('1 = 1', '213', '10','Dim_Site','SEARCH_TYPE','Sum(IMPRESSIONS)')),\r\n                    (run_ad_metrics('1 = 1', '214', '10','Dim_Site','SEARCH_TYPE','Sum(POSITION)')),\r\n                    (run_ad_metrics('1 = 1', '215', '10','Dim_Site','COUNTRY','Sum(CTR)')),\r\n                    (run_ad_metrics('1 = 1', '216', '10','Dim_Site','DEVICE','Sum(CTR)')),\r\n                    (run_ad_metrics('1 = 1', '217', '10','Dim_Site','SEARCH_TYPE','Sum(CTR)')),\r\n                   ]  %}\r\n        (\r\n             {{ metrics }}\r\n        )\r\n\r\n            {% if not loop.last -%}\r\n                union all\r\n            {% endif -%}\r\n        {%- endfor -%} \r\n    {% endif -%}\r\n\r\n{%- endfor -%}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Temp_GSC_Segmented"], "unique_id": "model.sales_dataflo.Temp_GSC_Segmented", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Temp_GSC_Segmented.sql", "original_file_path": "ETL/Target/Tables/Temp_GSC_Segmented.sql", "name": "Temp_GSC_Segmented", "resource_type": "model", "alias": "Temp_GSC_Segmented", "checksum": {"name": "sha256", "checksum": "8a00aba6ae6bdc71d917a0b2ea9be1c4a6ac0187bc3034ee21b244341ec79b40"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_Session"], ["Dim_Site"], ["Dim_Page"], ["Dim_Keyword_Site"], ["Dim_Calendar"]], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.sales_dataflo.run_ad_metrics", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Dim_Session", "model.sales_dataflo.Dim_Site", "model.sales_dataflo.Dim_Page", "model.sales_dataflo.Dim_Keyword_Site", "model.sales_dataflo.Dim_Calendar"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Temp_GSC_Segmented.sql", "deferred": false, "compiled_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Session\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Keyword_Site\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n\n\n\n\n\n\n\n      \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('196' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('196' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('196' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('196' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('196' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Keyword_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('197' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('197' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('197' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('197' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('197' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('200' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('200' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('200' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('200' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('200' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Keyword_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('201' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('201' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('201' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('201' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('201' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('202' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('202' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('202' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('202' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('202' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Keyword_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('204' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('204' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('204' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('204' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('204' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('205' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('205' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('205' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('205' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('205' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('206' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('206' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('206' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('206' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('206' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Keyword_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('207' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(POSITION )  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('207' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(POSITION )  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('207' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(POSITION )  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('207' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(POSITION )  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('207' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(POSITION )  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('208' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('208' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('208' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('208' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('208' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('209' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('209' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('209' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('209' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('209' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('210' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('210' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('210' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('210' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('210' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('211' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('211' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('211' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('211' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('211' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('212' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('212' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('212' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('212' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('212' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('213' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('213' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('213' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('213' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('213' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('214' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('214' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('214' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('214' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('214' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('215' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('215' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('215' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('215' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('215' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('216' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('216' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('216' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('216' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('216' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('217' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('217' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('217' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('217' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('217' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            ", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Session\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Keyword_Site\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n\n\n\n\n\n\n\n      \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('196' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('196' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('196' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('196' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('196' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Keyword_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('197' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('197' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('197' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('197' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('197' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('200' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('200' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('200' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('200' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('200' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Keyword_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('201' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('201' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('201' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('201' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('201' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('202' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('202' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('202' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('202' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('202' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Keyword_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('204' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('204' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('204' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('204' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('204' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('205' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('205' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('205' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('205' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('205' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('206' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('206' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('206' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('206' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('206' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Keyword_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('207' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(POSITION )  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('207' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(POSITION )  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('207' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(POSITION )  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('207' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(POSITION )  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('207' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(POSITION )  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('208' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('208' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('208' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('208' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('208' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('209' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('209' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('209' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('209' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('209' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('210' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('210' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('210' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('210' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('210' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(CLICKS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('211' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('211' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('211' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('211' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('211' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('212' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('212' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('212' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('212' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('212' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('213' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('213' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('213' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('213' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('213' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(IMPRESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('214' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('214' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('214' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('214' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('214' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(POSITION)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('215' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('215' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('215' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('215' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('215' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(COUNTRY as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('216' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('216' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('216' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('216' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('216' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Site  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('217' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('217' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('217' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('217' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('217' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SEARCH_TYPE as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            "}, "error": null, "status": "SUCCESS 1", "execution_time": 57.51073431968689, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:36:36.951018Z", "completed_at": "2021-05-25T04:36:43.085332Z"}, {"name": "execute", "started_at": "2021-05-25T04:36:43.085748Z", "completed_at": "2021-05-25T04:37:34.039599Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "-- depends_on: {{ ref('Dim_Session') }}\r\n-- depends_on: {{ ref('Dim_Channel_Traffic') }}\r\n-- depends_on: {{ ref('Dim_Social_Media_Acquisitions') }}\r\n-- depends_on: {{ ref('Dim_Page_Tracking') }}\r\n-- depends_on: {{ ref('Dim_Goal_Conversions') }}\r\n-- depends_on: {{ ref('Dim_Events_Overview') }}\r\n-- depends_on: {{ ref('Dim_Geo_Network') }}\r\n-- depends_on: {{ ref('Dim_Traffic') }}\r\n-- depends_on: {{ ref('Dim_Adwords_Keyword') }}\r\n-- depends_on: {{ ref('Dim_Platform_Device') }}\r\n-- depends_on: {{ ref('Dim_Calendar') }}\r\n\r\n{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Entity_Schema')~ \".\" ~ var('V_Mkt')~\" where DATASOURCE_TYPE in ('GA')\", \"ENTITY_DATASORUCE_NAME||'#'||DATASOURCE_TYPE||'#'||HISTORY_LOAD||'#'||TO_VARCHAR(nvl(HISTORY_START_DATE,HISTORY_ACTUAL_START_DATE)::DATE, 'DD/MM/YYYY')||'#'||TO_VARCHAR(HISTORY_END_DATE::DATE, 'DD/MM/YYYY')\") %}\r\n\r\n{{ config(\r\n    materialized=\"table\"\r\n) \r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n{% set entity_name, entity_type,hist_load, hist_strt_dt, hist_end_dt= V_SF_Schema.split('#') %}\r\n    {% if entity_type =='GA' and hist_load  == 'true' %} \r\n        {%- for metrics in [(run_metrics('1 = 1', '93', '10','Dim_Platform_Device','DEVICE_CATEGORY','Count(*)')) ,  \r\n                    (run_metrics('1 = 1', '94', '10','Dim_Channel_Traffic','CHANNEL_GROUPING','Sum(SESSIONS)')) , \r\n                    (run_metrics('1 = 1', '95', '10','Dim_Social_Media_Acquisitions','SOCIAL_NETWORK','Count(*)')) , \r\n                    (run_metrics('1 = 1', '99', '10','Dim_Channel_Traffic','CHANNEL_GROUPING','Sum(SESSIONS)')),   \r\n                    (run_metrics('upper(KEYWORD)='\"'\"'ORGANIC'\"'\"'', '101', '10','Dim_Adwords_Keyword','KEYWORD','Sum(SESSIONS)')),\r\n                    (run_metrics('1 = 1', '102', '10','Dim_Channel_Traffic','CHANNEL_GROUPING','Sum(GOAL_COMPLETIONS_ALL)')), \r\n                    (run_metrics('1 = 1', '108', '10','Dim_Goal_Conversions','GOAL_COMPLETION_LOCATION','Sum(GOAL_COMPLETIONS_ALL)')),  \r\n                    (run_metrics('upper(KEYWORD)='\"'\"'PAID'\"'\"'', '109', '10','Dim_Adwords_Keyword','KEYWORD','Sum(SESSIONS)')), \r\n                    (run_metrics('1 = 1', '110', '10','Dim_Channel_Traffic','CHANNEL_GROUPING','Sum(GOAL_VALUE_ALL)')),\r\n                    (run_metrics('1 = 1', '112', '10','Dim_Goal_Conversions','GOAL_COMPLETION_LOCATION','Sum(GOAL_VALUE_ALL)')),   \r\n                    (run_metrics('1 = 1', '114', '10','Dim_Page_Tracking','LANDING_PAGE_PATH','Sum(PAGEVIEWS_PER_SESSION)')),\r\n                    (run_metrics('1 = 1', '115', '10','Dim_Traffic','PAGE_TITLE','Count(*)')),\r\n                    (run_metrics('1 = 1', '120', '10','Dim_Geo_Network','NETWORK_LOCATION','Sum(SESSIONS)')),                    \r\n                    (run_metrics('1 = 1', '125', '10','Dim_Channel_Traffic','CHANNEL_GROUPING','sum(USERS)')),\r\n                    (run_metrics('1 = 1', '130', '10','Dim_Social_Media_Acquisitions','NEW_USERS','sum(PAGEVIEWS)')),\r\n                    (run_metrics('1 = 1', '131', '10','Dim_Events_Overview','EVENT_CATEGORY','sum(SESSIONS_WITH_EVENT)')),\r\n                    (run_metrics('upper(CHANNEL_GROUPING)='\"'\"'ORGANIC'\"'\"'', '139', '10','Dim_Channel_Traffic','USERS','Sum(SESSIONS)'))                  \r\n                   ]  %}\r\n        (\r\n             {{ metrics }}\r\n        )\r\n\r\n            {% if not loop.last -%}\r\n                union all\r\n            {% endif -%}\r\n        {%- endfor -%}   \r\n  \r\n    {% endif -%}\r\n            {% if not loop.last -%}\r\n                union all\r\n            {% endif -%}\r\n{%- endfor -%}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Temp_GA_segmented"], "unique_id": "model.sales_dataflo.Temp_GA_segmented", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Temp_GA_segmented.sql", "original_file_path": "ETL/Target/Tables/Temp_GA_segmented.sql", "name": "Temp_GA_segmented", "resource_type": "model", "alias": "Temp_GA_segmented", "checksum": {"name": "sha256", "checksum": "8c95eb6a4e57bdfeda74e0d290bbf728fd2a3a62d96efbabc04506e151f9fefe"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_Session"], ["Dim_Channel_Traffic"], ["Dim_Social_Media_Acquisitions"], ["Dim_Page_Tracking"], ["Dim_Goal_Conversions"], ["Dim_Events_Overview"], ["Dim_Geo_Network"], ["Dim_Traffic"], ["Dim_Adwords_Keyword"], ["Dim_Platform_Device"], ["Dim_Calendar"]], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.sales_dataflo.run_metrics", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Dim_Session", "model.sales_dataflo.Dim_Channel_Traffic", "model.sales_dataflo.Dim_Social_Media_Acquisitions", "model.sales_dataflo.Dim_Page_Tracking", "model.sales_dataflo.Dim_Goal_Conversions", "model.sales_dataflo.Dim_Events_Overview", "model.sales_dataflo.Dim_Geo_Network", "model.sales_dataflo.Dim_Traffic", "model.sales_dataflo.Dim_Adwords_Keyword", "model.sales_dataflo.Dim_Platform_Device", "model.sales_dataflo.Dim_Calendar"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Temp_GA_segmented.sql", "deferred": false, "compiled_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Session\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Events_Overview\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Geo_Network\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Traffic\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Adwords_Keyword\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Platform_Device\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n\n\n\n\n\n\n\n    \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Platform_Device  Where 1 = 1 )   \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('93' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE_CATEGORY as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('93' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE_CATEGORY as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('93' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE_CATEGORY as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('93' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE_CATEGORY as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('93' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE_CATEGORY as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('94' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('94' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('94' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('94' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('94' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('95' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SOCIAL_NETWORK as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('95' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SOCIAL_NETWORK as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('95' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SOCIAL_NETWORK as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('95' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SOCIAL_NETWORK as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('95' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SOCIAL_NETWORK as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('99' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('99' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('99' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('99' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('99' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Adwords_Keyword  Where upper(KEYWORD)='ORGANIC' )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('101' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('101' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('101' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('101' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('101' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('102' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('102' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('102' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('102' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('102' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('108' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('108' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('108' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('108' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('108' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Adwords_Keyword  Where upper(KEYWORD)='PAID' )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('109' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('109' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('109' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('109' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('109' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('110' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('110' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('110' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('110' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('110' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('112' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('112' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('112' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('112' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('112' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('114' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(LANDING_PAGE_PATH as varchar(1000)) As Segment_name,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('114' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(LANDING_PAGE_PATH as varchar(1000)) As Segment_name,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('114' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(LANDING_PAGE_PATH as varchar(1000)) As Segment_name,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('114' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(LANDING_PAGE_PATH as varchar(1000)) As Segment_name,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('114' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(LANDING_PAGE_PATH as varchar(1000)) As Segment_name,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('115' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE_TITLE as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('115' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE_TITLE as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('115' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE_TITLE as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('115' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE_TITLE as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('115' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE_TITLE as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Geo_Network  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('120' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NETWORK_LOCATION as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('120' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NETWORK_LOCATION as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('120' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NETWORK_LOCATION as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('120' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NETWORK_LOCATION as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('120' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NETWORK_LOCATION as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('125' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        sum(USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('125' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        sum(USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('125' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        sum(USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('125' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        sum(USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('125' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        sum(USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('130' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NEW_USERS as varchar(1000)) As Segment_name,\n        sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('130' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NEW_USERS as varchar(1000)) As Segment_name,\n        sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('130' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NEW_USERS as varchar(1000)) As Segment_name,\n        sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('130' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NEW_USERS as varchar(1000)) As Segment_name,\n        sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('130' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NEW_USERS as varchar(1000)) As Segment_name,\n        sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Events_Overview  Where 1 = 1 )           \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('131' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(EVENT_CATEGORY as varchar(1000)) As Segment_name,\n        sum(SESSIONS_WITH_EVENT)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('131' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(EVENT_CATEGORY as varchar(1000)) As Segment_name,\n        sum(SESSIONS_WITH_EVENT)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('131' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(EVENT_CATEGORY as varchar(1000)) As Segment_name,\n        sum(SESSIONS_WITH_EVENT)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('131' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(EVENT_CATEGORY as varchar(1000)) As Segment_name,\n        sum(SESSIONS_WITH_EVENT)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('131' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(EVENT_CATEGORY as varchar(1000)) As Segment_name,\n        sum(SESSIONS_WITH_EVENT)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where upper(CHANNEL_GROUPING)='ORGANIC' )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(USERS as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(USERS as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(USERS as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(USERS as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(USERS as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n\n    \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Platform_Device  Where 1 = 1 )   \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('93' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE_CATEGORY as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('93' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE_CATEGORY as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('93' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE_CATEGORY as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('93' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE_CATEGORY as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('93' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE_CATEGORY as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('94' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('94' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('94' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('94' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('94' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('95' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SOCIAL_NETWORK as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('95' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SOCIAL_NETWORK as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('95' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SOCIAL_NETWORK as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('95' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SOCIAL_NETWORK as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('95' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SOCIAL_NETWORK as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('99' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('99' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('99' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('99' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('99' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Adwords_Keyword  Where upper(KEYWORD)='ORGANIC' )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('101' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('101' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('101' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('101' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('101' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('102' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('102' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('102' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('102' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('102' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('108' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('108' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('108' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('108' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('108' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Adwords_Keyword  Where upper(KEYWORD)='PAID' )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('109' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('109' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('109' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('109' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('109' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('110' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('110' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('110' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('110' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('110' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('112' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('112' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('112' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('112' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('112' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('114' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(LANDING_PAGE_PATH as varchar(1000)) As Segment_name,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('114' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(LANDING_PAGE_PATH as varchar(1000)) As Segment_name,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('114' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(LANDING_PAGE_PATH as varchar(1000)) As Segment_name,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('114' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(LANDING_PAGE_PATH as varchar(1000)) As Segment_name,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('114' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(LANDING_PAGE_PATH as varchar(1000)) As Segment_name,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('115' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE_TITLE as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('115' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE_TITLE as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('115' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE_TITLE as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('115' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE_TITLE as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('115' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE_TITLE as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Geo_Network  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('120' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NETWORK_LOCATION as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('120' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NETWORK_LOCATION as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('120' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NETWORK_LOCATION as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('120' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NETWORK_LOCATION as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('120' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NETWORK_LOCATION as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('125' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        sum(USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('125' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        sum(USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('125' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        sum(USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('125' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        sum(USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('125' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        sum(USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('130' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NEW_USERS as varchar(1000)) As Segment_name,\n        sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('130' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NEW_USERS as varchar(1000)) As Segment_name,\n        sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('130' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NEW_USERS as varchar(1000)) As Segment_name,\n        sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('130' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NEW_USERS as varchar(1000)) As Segment_name,\n        sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('130' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NEW_USERS as varchar(1000)) As Segment_name,\n        sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Events_Overview  Where 1 = 1 )           \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('131' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(EVENT_CATEGORY as varchar(1000)) As Segment_name,\n        sum(SESSIONS_WITH_EVENT)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('131' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(EVENT_CATEGORY as varchar(1000)) As Segment_name,\n        sum(SESSIONS_WITH_EVENT)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('131' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(EVENT_CATEGORY as varchar(1000)) As Segment_name,\n        sum(SESSIONS_WITH_EVENT)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('131' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(EVENT_CATEGORY as varchar(1000)) As Segment_name,\n        sum(SESSIONS_WITH_EVENT)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('131' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(EVENT_CATEGORY as varchar(1000)) As Segment_name,\n        sum(SESSIONS_WITH_EVENT)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where upper(CHANNEL_GROUPING)='ORGANIC' )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(USERS as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(USERS as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(USERS as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(USERS as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(USERS as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            ", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Session\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Events_Overview\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Geo_Network\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Traffic\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Adwords_Keyword\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Platform_Device\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n\n\n\n\n\n\n\n    \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Platform_Device  Where 1 = 1 )   \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('93' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE_CATEGORY as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('93' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE_CATEGORY as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('93' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE_CATEGORY as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('93' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE_CATEGORY as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('93' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE_CATEGORY as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('94' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('94' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('94' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('94' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('94' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('95' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SOCIAL_NETWORK as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('95' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SOCIAL_NETWORK as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('95' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SOCIAL_NETWORK as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('95' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SOCIAL_NETWORK as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('95' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SOCIAL_NETWORK as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('99' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('99' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('99' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('99' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('99' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Adwords_Keyword  Where upper(KEYWORD)='ORGANIC' )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('101' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('101' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('101' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('101' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('101' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('102' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('102' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('102' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('102' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('102' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('108' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('108' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('108' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('108' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('108' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Adwords_Keyword  Where upper(KEYWORD)='PAID' )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('109' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('109' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('109' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('109' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('109' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('110' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('110' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('110' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('110' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('110' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('112' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('112' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('112' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('112' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('112' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('114' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(LANDING_PAGE_PATH as varchar(1000)) As Segment_name,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('114' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(LANDING_PAGE_PATH as varchar(1000)) As Segment_name,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('114' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(LANDING_PAGE_PATH as varchar(1000)) As Segment_name,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('114' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(LANDING_PAGE_PATH as varchar(1000)) As Segment_name,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('114' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(LANDING_PAGE_PATH as varchar(1000)) As Segment_name,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('115' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE_TITLE as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('115' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE_TITLE as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('115' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE_TITLE as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('115' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE_TITLE as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('115' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE_TITLE as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Geo_Network  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('120' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NETWORK_LOCATION as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('120' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NETWORK_LOCATION as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('120' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NETWORK_LOCATION as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('120' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NETWORK_LOCATION as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('120' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NETWORK_LOCATION as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('125' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        sum(USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('125' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        sum(USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('125' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        sum(USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('125' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        sum(USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('125' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        sum(USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('130' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NEW_USERS as varchar(1000)) As Segment_name,\n        sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('130' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NEW_USERS as varchar(1000)) As Segment_name,\n        sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('130' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NEW_USERS as varchar(1000)) As Segment_name,\n        sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('130' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NEW_USERS as varchar(1000)) As Segment_name,\n        sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('130' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NEW_USERS as varchar(1000)) As Segment_name,\n        sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Events_Overview  Where 1 = 1 )           \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('131' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(EVENT_CATEGORY as varchar(1000)) As Segment_name,\n        sum(SESSIONS_WITH_EVENT)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('131' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(EVENT_CATEGORY as varchar(1000)) As Segment_name,\n        sum(SESSIONS_WITH_EVENT)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('131' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(EVENT_CATEGORY as varchar(1000)) As Segment_name,\n        sum(SESSIONS_WITH_EVENT)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('131' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(EVENT_CATEGORY as varchar(1000)) As Segment_name,\n        sum(SESSIONS_WITH_EVENT)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('131' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(EVENT_CATEGORY as varchar(1000)) As Segment_name,\n        sum(SESSIONS_WITH_EVENT)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where upper(CHANNEL_GROUPING)='ORGANIC' )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(USERS as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(USERS as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(USERS as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(USERS as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(USERS as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n\n    \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Platform_Device  Where 1 = 1 )   \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('93' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE_CATEGORY as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('93' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE_CATEGORY as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('93' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE_CATEGORY as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('93' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE_CATEGORY as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('93' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(DEVICE_CATEGORY as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('94' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('94' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('94' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('94' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('94' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('95' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SOCIAL_NETWORK as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('95' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SOCIAL_NETWORK as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('95' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SOCIAL_NETWORK as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('95' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SOCIAL_NETWORK as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('95' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(SOCIAL_NETWORK as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('99' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('99' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('99' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('99' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('99' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Adwords_Keyword  Where upper(KEYWORD)='ORGANIC' )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('101' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('101' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('101' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('101' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('101' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('102' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('102' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('102' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('102' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('102' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('108' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('108' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('108' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('108' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('108' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_COMPLETIONS_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Adwords_Keyword  Where upper(KEYWORD)='PAID' )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('109' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('109' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('109' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('109' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('109' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(KEYWORD as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('110' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('110' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('110' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('110' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('110' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Goal_Conversions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('112' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('112' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('112' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('112' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('112' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(GOAL_COMPLETION_LOCATION as varchar(1000)) As Segment_name,\n        Sum(GOAL_VALUE_ALL)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Page_Tracking  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('114' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(LANDING_PAGE_PATH as varchar(1000)) As Segment_name,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('114' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(LANDING_PAGE_PATH as varchar(1000)) As Segment_name,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('114' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(LANDING_PAGE_PATH as varchar(1000)) As Segment_name,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('114' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(LANDING_PAGE_PATH as varchar(1000)) As Segment_name,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('114' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(LANDING_PAGE_PATH as varchar(1000)) As Segment_name,\n        Sum(PAGEVIEWS_PER_SESSION)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('115' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE_TITLE as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('115' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE_TITLE as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('115' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE_TITLE as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('115' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE_TITLE as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('115' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(PAGE_TITLE as varchar(1000)) As Segment_name,\n        Count(*)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Geo_Network  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('120' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NETWORK_LOCATION as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('120' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NETWORK_LOCATION as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('120' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NETWORK_LOCATION as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('120' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NETWORK_LOCATION as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('120' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NETWORK_LOCATION as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('125' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        sum(USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('125' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        sum(USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('125' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        sum(USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('125' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        sum(USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('125' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CHANNEL_GROUPING as varchar(1000)) As Segment_name,\n        sum(USERS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Social_Media_Acquisitions  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('130' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NEW_USERS as varchar(1000)) As Segment_name,\n        sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('130' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NEW_USERS as varchar(1000)) As Segment_name,\n        sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('130' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NEW_USERS as varchar(1000)) As Segment_name,\n        sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('130' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NEW_USERS as varchar(1000)) As Segment_name,\n        sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('130' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(NEW_USERS as varchar(1000)) As Segment_name,\n        sum(PAGEVIEWS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Events_Overview  Where 1 = 1 )           \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('131' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(EVENT_CATEGORY as varchar(1000)) As Segment_name,\n        sum(SESSIONS_WITH_EVENT)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('131' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(EVENT_CATEGORY as varchar(1000)) As Segment_name,\n        sum(SESSIONS_WITH_EVENT)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('131' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(EVENT_CATEGORY as varchar(1000)) As Segment_name,\n        sum(SESSIONS_WITH_EVENT)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('131' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(EVENT_CATEGORY as varchar(1000)) As Segment_name,\n        sum(SESSIONS_WITH_EVENT)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('131' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(EVENT_CATEGORY as varchar(1000)) As Segment_name,\n        sum(SESSIONS_WITH_EVENT)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Channel_Traffic  Where upper(CHANNEL_GROUPING)='ORGANIC' )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(USERS as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(USERS as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(USERS as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(USERS as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        Source_type AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('139' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(USERS as varchar(1000)) As Segment_name,\n        Sum(SESSIONS)  as Value\n     from Source \n     join timeframe \n        on source.Date  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.Date <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_SALES_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            "}, "error": null, "status": "SUCCESS 1", "execution_time": 138.78778409957886, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:37:34.464300Z", "completed_at": "2021-05-25T04:37:44.271160Z"}, {"name": "execute", "started_at": "2021-05-25T04:37:44.271567Z", "completed_at": "2021-05-25T04:39:52.826243Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('Dim_Address') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Views", "VW_Address"], "unique_id": "model.sales_dataflo.VW_Address", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Views/VW_Address.sql", "original_file_path": "ETL/Target/Views/VW_Address.sql", "name": "VW_Address", "resource_type": "model", "alias": "VW_Address", "checksum": {"name": "sha256", "checksum": "f0ebbb7edc50e98cad8153165e55fcdbbde9568c33a7923946d19c6559f0f298"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_Address"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Dim_Address"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Views/VW_Address.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Address", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Address"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.536440849304199, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:39:53.254534Z", "completed_at": "2021-05-25T04:39:53.292559Z"}, {"name": "execute", "started_at": "2021-05-25T04:39:53.292794Z", "completed_at": "2021-05-25T04:39:55.367588Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('Dim_Campaign') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Views", "VW_Campaign"], "unique_id": "model.sales_dataflo.VW_Campaign", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Views/VW_Campaign.sql", "original_file_path": "ETL/Target/Views/VW_Campaign.sql", "name": "VW_Campaign", "resource_type": "model", "alias": "VW_Campaign", "checksum": {"name": "sha256", "checksum": "81a5fbb2705d231938ef8396d8391175aba3f01a1d5eda7b06c8cde05dca7dd0"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_Campaign"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Dim_Campaign"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Views/VW_Campaign.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Campaign", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Campaign"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.312889575958252, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:39:55.793601Z", "completed_at": "2021-05-25T04:39:55.820121Z"}, {"name": "execute", "started_at": "2021-05-25T04:39:55.820344Z", "completed_at": "2021-05-25T04:39:57.680915Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('Dim_Opportunity_Stage') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Views", "VW_Opportunity_Stage"], "unique_id": "model.sales_dataflo.VW_Opportunity_Stage", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Views/VW_Opportunity_Stage.sql", "original_file_path": "ETL/Target/Views/VW_Opportunity_Stage.sql", "name": "VW_Opportunity_Stage", "resource_type": "model", "alias": "VW_Opportunity_Stage", "checksum": {"name": "sha256", "checksum": "9a5f130aa5caca211e8f5d343234cb9c22dba59a9f534ac607e850f61aec7c18"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_Opportunity_Stage"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Dim_Opportunity_Stage"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Views/VW_Opportunity_Stage.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity_Stage", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Opportunity_Stage"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.3061225414276123, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:39:58.108964Z", "completed_at": "2021-05-25T04:39:58.134244Z"}, {"name": "execute", "started_at": "2021-05-25T04:39:58.134471Z", "completed_at": "2021-05-25T04:39:59.989335Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "--depends_on: {{ ref('Temp_Sales_Segmented') }}\r\n-- depends_on: {{ ref('Dim_TimeFrame') }}\r\n\r\n{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Entity_Schema')~ \".\" ~ var('V_Sales')~\" where DATASOURCE_TYPE in('SF','HS')\", \"ENTITY_DATASORUCE_NAME||'#'||HISTORY_LOAD||'#'||TO_VARCHAR(nvl(HISTORY_START_DATE,HISTORY_ACTUAL_START_DATE)::DATE, 'DD/MM/YYYY')||'#'||TO_VARCHAR(HISTORY_END_DATE::DATE, 'DD/MM/YYYY')\") %}\r\n{% set pits = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".TEMP_SALES_SEGMENTED\", \"METRIC_ID||'#'||POINT_IN_TIME\") %}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{\r\n    config(\r\n        materialized='incremental',\r\n        unique_key= 'Report_Date'\r\n      )\r\n\t  \r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n{% set entity_name, hist_load, hist_strt_dt, hist_end_dt= V_SF_Schema.split('#') %}\r\n    {% if  hist_load  == 'true' %} \r\n\t\t   {% for V_PIT in pits %}\r\n\t\t   {% set metricid, pit= V_PIT.split('#') %}\r\n\t\t\t\t\t{% if  pit  == 'TRUE' %} \r\n\t\t\t\t\t\t\t{%- for metrics in [(fact_table_pit_segmented_hist(entity_name,metricid,hist_strt_dt,hist_end_dt))                \r\n\t\t\t\t\t\t\t\t  ]  %}\r\n\t\t\t\t\t\t\t\t  (\r\n\t\t\t\t\t\t\t\t  {{ metrics }} as\r\n\t\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t{% if not loop.last -%}\r\n\t\t\t\t\t\t\t\t\tunion all\r\n\t\t\t\t\t\t\t\t{% endif -%}\r\n\t\t\t\t\t\t\t{%- endfor -%}  \r\n\t\t\t\t\t{% else -%}\r\n\t\t\t\t\t\t\t{%- for metrics in [(fact_table_segmented_hist(entity_name,metricid,hist_strt_dt,hist_end_dt))                \r\n\t\t\t\t\t\t\t\t  ]  %}\r\n\t\t\t\t\t\t\t\t  (\r\n\t\t\t\t\t\t\t\t  {{ metrics }}\r\n\t\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t{% if not loop.last -%}\r\n\t\t\t\t\t\t\t\t\tunion all\r\n\t\t\t\t\t\t\t\t{% endif -%}\r\n\t\t\t\t\t\t\t{%- endfor -%}  \r\n\t\t\t\t\t{% endif -%}\r\n\t\t\t    {% if not loop.last -%}\r\n\t\t\t\t\tunion all\r\n\t\t\t\t{% endif -%}\r\n\t\t\t{%- endfor -%} \r\n    {%- else -%}\r\n        {% for V_PIT in pit %}\r\n        {% set metricid, pit= V_PIT.split('#') %}\r\n\t\t\t\t\t{% if  pit  == 'TRUE' %} \r\n\t\t\t\t\t\t{%- for metrics in [(fact_table_pit_segmented(entity_name,metricid))                \r\n\t\t\t\t\t\t\t\t  ]  %}\r\n\t\t\t\t\t\t\t  (\r\n\t\t\t\t\t\t\t  {{ metrics }}\r\n\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t{% if not loop.last -%}\r\n\t\t\t\t\t\t\t\tunion all\r\n\t\t\t\t\t\t\t{% endif -%}\r\n\t\t\t\t\t\t{%- endfor -%}  \r\n\t\t\t\t\t{% else -%}\r\n\t\t\t\t\t\t{%- for metrics in [(fact_table_segmented(entity_name,metricid))                \r\n\t\t\t\t\t\t\t\t  ]  %}\r\n\t\t\t\t\t\t\t\t  (\r\n\t\t\t\t\t\t\t\t  {{ metrics }}\r\n\t\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t{% if not loop.last -%}\r\n\t\t\t\t\t\t\t\tunion all\r\n\t\t\t\t\t\t\t{% endif -%}\r\n\t\t\t\t\t\t{%- endfor -%}  \r\n\t\t\t\t\t{% endif -%}\t\r\n\t\t    {% if not loop.last -%}\r\n\t\t\t\tunion all\r\n\t\t\t{% endif -%}\r\n\t\t{%- endfor -%}\t   \r\n    {% endif -%} \r\n  {% if not loop.last -%}\r\n\t\tunion all\r\n\t{% endif -%}\t\r\n{%- endfor -%}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Fact_Sales_Segmented"], "unique_id": "model.sales_dataflo.Fact_Sales_Segmented", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Fact_Sales_Segmented.sql", "original_file_path": "ETL/Target/Tables/Fact_Sales_Segmented.sql", "name": "Fact_Sales_Segmented", "resource_type": "model", "alias": "Fact_Sales_Segmented", "checksum": {"name": "sha256", "checksum": "41a72e6ec8d3708e6326678d6e423fd90fc4a6c4cb566e5cfe3e2e7aa815457d"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert", "unique_key": "Report_Date"}, "tags": [], "refs": [["Temp_Sales_Segmented"], ["Dim_TimeFrame"]], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.sales_dataflo.fact_table_segmented_hist", "macro.sales_dataflo.fact_table_pit_segmented_hist", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query"], "nodes": ["model.sales_dataflo.Temp_Sales_Segmented", "model.sales_dataflo.Dim_TimeFrame"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/sales_dataflo/ETL/Target/Tables/Fact_Sales_Segmented.sql", "deferred": false, "compiled_sql": "--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame\n\n\n\n\n\n\n\n\n\n\n     \n\t\t   \n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 18\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 18   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 18       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 18     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 18   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 31\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 31   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 31       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 31     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 31   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 68\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 68   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 68       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 68     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 68   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 52\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 52   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 52       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 52     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 52   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 19\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 19   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 19       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 19     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 19   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 32\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 32   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 32       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 32     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 32   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT  * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'PIT' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt <= timeframe.DAY_START and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'TRUE'  and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 5\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n)\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID,Segment_Name, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type as\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 7\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 7   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 7       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 7     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 7   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 28\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 28   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 28       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 28     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 28   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 62\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 62   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 62       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 62     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 62   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 30\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 30   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 30       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 30     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 30   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\n\n     \n\t\t   \n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 18\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 18   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 18       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 18     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 18   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 31\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 31   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 31       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 31     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 31   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 68\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 68   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 68       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 68     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 68   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 52\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 52   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 52       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 52     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 52   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 19\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 19   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 19       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 19     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 19   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 32\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 32   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 32       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 32     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 32   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT  * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'PIT' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt <= timeframe.DAY_START and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'TRUE'  and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 5\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n)\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID,Segment_Name, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type as\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 7\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 7   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 7       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 7     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 7   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 28\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 28   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 28       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 28     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 28   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 62\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 62   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 62       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 62     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 62   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 30\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 30   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 30       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 30     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 30   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame\n\n\n\n\n\n\n\n\n\n\n     \n\t\t   \n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 18\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 18   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 18       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 18     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 18   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 31\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 31   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 31       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 31     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 31   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 68\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 68   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 68       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 68     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 68   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 52\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 52   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 52       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 52     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 52   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 19\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 19   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 19       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 19     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 19   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 32\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 32   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 32       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 32     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 32   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT  * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'PIT' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt <= timeframe.DAY_START and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'TRUE'  and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 5\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n)\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID,Segment_Name, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type as\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 7\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 7   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 7       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 7     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 7   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 28\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 28   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 28       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 28     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 28   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 62\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 62   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 62       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 62     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 62   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 30\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 30   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 30       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 30     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 30   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\n\n     \n\t\t   \n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 18\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 18   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 18       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 18     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 18   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 31\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 31   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 31       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 31     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 31   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 68\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 68   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 68       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 68     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 68   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 52\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 52   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 52       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 52     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 52   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 19\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 19   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 19       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 19     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 19   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 32\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 32   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 32       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 32     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 32   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT  * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'PIT' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt <= timeframe.DAY_START and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'TRUE'  and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 5\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n)\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID,Segment_Name, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type as\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 7\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 7   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 7       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 7     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 7   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 28\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 28   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 28       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 28     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 28   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 62\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 62   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 62       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 62     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 62   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n ),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales_Segmented order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END and Source.entity_code = timeframe.source_type \n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where Source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 30\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 30   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 30       \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 30     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 30   \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        Segment_Name,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, Segment_Name,TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS  from Metrics_Calc\norder by Report_Date, METRIC_ID,Segment_Name, TimeFrame_Type\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t"}, "error": "Database Error in model Fact_Sales_Segmented (ETL/Target/Tables/Fact_Sales_Segmented.sql)\n  001003 (42000): SQL compilation error:\n  syntax error line 2,144 at position 48 unexpected 'as'.\n  syntax error line 5,572 at position 48 unexpected 'as'.\n  compiled SQL at target/compiled/sales_dataflo/ETL/Target/Tables/Fact_Sales_Segmented.sql", "status": "ERROR", "execution_time": 10.155324935913086, "thread_id": "Thread-1", "timing": [], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(enabled=var('ad_reporting__linkedin_ads_enabled')) }}\r\n\r\nwith base as (\r\n\r\n    select *\r\n    from {{ ref('Dim_Ad_LI')}}\r\n\r\n), fields as (\r\n\r\n    select\r\n        cast(date_day as date) as date_day,\r\n        account_name,\r\n        account_id,\r\n        campaign_name,\r\n        cast(campaign_id as {{ dbt_utils.type_string() }}) as campaign_id,\r\n        campaign_group_name as ad_group_name,\r\n        cast(campaign_group_id as {{ dbt_utils.type_string() }}) as ad_group_id,\r\n        coalesce(clicks, 0) as clicks,\r\n        coalesce(impressions, 0) as impressions,\r\n        coalesce(cost, 0) as spend,\r\n        Source_type as platform\r\n    from base\r\n\r\n\r\n)\r\n\r\nselect *\r\nfrom fields", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_LinkedIn"], "unique_id": "model.sales_dataflo.Dim_LinkedIn", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_LinkedIn.sql", "original_file_path": "ETL/Target/Tables/Dim_LinkedIn.sql", "name": "Dim_LinkedIn", "resource_type": "model", "alias": "Dim_LinkedIn", "checksum": {"name": "sha256", "checksum": "358925adf716d3f0d9ed88b4f72def8e12735127dbb6702f5278c42467689f0d"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_Ad_LI"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.type_string", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Dim_Ad_LI"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_LinkedIn.sql", "deferred": false, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Ad_LI\n\n), fields as (\n\n    select\n        cast(date_day as date) as date_day,\n        account_name,\n        account_id,\n        campaign_name,\n        cast(campaign_id as \n    varchar\n) as campaign_id,\n        campaign_group_name as ad_group_name,\n        cast(campaign_group_id as \n    varchar\n) as ad_group_id,\n        coalesce(clicks, 0) as clicks,\n        coalesce(impressions, 0) as impressions,\n        coalesce(cost, 0) as spend,\n        Source_type as platform\n    from base\n\n\n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith base as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Ad_LI\n\n), fields as (\n\n    select\n        cast(date_day as date) as date_day,\n        account_name,\n        account_id,\n        campaign_name,\n        cast(campaign_id as \n    varchar\n) as campaign_id,\n        campaign_group_name as ad_group_name,\n        cast(campaign_group_id as \n    varchar\n) as ad_group_id,\n        coalesce(clicks, 0) as clicks,\n        coalesce(impressions, 0) as impressions,\n        coalesce(cost, 0) as spend,\n        Source_type as platform\n    from base\n\n\n)\n\nselect *\nfrom fields"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.9017159938812256, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:40:10.575630Z", "completed_at": "2021-05-25T04:40:10.601553Z"}, {"name": "execute", "started_at": "2021-05-25T04:40:10.601794Z", "completed_at": "2021-05-25T04:40:13.056594Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(enabled=var('ad_reporting__facebook_ads_enabled')) }}\r\n\r\nwith base as (\r\n\r\n    select *\r\n    from {{ ref('Dim_Ad')}}\r\n\r\n),fields as (\r\n\r\n    select\r\n        cast(date_day as date) as date_day,\r\n        cast(campaign_id as {{ dbt_utils.type_string() }}) as campaign_id,\r\n        campaign_name,\r\n        cast(ad_set_id as {{ dbt_utils.type_string() }}) as ad_group_id,\r\n        ad_set_name as ad_group_name,\r\n        coalesce(clicks, 0) as clicks,\r\n        coalesce(impressions, 0) as impressions,\r\n        coalesce(spend, 0) as spend,\r\n        coalesce(REACH, 0) as REACH,\r\n        coalesce(CPC, 0) as CPC,\r\n        coalesce(CPM, 0) as CPM,\r\n        coalesce(CTR, 0) as CTR,\r\n        coalesce(FREQUENCY, 0) as FREQUENCY,\r\n        Source_type as platform\r\n    from base\r\n    \r\n)\r\n\r\nselect *\r\nfrom fields", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Dim_Facebook"], "unique_id": "model.sales_dataflo.Dim_Facebook", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Dim_Facebook.sql", "original_file_path": "ETL/Target/Tables/Dim_Facebook.sql", "name": "Dim_Facebook", "resource_type": "model", "alias": "Dim_Facebook", "checksum": {"name": "sha256", "checksum": "e79d39ab1cafd93ec849f009380705590aff89ffab0c4a9aa6bb56c118f087d2"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_Ad"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.type_string", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Dim_Ad"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Dim_Facebook.sql", "deferred": false, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Ad\n\n),fields as (\n\n    select\n        cast(date_day as date) as date_day,\n        cast(campaign_id as \n    varchar\n) as campaign_id,\n        campaign_name,\n        cast(ad_set_id as \n    varchar\n) as ad_group_id,\n        ad_set_name as ad_group_name,\n        coalesce(clicks, 0) as clicks,\n        coalesce(impressions, 0) as impressions,\n        coalesce(spend, 0) as spend,\n        coalesce(REACH, 0) as REACH,\n        coalesce(CPC, 0) as CPC,\n        coalesce(CPM, 0) as CPM,\n        coalesce(CTR, 0) as CTR,\n        coalesce(FREQUENCY, 0) as FREQUENCY,\n        Source_type as platform\n    from base\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith base as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Ad\n\n),fields as (\n\n    select\n        cast(date_day as date) as date_day,\n        cast(campaign_id as \n    varchar\n) as campaign_id,\n        campaign_name,\n        cast(ad_set_id as \n    varchar\n) as ad_group_id,\n        ad_set_name as ad_group_name,\n        coalesce(clicks, 0) as clicks,\n        coalesce(impressions, 0) as impressions,\n        coalesce(spend, 0) as spend,\n        coalesce(REACH, 0) as REACH,\n        coalesce(CPC, 0) as CPC,\n        coalesce(CPM, 0) as CPM,\n        coalesce(CTR, 0) as CTR,\n        coalesce(FREQUENCY, 0) as FREQUENCY,\n        Source_type as platform\n    from base\n    \n)\n\nselect *\nfrom fields"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.5737812519073486, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:40:13.479800Z", "completed_at": "2021-05-25T04:40:13.507590Z"}, {"name": "execute", "started_at": "2021-05-25T04:40:13.507851Z", "completed_at": "2021-05-25T04:40:15.632350Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "--depends_on: {{ ref('Temp_Sales') }}\r\n-- depends_on: {{ ref('Dim_TimeFrame') }}\r\n\r\n{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Entity_Schema')~ \".\" ~ var('V_Sales')~\" where DATASOURCE_TYPE in ('SF','HS')\", \"ENTITY_DATASORUCE_NAME||'#'||HISTORY_LOAD||'#'||TO_VARCHAR(nvl(HISTORY_START_DATE,HISTORY_ACTUAL_START_DATE)::DATE, 'DD/MM/YYYY')||'#'||TO_VARCHAR(HISTORY_END_DATE::DATE, 'DD/MM/YYYY')\") %}\r\n{% set pits = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Schema')~ \".TEMP_SALES\", \"METRIC_ID||'#'||POINT_IN_TIME\") %}\r\n\r\n{% if not var(\"enable_SF_source\") %}\r\n{{\r\n    config(\r\n        enabled=false \r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{{ config(\r\n    materialized='incremental',\r\n        unique_key= 'Report_Date'\r\n  )\r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n{% set entity_name, hist_load, hist_strt_dt, hist_end_dt= V_SF_Schema.split('#') %}\r\n    {% if  hist_load  == 'true' %} \r\n\t\t   {% for V_PIT in pits %}\r\n\t\t   {% set metricid, pit= V_PIT.split('#') %}\r\n\t\t\t\t\t{% if  pit  == 'TRUE' %} \r\n\t\t\t\t\t\t\t{%- for metrics in [(fact_table_pit_hist(entity_name,metricid,hist_strt_dt,hist_end_dt))                \r\n\t\t\t\t\t\t\t\t  ]  %}\r\n\t\t\t\t\t\t\t\t  (\r\n\t\t\t\t\t\t\t\t  {{ metrics }} as\r\n\t\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t{% if not loop.last -%}\r\n\t\t\t\t\t\t\t\t\tunion all\r\n\t\t\t\t\t\t\t\t{% endif -%}\r\n\t\t\t\t\t\t\t{%- endfor -%}  \r\n\t\t\t\t\t{% else -%}\r\n\t\t\t\t\t\t\t{%- for metrics in [(fact_table_hist(entity_name,metricid,hist_strt_dt,hist_end_dt))                \r\n\t\t\t\t\t\t\t\t  ]  %}\r\n\t\t\t\t\t\t\t\t  (\r\n\t\t\t\t\t\t\t\t  {{ metrics }} \r\n\t\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t{% if not loop.last -%}\r\n\t\t\t\t\t\t\t\t\tunion all\r\n\t\t\t\t\t\t\t\t{% endif -%}\r\n\t\t\t\t\t\t\t{%- endfor -%}  \r\n\t\t\t\t\t{% endif -%}\r\n\t\t\t    {% if not loop.last -%}\r\n\t\t\t\t\tunion all\r\n\t\t\t\t{% endif -%}\r\n\t\t\t{%- endfor -%} \r\n    {%- else -%}\r\n        {% for V_PIT in pit %}\r\n        {% set metricid, pit= V_PIT.split('#') %}\r\n\t\t\t\t\t{% if  pit  == 'TRUE' %} \r\n\t\t\t\t\t\t{%- for metrics in [(fact_table_pit(entity_name,metricid))                \r\n\t\t\t\t\t\t\t\t  ]  %}\r\n\t\t\t\t\t\t\t  (\r\n\t\t\t\t\t\t\t  {{ metrics }}\r\n\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t{% if not loop.last -%}\r\n\t\t\t\t\t\t\t\tunion all\r\n\t\t\t\t\t\t\t{% endif -%}\r\n\t\t\t\t\t\t{%- endfor -%}  \r\n\t\t\t\t\t{% else -%}\r\n\t\t\t\t\t\t{%- for metrics in [(fact_table(entity_name,metricid))                \r\n\t\t\t\t\t\t\t\t  ]  %}\r\n\t\t\t\t\t\t\t\t  (\r\n\t\t\t\t\t\t\t\t  {{ metrics }}\r\n\t\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t{% if not loop.last -%}\r\n\t\t\t\t\t\t\t\tunion all\r\n\t\t\t\t\t\t\t{% endif -%}\r\n\t\t\t\t\t\t{%- endfor -%}  \r\n\t\t\t\t\t{% endif -%}\t\r\n\t\t    {% if not loop.last -%}\r\n\t\t\t\tunion all\r\n\t\t\t{% endif -%}\r\n\t\t{%- endfor -%}\t   \r\n    {% endif -%} \r\n  {% if not loop.last -%}\r\n\t\tunion all\r\n\t{% endif -%}\t\r\n{%- endfor -%}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Fact_Sales"], "unique_id": "model.sales_dataflo.Fact_Sales", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Fact_Sales.sql", "original_file_path": "ETL/Target/Tables/Fact_Sales.sql", "name": "Fact_Sales", "resource_type": "model", "alias": "Fact_Sales", "checksum": {"name": "sha256", "checksum": "4eef331e5013fa1c41bad18fe87de198e306a4a0f9fbfd21ced3d0222bfce77f"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert", "unique_key": "Report_Date"}, "tags": [], "refs": [["Temp_Sales"], ["Dim_TimeFrame"]], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.sales_dataflo.fact_table_hist", "macro.sales_dataflo.fact_table_pit_hist", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query"], "nodes": ["model.sales_dataflo.Temp_Sales", "model.sales_dataflo.Dim_TimeFrame"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/sales_dataflo/ETL/Target/Tables/Fact_Sales.sql", "deferred": false, "compiled_sql": "--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame\n\n\n\n\n\n\n\n\n\n\n     \n\t\t   \n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 10\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 10     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 10     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 10      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 10    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 4\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 4     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 4     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 4      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 4    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 3\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 3     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 3     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 3      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 3    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 29\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 29     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 29     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 29      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 29    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 27\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 27     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 27     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 27      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 27    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID \n),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'PIT' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt <= timeframe.DAY_START \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'TRUE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 23\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type as\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 71\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 71     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 71     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 71      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 71    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 76\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 76     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 76     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 76      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 76    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 66\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 66     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 66     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 66      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 66    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 89\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 89     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 89     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 89      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 89    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 1\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 1     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 1     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 1      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 1    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 39\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 39     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 39     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 39      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 39    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID \n),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'PIT' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt <= timeframe.DAY_START \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'TRUE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 79\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type as\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\n\n     \n\t\t   \n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 10\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 10     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 10     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 10      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 10    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 4\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 4     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 4     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 4      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 4    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 3\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 3     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 3     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 3      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 3    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 29\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 29     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 29     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 29      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 29    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 27\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 27     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 27     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 27      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 27    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID \n),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'PIT' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt <= timeframe.DAY_START \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'TRUE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 23\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type as\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 71\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 71     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 71     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 71      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 71    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 76\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 76     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 76     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 76      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 76    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 66\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 66     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 66     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 66      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 66    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 89\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 89     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 89     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 89      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 89    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 1\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 1     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 1     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 1      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 1    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 39\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 39     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 39     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 39      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 39    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID \n),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'PIT' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt <= timeframe.DAY_START \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'TRUE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 79\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type as\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "--depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame\n\n\n\n\n\n\n\n\n\n\n     \n\t\t   \n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 10\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 10     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 10     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 10      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 10    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 4\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 4     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 4     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 4      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 4    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 3\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 3     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 3     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 3      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 3    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 29\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 29     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 29     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 29      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 29    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 27\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 27     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 27     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 27      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 27    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID \n),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'PIT' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt <= timeframe.DAY_START \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'TRUE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 23\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type as\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 71\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 71     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 71     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 71      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 71    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 76\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 76     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 76     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 76      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 76    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 66\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 66     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 66     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 66      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 66    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 89\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 89     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 89     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 89      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 89    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 1\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 1     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 1     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 1      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 1    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 39\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 39     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 39     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 39      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 39    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1094\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/02/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/01/2020','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID \n),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'PIT' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt <= timeframe.DAY_START \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'TRUE'   and Source.entity_code = 'SF_RKLIVE_06012021' and Source.METRIC_ID = 79\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type as\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\n\n     \n\t\t   \n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 10\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 10     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 10     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 10      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 10    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 4\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 4     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 4     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 4      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 4    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 3\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 3     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 3     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 3      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 3    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 29\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 29     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 29     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 29      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 29    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 27\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 27     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 27     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 27      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 27    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID \n),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'PIT' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt <= timeframe.DAY_START \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'TRUE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 23\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type as\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 71\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 71     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 71     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 71      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 71    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 76\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 76     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 76     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 76      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 76    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 66\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 66     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 66     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 66      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 66    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 89\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 89     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 89     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 89      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 89    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 1\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 1     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 1     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 1      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 1    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID\n),  \nSource AS\n( SELECT * FROM DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales  order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'D' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.DAY_START and timeframe.DAY_END \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 39\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'W' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.WEEK_START and timeframe.WEEK_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n       Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 39     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'M' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.MONTH_START and timeframe.MONTH_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n         Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 39     \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Q' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.QUARTER_START and timeframe.QUARTER_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 39      \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n     Union\n        SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'Y' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt between timeframe.YEAR_START and timeframe.YEAR_END\n        and Report_Dt <= TimeFrameID and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'FALSE' and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 39    \n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS                        \n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type \n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tunion all\n\t\t\t\t\n\t\t   \n\t\t\t\t\t\n\t\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t\t  with date_range as \n(\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017','dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/03/2021','dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n),\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_TimeFrame \n  join date_range \n  on TimeFrameID = date_range.date_day\n  order by TimeFrameID \n),  \nSource AS\n( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Sales order by Report_Dt\n),\nMetrics_Calc AS(\n    SELECT\n        TimeFrameID as Report_Date,\n        entity_code  AS entity_id,\n       cast (employee_code AS varchar (100) )  AS employee_id,\n        Source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        'PIT' as TimeFrame_Type,\n        sum(AMOUNT) as AMOUNT,\n        sum(count) as COUNT,  \n        'USD'  as Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n    from Source \n        join timeframe \n        on Report_Dt <= timeframe.DAY_START \n        and Source.entity_code = timeframe.source_type\n        join date_range\n        on TimeFrameID = date_range.date_day\n        Where source.POINT_IN_TIME = 'TRUE'   and Source.entity_code = 'HS_RKLIVE_01042021' and Source.METRIC_ID = 79\n    group by\n        Report_Date,\n        entity_id,\n        employee_id,\n        source.METRIC_ID,\n        METRIC_CATEGORY_ID,\n        TimeFrame_Type,\n        Reporting_Currency,\n        Source.DW_SESSION_NM,\n        Source.DW_INS_UPD_DTS\n )\n \nSELECT Report_Date, entity_id, employee_id, METRIC_ID, METRIC_CATEGORY_ID, TimeFrame_Type, AMOUNT, Count, \n        nvl(AMOUNT/decode(count,0,1,count),0) as Average, 'USD'  as Reporting_Currency,  DW_SESSION_NM, DW_INS_UPD_DTS from Metrics_Calc\norder by Report_Date, METRIC_ID, TimeFrame_Type as\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t"}, "error": "Database Error in model Fact_Sales (ETL/Target/Tables/Fact_Sales.sql)\n  001003 (42000): SQL compilation error:\n  syntax error line 1,775 at position 48 unexpected 'as'.\n  syntax error line 3,853 at position 48 unexpected 'as'.\n  syntax error line 5,620 at position 48 unexpected 'as'.\n  syntax error line 7,698 at position 48 unexpected 'as'.\n  compiled SQL at target/compiled/sales_dataflo/ETL/Target/Tables/Fact_Sales.sql", "status": "ERROR", "execution_time": 11.31864309310913, "thread_id": "Thread-1", "timing": [], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "-- depends_on: {{ ref('Temp_GA_segmented') }}\r\n-- depends_on: {{ ref('Temp_GSC_Segmented') }}\r\n\r\n\r\nselect * from {{ ref('Temp_GA_segmented')}}\r\nunion all\r\nselect * from {{ ref('Temp_GSC_Segmented')}}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Fact_Marketing_Segmented"], "unique_id": "model.sales_dataflo.Fact_Marketing_Segmented", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Fact_Marketing_Segmented.sql", "original_file_path": "ETL/Target/Tables/Fact_Marketing_Segmented.sql", "name": "Fact_Marketing_Segmented", "resource_type": "model", "alias": "Fact_Marketing_Segmented", "checksum": {"name": "sha256", "checksum": "d1c05b61a2a9329c5330f843c416150be51198b556ef1064922dd51757b95ae8"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Temp_GA_segmented"], ["Temp_GSC_Segmented"], ["Temp_GA_segmented"], ["Temp_GSC_Segmented"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Temp_GA_segmented", "model.sales_dataflo.Temp_GSC_Segmented", "model.sales_dataflo.Temp_GA_segmented", "model.sales_dataflo.Temp_GSC_Segmented"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Fact_Marketing_Segmented.sql", "deferred": false, "compiled_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_GA_segmented\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_GSC_Segmented\n\n\nselect * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_GA_segmented\nunion all\nselect * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_GSC_Segmented", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_GA_segmented\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_GSC_Segmented\n\n\nselect * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_GA_segmented\nunion all\nselect * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_GSC_Segmented"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.9057624340057373, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:40:27.377129Z", "completed_at": "2021-05-25T04:40:27.427663Z"}, {"name": "execute", "started_at": "2021-05-25T04:40:27.428188Z", "completed_at": "2021-05-25T04:40:29.859944Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "-- depends_on: {{ ref('Dim_LinkedIn') }}\r\n-- depends_on: {{ ref('Dim_Calendar') }}\r\n\r\n\r\n{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Entity_Schema')~ \".\" ~ var('V_Mkt')~\" where DATASOURCE_TYPE in ('LI_ADS')\", \"ENTITY_DATASORUCE_NAME||'#'||DATASOURCE_TYPE||'#'||HISTORY_LOAD||'#'||TO_VARCHAR(nvl(HISTORY_START_DATE,HISTORY_ACTUAL_START_DATE)::DATE, 'DD/MM/YYYY')||'#'||TO_VARCHAR(HISTORY_END_DATE::DATE, 'DD/MM/YYYY')\") %}\r\n\r\n{{ config(\r\n    materialized=\"table\"\r\n) \r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n{% set entity_name, entity_type,hist_load, hist_strt_dt, hist_end_dt= V_SF_Schema.split('#') %}\r\n    {% if entity_type =='LI_ADS' and hist_load  == 'true' %} \r\n         {%- for metrics in [(run_ads_ns_metrics('1 = 1', '172', '10','Dim_LinkedIn','Sum(spend)')) ,  \r\n                    (run_ads_ns_metrics('1 = 1', '173', '10','Dim_LinkedIn','Sum(clicks)')) , \r\n                    (run_ads_ns_metrics('1 = 1', '175', '10','Dim_LinkedIn','Sum(impressions)')),   \r\n                    (run_ads_ns_metrics('1 = 1', '177', '10','Dim_LinkedIn','Sum(clicks)/ decode(Sum(impressions),0,1,nvl(Sum(impressions),1))')),\r\n                    (run_ads_ns_metrics('1 = 1', '179', '10','Dim_LinkedIn','Sum(spend)/ decode(Sum(clicks),0,1,nvl(Sum(clicks),1))')),\r\n                   ]  %}\r\n        (\r\n             {{ metrics }}\r\n        )\r\n\r\n            {% if not loop.last -%}\r\n                union all\r\n            {% endif -%}\r\n        {%- endfor -%} \r\n\r\n    {% endif -%}\r\n{%- endfor -%}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Temp_Linkedin"], "unique_id": "model.sales_dataflo.Temp_Linkedin", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Temp_Linkedin.sql", "original_file_path": "ETL/Target/Tables/Temp_Linkedin.sql", "name": "Temp_Linkedin", "resource_type": "model", "alias": "Temp_Linkedin", "checksum": {"name": "sha256", "checksum": "cd0c9d735b95710c7c287a3d5eabcedc85f83ab44176035727b9ee04aa7b4dd1"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_LinkedIn"], ["Dim_Calendar"]], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.sales_dataflo.run_ads_ns_metrics", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Dim_LinkedIn", "model.sales_dataflo.Dim_Calendar"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Temp_Linkedin.sql", "deferred": false, "compiled_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n\n\n\n\n\n\n\n\n    \n        (\n             \nWith Source AS\n   ( select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)/ decode(Sum(impressions),0,1,nvl(Sum(impressions),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)/ decode(Sum(impressions),0,1,nvl(Sum(impressions),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)/ decode(Sum(impressions),0,1,nvl(Sum(impressions),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)/ decode(Sum(impressions),0,1,nvl(Sum(impressions),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)/ decode(Sum(impressions),0,1,nvl(Sum(impressions),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)/ decode(Sum(clicks),0,1,nvl(Sum(clicks),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)/ decode(Sum(clicks),0,1,nvl(Sum(clicks),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)/ decode(Sum(clicks),0,1,nvl(Sum(clicks),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)/ decode(Sum(clicks),0,1,nvl(Sum(clicks),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)/ decode(Sum(clicks),0,1,nvl(Sum(clicks),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            ", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n\n\n\n\n\n\n\n\n    \n        (\n             \nWith Source AS\n   ( select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)/ decode(Sum(impressions),0,1,nvl(Sum(impressions),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)/ decode(Sum(impressions),0,1,nvl(Sum(impressions),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)/ decode(Sum(impressions),0,1,nvl(Sum(impressions),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)/ decode(Sum(impressions),0,1,nvl(Sum(impressions),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)/ decode(Sum(impressions),0,1,nvl(Sum(impressions),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)/ decode(Sum(clicks),0,1,nvl(Sum(clicks),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)/ decode(Sum(clicks),0,1,nvl(Sum(clicks),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)/ decode(Sum(clicks),0,1,nvl(Sum(clicks),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)/ decode(Sum(clicks),0,1,nvl(Sum(clicks),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)/ decode(Sum(clicks),0,1,nvl(Sum(clicks),1))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            "}, "error": null, "status": "SUCCESS 1", "execution_time": 46.90218758583069, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:40:30.436092Z", "completed_at": "2021-05-25T04:40:33.113124Z"}, {"name": "execute", "started_at": "2021-05-25T04:40:33.113375Z", "completed_at": "2021-05-25T04:41:16.918086Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with base as (\r\n\r\n    select *\r\n    from {{ ref('Dim_LinkedIn')}}\r\n\r\n),\r\ndate_range as \r\n(\r\n\r\n    {{ dbt_utils.date_spine(\r\n        datepart=\"day\",\r\n        start_date=\"to_date('01/01/2021', 'dd/mm/yyyy')\",\r\n        end_date=\"dateadd(week, 53, current_date)\"\r\n       )\r\n    }}\r\n) ,\r\ntimeframe as (\r\n  select * from {{ ref('Dim_Calendar') }} \r\n  join date_range \r\n  on CALENDAR_ID = date_range.date_day\r\n  order by CALENDAR_ID \r\n)\r\nselect \r\n    'A' as platform,\r\n        Calendar_ID as Repot_date,\r\n        '100' as Metric_ID,\r\n        'W' as TimeFrame_Type,\r\n        Sum(clicks) as Sum_clicks,\r\n        Sum(impressions) as Sum_impressions,\r\n        Sum(spend) as Sum_spend,\r\n        Sum(clicks)/ Sum(impressions) as CTR_Click\r\nfrom base\r\njoin timeframe \r\n        on base.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\r\n        and base.date_day <= Calendar_ID\r\n        join date_range\r\n        on Calendar_ID = date_range.date_day         \r\ngroup by platform, \r\nRepot_date,\r\nMetric_ID,\r\nTimeFrame_Type", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "test"], "unique_id": "model.sales_dataflo.test", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/test.sql", "original_file_path": "ETL/Target/Tables/test.sql", "name": "test", "resource_type": "model", "alias": "test", "checksum": {"name": "sha256", "checksum": "be619b8fa3ec67990f4c8d1da7725cc679ae3b944495feccab3cec2927126fe9"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_LinkedIn"], ["Dim_Calendar"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.date_spine", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Dim_LinkedIn", "model.sales_dataflo.Dim_Calendar"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/test.sql", "deferred": false, "compiled_sql": "with base as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn\n\n),\ndate_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 514\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2021', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= dateadd(week, 53, current_date)\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\nselect \n    'A' as platform,\n        Calendar_ID as Repot_date,\n        '100' as Metric_ID,\n        'W' as TimeFrame_Type,\n        Sum(clicks) as Sum_clicks,\n        Sum(impressions) as Sum_impressions,\n        Sum(spend) as Sum_spend,\n        Sum(clicks)/ Sum(impressions) as CTR_Click\nfrom base\njoin timeframe \n        on base.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and base.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day         \ngroup by platform, \nRepot_date,\nMetric_ID,\nTimeFrame_Type", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with base as (\n\n    select *\n    from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn\n\n),\ndate_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 514\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2021', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= dateadd(week, 53, current_date)\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\nselect \n    'A' as platform,\n        Calendar_ID as Repot_date,\n        '100' as Metric_ID,\n        'W' as TimeFrame_Type,\n        Sum(clicks) as Sum_clicks,\n        Sum(impressions) as Sum_impressions,\n        Sum(spend) as Sum_spend,\n        Sum(clicks)/ Sum(impressions) as CTR_Click\nfrom base\njoin timeframe \n        on base.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and base.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day         \ngroup by platform, \nRepot_date,\nMetric_ID,\nTimeFrame_Type"}, "error": null, "status": "SUCCESS 1", "execution_time": 3.65507435798645, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:41:17.340761Z", "completed_at": "2021-05-25T04:41:19.211428Z"}, {"name": "execute", "started_at": "2021-05-25T04:41:19.211711Z", "completed_at": "2021-05-25T04:41:20.571160Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "-- depends_on: {{ ref('Dim_Calendar') }}\r\n-- depends_on: {{ ref('Dim_Facebook') }}\r\n\r\n{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Entity_Schema')~ \".\" ~ var('V_Mkt')~\" where DATASOURCE_TYPE in ('GA_ADS','LI_ADS','FB_ADS')\", \"ENTITY_DATASORUCE_NAME||'#'||DATASOURCE_TYPE||'#'||HISTORY_LOAD||'#'||TO_VARCHAR(nvl(HISTORY_START_DATE,HISTORY_ACTUAL_START_DATE)::DATE, 'DD/MM/YYYY')||'#'||TO_VARCHAR(HISTORY_END_DATE::DATE, 'DD/MM/YYYY')\") %}\r\n\r\n{{ config(\r\n    materialized=\"table\"\r\n) \r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n{% set entity_name, entity_type,hist_load, hist_strt_dt, hist_end_dt= V_SF_Schema.split('#') %}\r\n    {% if entity_type =='FB_ADS' and hist_load  == 'true' %} \r\n          {%- for metrics in [(run_ads_ns_metrics('1 = 1', '172', '10','Dim_Facebook','Sum(spend)')) ,  \r\n                    (run_ads_ns_metrics('1 = 1', '173', '10','Dim_Facebook','Sum(clicks)')) , \r\n                    (run_ads_ns_metrics('1 = 1', '175', '10','Dim_Facebook','Sum(impressions)')),   \r\n                    (run_ads_ns_metrics('1 = 1', '177', '10','Dim_Facebook','Sum(CTR)')),\r\n                    (run_ads_ns_metrics('1 = 1', '179', '10','Dim_Facebook','Sum(CPC)')),\r\n                    (run_ads_ns_metrics('1 = 1', '188', '10','Dim_Facebook','Sum(CPM)')),\r\n                    (run_ads_ns_metrics('1 = 1', '189', '10','Dim_Facebook','Sum(REACH)')),\r\n                    (run_ads_ns_metrics('1 = 1', '190 ', '10','Dim_Facebook','Sum(FREQUENCY)')),\r\n                   ]  %}\r\n        (\r\n             {{ metrics }}\r\n        )\r\n\r\n            {% if not loop.last -%}\r\n                union all\r\n            {% endif -%}\r\n        {%- endfor -%} \r\n \r\n\r\n    {% endif -%}\r\n \r\n {%- endfor -%}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Temp_Facebook"], "unique_id": "model.sales_dataflo.Temp_Facebook", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Temp_Facebook.sql", "original_file_path": "ETL/Target/Tables/Temp_Facebook.sql", "name": "Temp_Facebook", "resource_type": "model", "alias": "Temp_Facebook", "checksum": {"name": "sha256", "checksum": "3294a4450cabe479e75ee323c7f192928a87bcf23f4bb3ada2a09e6307d20c0f"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_Calendar"], ["Dim_Facebook"]], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.sales_dataflo.run_ads_ns_metrics", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Dim_Calendar", "model.sales_dataflo.Dim_Facebook"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Temp_Facebook.sql", "deferred": false, "compiled_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook\n\n\n\n\n\n\n\n    \n\n    \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CPC)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CPC)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CPC)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CPC)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CPC)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('188' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CPM)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('188' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CPM)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('188' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CPM)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('188' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CPM)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('188' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CPM)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('189' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(REACH)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('189' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(REACH)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('189' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(REACH)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('189' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(REACH)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('189' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(REACH)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('190 ' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(FREQUENCY)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('190 ' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(FREQUENCY)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('190 ' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(FREQUENCY)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('190 ' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(FREQUENCY)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('190 ' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(FREQUENCY)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            \n\n    ", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook\n\n\n\n\n\n\n\n    \n\n    \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('172' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('173' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(clicks)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('175' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('177' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CPC)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CPC)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CPC)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CPC)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('179' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CPC)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('188' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CPM)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('188' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CPM)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('188' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CPM)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('188' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CPM)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('188' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(CPM)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('189' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(REACH)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('189' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(REACH)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('189' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(REACH)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('189' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(REACH)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('189' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(REACH)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('190 ' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(FREQUENCY)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('190 ' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(FREQUENCY)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('190 ' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(FREQUENCY)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('190 ' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(FREQUENCY)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('190 ' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n        Sum(FREQUENCY)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID            \n    )\n        SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type, Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            \n\n    "}, "error": null, "status": "SUCCESS 1", "execution_time": 64.41578483581543, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:41:20.998377Z", "completed_at": "2021-05-25T04:41:24.421904Z"}, {"name": "execute", "started_at": "2021-05-25T04:41:24.422274Z", "completed_at": "2021-05-25T04:42:24.993824Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "-- depends_on: {{ ref('Dim_LinkedIn') }}\r\n-- depends_on: {{ ref('Dim_GA_Ads') }}\r\n-- depends_on: {{ ref('Dim_Calendar') }}\r\n-- depends_on: {{ ref('Dim_Facebook') }}\r\n\r\n{% set results = get_column_values_from_query(\"select * from \" ~ var('V_DB') ~ \".\" ~ var('V_Entity_Schema')~ \".\" ~ var('V_Mkt')~\" where DATASOURCE_TYPE in ('GA_ADS','LI_ADS','FB_ADS')\", \"ENTITY_DATASORUCE_NAME||'#'||DATASOURCE_TYPE||'#'||HISTORY_LOAD||'#'||TO_VARCHAR(nvl(HISTORY_START_DATE,HISTORY_ACTUAL_START_DATE)::DATE, 'DD/MM/YYYY')||'#'||TO_VARCHAR(HISTORY_END_DATE::DATE, 'DD/MM/YYYY')\") %}\r\n\r\n{{ config(\r\n    materialized=\"table\"\r\n) \r\n}}\r\n\r\n{% for V_SF_Schema in results %}\r\n{% set entity_name, entity_type,hist_load, hist_strt_dt, hist_end_dt= V_SF_Schema.split('#') %}\r\n    \r\n    {% if entity_type =='LI_ADS' and hist_load  == 'true' %} \r\n         {%- for metrics in [(run_ad_metrics('1 = 1', '174', '10','Dim_LinkedIn','AD_GROUP_NAME','Sum(spend)')) , \r\n                    (run_ad_metrics('1 = 1', '176', '10','Dim_LinkedIn','CAMPAIGN_NAME','Sum(impressions)')),   \r\n                    (run_ad_metrics('1 = 1', '178', '10','Dim_LinkedIn','CAMPAIGN_NAME','Sum(clicks)/ (decode(Sum(impressions),0,1,Sum(impressions)))')),\r\n                    (run_ad_metrics('1 = 1', '180', '10','Dim_LinkedIn','CAMPAIGN_NAME','Sum(spend)/ (decode(Sum(clicks),0,1,Sum(clicks)))')),\r\n                   ]  %}\r\n        (\r\n             {{ metrics }}\r\n        )\r\n\r\n            {% if not loop.last -%}\r\n                union all\r\n            {% endif -%}\r\n        {%- endfor -%} \r\n    {% endif -%}\r\n\r\n    {% if entity_type =='FB_ADS' and hist_load  == 'true' %} \r\n          {%- for metrics in [(run_ad_metrics('1 = 1', '176', '10','Dim_Facebook','CAMPAIGN_NAME','Sum(impressions)')),   \r\n                    (run_ad_metrics('1 = 1', '178', '10','Dim_Facebook','CAMPAIGN_NAME','Sum(CTR)')),\r\n                    (run_ad_metrics('1 = 1', '180', '10','Dim_Facebook','CAMPAIGN_NAME','Sum(CPC)')),\r\n                   ]  %}\r\n        (\r\n             {{ metrics }}\r\n        )\r\n\r\n            {% if not loop.last -%}\r\n                union all\r\n            {% endif -%}\r\n        {%- endfor -%} \r\n\r\n        {% elif entity_type =='GA_ADS' and hist_load  == 'true' %} \r\n         {%- for metrics in [(run_ad_metrics('1 = 1', '178', '10','Dim_GA_Ads','CAMPAIGN_NAME','Sum(clicks)/ (decode(Sum(impressions),0,1,Sum(impressions)))')),\r\n                    (run_ad_metrics('1 = 1', '180', '10','Dim_GA_Ads','CAMPAIGN_NAME','Sum(spend)/ (decode(Sum(clicks),0,1,Sum(clicks)))')),\r\n                   ]  %}\r\n        (\r\n             {{ metrics }}\r\n        )\r\n\r\n            {% if not loop.last -%}\r\n                union all\r\n            {% endif -%}\r\n        {%- endfor -%} \r\n  \r\n    {% endif -%}\r\n    {% if not loop.last -%}\r\n                union all\r\n            {% endif -%}\r\n\r\n{%- endfor -%}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Fact_AD_Model_Segmented"], "unique_id": "model.sales_dataflo.Fact_AD_Model_Segmented", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Fact_AD_Model_Segmented.sql", "original_file_path": "ETL/Target/Tables/Fact_AD_Model_Segmented.sql", "name": "Fact_AD_Model_Segmented", "resource_type": "model", "alias": "Fact_AD_Model_Segmented", "checksum": {"name": "sha256", "checksum": "a233e996534ae2f6dc689bf79fae6e81f5b8bf8d233bc80c021eed1e9d185599"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Dim_LinkedIn"], ["Dim_GA_Ads"], ["Dim_Calendar"], ["Dim_Facebook"]], "sources": [], "depends_on": {"macros": ["macro.sales_dataflo.get_column_values_from_query", "macro.sales_dataflo.run_ad_metrics", "macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.sales_dataflo.Dim_LinkedIn", "model.sales_dataflo.Dim_GA_Ads", "model.sales_dataflo.Dim_Calendar", "model.sales_dataflo.Dim_Facebook"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Fact_AD_Model_Segmented.sql", "deferred": false, "compiled_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_GA_Ads\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook\n\n\n\n\n\n\n\n    \n    \n        (\n             \nWith Source AS\n   ( select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('174' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(AD_GROUP_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('174' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(AD_GROUP_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('174' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(AD_GROUP_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('174' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(AD_GROUP_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('174' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(AD_GROUP_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('176' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('176' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('176' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('176' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('176' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(clicks)/ (decode(Sum(impressions),0,1,Sum(impressions)))  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(clicks)/ (decode(Sum(impressions),0,1,Sum(impressions)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(clicks)/ (decode(Sum(impressions),0,1,Sum(impressions)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(clicks)/ (decode(Sum(impressions),0,1,Sum(impressions)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(clicks)/ (decode(Sum(impressions),0,1,Sum(impressions)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)/ (decode(Sum(clicks),0,1,Sum(clicks)))  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)/ (decode(Sum(clicks),0,1,Sum(clicks)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)/ (decode(Sum(clicks),0,1,Sum(clicks)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)/ (decode(Sum(clicks),0,1,Sum(clicks)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)/ (decode(Sum(clicks),0,1,Sum(clicks)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n\n    \n    \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('176' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('176' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('176' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('176' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('176' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(CPC)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(CPC)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(CPC)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(CPC)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(CPC)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n\n    \n    \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_GA_Ads  Where 1 = 1 )               \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(clicks)/ (decode(Sum(impressions),0,1,Sum(impressions)))  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(clicks)/ (decode(Sum(impressions),0,1,Sum(impressions)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(clicks)/ (decode(Sum(impressions),0,1,Sum(impressions)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(clicks)/ (decode(Sum(impressions),0,1,Sum(impressions)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(clicks)/ (decode(Sum(impressions),0,1,Sum(impressions)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_GA_Ads  Where 1 = 1 )               \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)/ (decode(Sum(clicks),0,1,Sum(clicks)))  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)/ (decode(Sum(clicks),0,1,Sum(clicks)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)/ (decode(Sum(clicks),0,1,Sum(clicks)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)/ (decode(Sum(clicks),0,1,Sum(clicks)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)/ (decode(Sum(clicks),0,1,Sum(clicks)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            ", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_GA_Ads\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook\n\n\n\n\n\n\n\n    \n    \n        (\n             \nWith Source AS\n   ( select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('174' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(AD_GROUP_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('174' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(AD_GROUP_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('174' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(AD_GROUP_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('174' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(AD_GROUP_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('174' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(AD_GROUP_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('176' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('176' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('176' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('176' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('176' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(clicks)/ (decode(Sum(impressions),0,1,Sum(impressions)))  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(clicks)/ (decode(Sum(impressions),0,1,Sum(impressions)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(clicks)/ (decode(Sum(impressions),0,1,Sum(impressions)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(clicks)/ (decode(Sum(impressions),0,1,Sum(impressions)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(clicks)/ (decode(Sum(impressions),0,1,Sum(impressions)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_LinkedIn  Where 1 = 1 )\n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)/ (decode(Sum(clicks),0,1,Sum(clicks)))  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)/ (decode(Sum(clicks),0,1,Sum(clicks)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)/ (decode(Sum(clicks),0,1,Sum(clicks)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)/ (decode(Sum(clicks),0,1,Sum(clicks)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)/ (decode(Sum(clicks),0,1,Sum(clicks)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n\n    \n    \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('176' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('176' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('176' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('176' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('176' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(impressions)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(CTR)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Facebook  Where 1 = 1 ) \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(CPC)  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(CPC)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(CPC)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(CPC)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(CPC)  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n\n    \n    \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_GA_Ads  Where 1 = 1 )               \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(clicks)/ (decode(Sum(impressions),0,1,Sum(impressions)))  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(clicks)/ (decode(Sum(impressions),0,1,Sum(impressions)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(clicks)/ (decode(Sum(impressions),0,1,Sum(impressions)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(clicks)/ (decode(Sum(impressions),0,1,Sum(impressions)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('178' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(clicks)/ (decode(Sum(impressions),0,1,Sum(impressions)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            union all\n            \n        (\n             \nWith Source AS\n   ( SELECT * FROM  DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_GA_Ads  Where 1 = 1 )               \n \n,date_range as \n(\n\n    \n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * pow(2, 0)\n     + \n    \n    p1.generated_number * pow(2, 1)\n     + \n    \n    p2.generated_number * pow(2, 2)\n     + \n    \n    p3.generated_number * pow(2, 3)\n     + \n    \n    p4.generated_number * pow(2, 4)\n     + \n    \n    p5.generated_number * pow(2, 5)\n     + \n    \n    p6.generated_number * pow(2, 6)\n     + \n    \n    p7.generated_number * pow(2, 7)\n     + \n    \n    p8.generated_number * pow(2, 8)\n     + \n    \n    p9.generated_number * pow(2, 9)\n     + \n    \n    p10.generated_number * pow(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1611\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n  \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2017', 'dd/mm/yyyy')\n        )\n\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= to_date('31/05/2021', 'dd/mm/yyyy')\n\n)\n\nselect * from filtered\n\n\n) ,\ntimeframe as (\n  select * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Dim_Calendar \n  join date_range \n  on CALENDAR_ID = date_range.date_day\n  order by CALENDAR_ID \n)\n,Metrics_Calc AS(\n    SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'D' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)/ (decode(Sum(clicks),0,1,Sum(clicks)))  as Value\n     from Source \n     join timeframe \n        on source.date_day = Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n         group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n    \n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'W' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)/ (decode(Sum(clicks),0,1,Sum(clicks)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.WEEK_START_DATE and timeframe.WEEK_END_DATE\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'M' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)/ (decode(Sum(clicks),0,1,Sum(clicks)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_MNTH_STRT_DT and timeframe.CLDR_MNTH_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Q' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)/ (decode(Sum(clicks),0,1,Sum(clicks)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_QTR_STRT_DT and timeframe.CLDR_QTR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name\n\n    union\n         SELECT\n        Calendar_ID as Report_Date,\n        platform  AS entity_code,\n        'Y' as TimeFrame_Type,\n        cast('180' as number) as METRIC_ID,\n        cast('10' as number)  AS METRIC_CATEGORY_ID,\n\t\tcast(CAMPAIGN_NAME as varchar(1000)) As Segment_name,\n        Sum(spend)/ (decode(Sum(clicks),0,1,Sum(clicks)))  as Value\n     from Source \n     join timeframe \n        on source.date_day  between timeframe.CLDR_YEAR_START_DT and timeframe.CLDR_YEAR_END_DT\n        and source.date_day <= Calendar_ID\n        join date_range\n        on Calendar_ID = date_range.date_day    \n        group by\n        Report_Date,\n        entity_code,\n        TimeFrame_Type,\n        METRIC_ID,\n        METRIC_CATEGORY_ID,\n\t\tSegment_name            \n    )\n SELECT Report_Date, entity_code, METRIC_ID,METRIC_CATEGORY_ID, TimeFrame_Type,Segment_name,Value,'D_ADS_FACT_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS from Metrics_Calc\n      order by Report_Date, METRIC_ID\n        )\n\n            "}, "error": null, "status": "SUCCESS 1", "execution_time": 76.47909736633301, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:42:25.416658Z", "completed_at": "2021-05-25T04:42:29.205646Z"}, {"name": "execute", "started_at": "2021-05-25T04:42:29.205925Z", "completed_at": "2021-05-25T04:43:41.475258Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "-- depends_on: {{ ref('Temp_GA_ADs') }}\r\n-- depends_on: {{ ref('Temp_Facebook') }}\r\n-- depends_on: {{ ref('Temp_Linkedin') }}\r\n\r\n\r\nselect * from {{ ref('Temp_GA_ADs')}}\r\nunion all\r\nselect * from {{ ref('Temp_Facebook')}}\r\nunion all\r\nselect * from {{ ref('Temp_Linkedin')}}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_salesdataflo", "fqn": ["sales_dataflo", "Target", "Tables", "Fact_AD_Model"], "unique_id": "model.sales_dataflo.Fact_AD_Model", "package_name": "sales_dataflo", "root_path": "/usr/src/develop/user-10139/environment-14955/repository-12142", "path": "Target/Tables/Fact_AD_Model.sql", "original_file_path": "ETL/Target/Tables/Fact_AD_Model.sql", "name": "Fact_AD_Model", "resource_type": "model", "alias": "Fact_AD_Model", "checksum": {"name": "sha256", "checksum": "54f86d6cb6b99936efb85550ebd2b1876d78c538ace3f5e0068caafd00cdc22f"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "incremental_strategy": "delete+insert"}, "tags": [], "refs": [["Temp_GA_ADs"], ["Temp_Facebook"], ["Temp_Linkedin"], ["Temp_GA_ADs"], ["Temp_Facebook"], ["Temp_Linkedin"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.sales_dataflo.Temp_GA_ADs", "model.sales_dataflo.Temp_Facebook", "model.sales_dataflo.Temp_Linkedin", "model.sales_dataflo.Temp_GA_ADs", "model.sales_dataflo.Temp_Facebook", "model.sales_dataflo.Temp_Linkedin"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/sales_dataflo/ETL/Target/Tables/Fact_AD_Model.sql", "deferred": false, "compiled_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_GA_ADs\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Facebook\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Linkedin\n\n\nselect * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_GA_ADs\nunion all\nselect * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Facebook\nunion all\nselect * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Linkedin", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_GA_ADs\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Facebook\n-- depends_on: DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Linkedin\n\n\nselect * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_GA_ADs\nunion all\nselect * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Facebook\nunion all\nselect * from DATAFLOTEST_DATABASE.dbt_salesdataflo.Temp_Linkedin"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.544250965118408, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-25T04:43:41.898250Z", "completed_at": "2021-05-25T04:43:41.938113Z"}, {"name": "execute", "started_at": "2021-05-25T04:43:41.938414Z", "completed_at": "2021-05-25T04:43:44.008766Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2021-05-25T04:43:46.339400Z", "elapsed_time": 1105.8471744060516}